{"version":3,"file":"ngx-openlayers.js.map","sources":["ng://ngx-openlayers/lib/map.component.ts","ng://ngx-openlayers/lib/view.component.ts","ng://ngx-openlayers/lib/graticule.component.ts","ng://ngx-openlayers/lib/layers/layer.component.ts","ng://ngx-openlayers/lib/layers/layergroup.component.ts","ng://ngx-openlayers/lib/layers/layerimage.component.ts","ng://ngx-openlayers/lib/layers/layertile.component.ts","ng://ngx-openlayers/lib/layers/layervector.component.ts","ng://ngx-openlayers/lib/layers/layervectortile.component.ts","ng://ngx-openlayers/lib/sources/source.component.ts","ng://ngx-openlayers/lib/tilegrid.component.ts","ng://ngx-openlayers/lib/sources/raster.component.ts","ng://ngx-openlayers/lib/sources/xyz.component.ts","ng://ngx-openlayers/lib/sources/osm.component.ts","ng://ngx-openlayers/lib/sources/bingmaps.component.ts","ng://ngx-openlayers/lib/sources/vector.component.ts","ng://ngx-openlayers/lib/sources/cluster.component.ts","ng://ngx-openlayers/lib/tilegridwmts.component.ts","ng://ngx-openlayers/lib/sources/tilewmts.component.ts","ng://ngx-openlayers/lib/formats/format.component.ts","ng://ngx-openlayers/lib/sources/vectortile.component.ts","ng://ngx-openlayers/lib/sources/tilewms.component.ts","ng://ngx-openlayers/lib/sources/tilejson.component.ts","ng://ngx-openlayers/lib/sources/geojson.component.ts","ng://ngx-openlayers/lib/sources/imagestatic.component.ts","ng://ngx-openlayers/lib/sources/imagewms.component.ts","ng://ngx-openlayers/lib/sources/imagearcgisrest.component.ts","ng://ngx-openlayers/lib/feature.component.ts","ng://ngx-openlayers/lib/geom/simplegeometry.component.ts","ng://ngx-openlayers/lib/geom/geometrycircle.component.ts","ng://ngx-openlayers/lib/geom/geometrylinestring.component.ts","ng://ngx-openlayers/lib/geom/geometrymultilinestring.component.ts","ng://ngx-openlayers/lib/geom/geometrymultipoint.component.ts","ng://ngx-openlayers/lib/geom/geometrymultipolygon.component.ts","ng://ngx-openlayers/lib/geom/geometrypoint.component.ts","ng://ngx-openlayers/lib/geom/geometrypolygon.component.ts","ng://ngx-openlayers/lib/content.component.ts","ng://ngx-openlayers/lib/overlay.component.ts","ng://ngx-openlayers/lib/coordinate.component.ts","ng://ngx-openlayers/lib/collectioncoordinates.component.ts","ng://ngx-openlayers/lib/styles/style.component.ts","ng://ngx-openlayers/lib/styles/circle.component.ts","ng://ngx-openlayers/lib/styles/text.component.ts","ng://ngx-openlayers/lib/styles/stroke.component.ts","ng://ngx-openlayers/lib/styles/icon.component.ts","ng://ngx-openlayers/lib/styles/fill.component.ts","ng://ngx-openlayers/lib/controls/default.component.ts","ng://ngx-openlayers/lib/controls/control.component.ts","ng://ngx-openlayers/lib/controls/attribution.component.ts","ng://ngx-openlayers/lib/controls/fullscreen.component.ts","ng://ngx-openlayers/lib/controls/mouseposition.component.ts","ng://ngx-openlayers/lib/controls/overviewmap.component.ts","ng://ngx-openlayers/lib/controls/rotate.component.ts","ng://ngx-openlayers/lib/controls/scaleline.component.ts","ng://ngx-openlayers/lib/controls/zoom.component.ts","ng://ngx-openlayers/lib/controls/zoomslider.component.ts","ng://ngx-openlayers/lib/controls/zoomtoextent.component.ts","ng://ngx-openlayers/lib/formats/mvt.component.ts","ng://ngx-openlayers/lib/interactions/default.component.ts","ng://ngx-openlayers/lib/interactions/doubleclickzoom.component.ts","ng://ngx-openlayers/lib/interactions/draganddrop.component.ts","ng://ngx-openlayers/lib/interactions/dragbox.component.ts","ng://ngx-openlayers/lib/interactions/dragpan.component.ts","ng://ngx-openlayers/lib/interactions/dragrotate.component.ts","ng://ngx-openlayers/lib/interactions/dragrotateandzoom.component.ts","ng://ngx-openlayers/lib/interactions/dragzoom.component.ts","ng://ngx-openlayers/lib/interactions/mousewheelzoom.component.ts","ng://ngx-openlayers/lib/interactions/pinchzoom.component.ts","ng://ngx-openlayers/lib/interactions/draw.component.ts","ng://ngx-openlayers/lib/interactions/select.component.ts","ng://ngx-openlayers/lib/interactions/modify.component.ts","ng://ngx-openlayers/lib/interactions/translate.component.ts","ng://ngx-openlayers/lib/attribution.component.ts","ng://ngx-openlayers/lib/attributions.component.ts","ng://ngx-openlayers/lib/sources/utfgrid.component.ts","ng://ngx-openlayers/lib/sources/source-mapbox-vector-tile.component.ts","ng://ngx-openlayers/public_api.ts"],"sourcesContent":["import {\r\n  Component,\r\n  OnInit,\r\n  ElementRef,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  AfterViewInit,\r\n  SimpleChanges,\r\n  OnChanges,\r\n} from '@angular/core';\r\nimport Map from 'ol/Map';\r\nimport MapBrowserEvent from 'ol/MapBrowserEvent';\r\nimport MapEvent from 'ol/MapEvent';\r\nimport ObjectEvent from 'ol/Object';\r\nimport RenderEvent from 'ol/render/Event';\r\nimport { Control } from 'ol/control';\r\nimport { Interaction } from 'ol/interaction';\r\n\r\n@Component({\r\n  selector: 'aol-map',\r\n  template: `\r\n    <div [style.width]=\"width\" [style.height]=\"height\"></div>\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class MapComponent implements OnInit, AfterViewInit, OnChanges {\r\n  public instance: Map;\r\n  public componentType = 'map';\r\n\r\n  @Input()\r\n  width = '100%';\r\n  @Input()\r\n  height = '100%';\r\n  @Input()\r\n  pixelRatio: number;\r\n  @Input()\r\n  keyboardEventTarget: Element | string;\r\n  @Input()\r\n  loadTilesWhileAnimating: boolean;\r\n  @Input()\r\n  loadTilesWhileInteracting: boolean;\r\n  @Input()\r\n  logo: string | boolean;\r\n  @Input()\r\n  renderer: 'canvas' | 'webgl';\r\n\r\n  @Output()\r\n  onClick: EventEmitter<MapBrowserEvent>;\r\n  @Output()\r\n  onDblClick: EventEmitter<MapBrowserEvent>;\r\n  @Output()\r\n  onMoveEnd: EventEmitter<MapEvent>;\r\n  @Output()\r\n  onPointerDrag: EventEmitter<MapBrowserEvent>;\r\n  @Output()\r\n  onPointerMove: EventEmitter<MapBrowserEvent>;\r\n  @Output()\r\n  onPostCompose: EventEmitter<RenderEvent>;\r\n  @Output()\r\n  onPostRender: EventEmitter<MapEvent>;\r\n  @Output()\r\n  onPreCompose: EventEmitter<RenderEvent>;\r\n  @Output()\r\n  onPropertyChange: EventEmitter<ObjectEvent>;\r\n  @Output()\r\n  onSingleClick: EventEmitter<MapBrowserEvent>;\r\n\r\n  // we pass empty arrays to not get default controls/interactions because we have our own directives\r\n  controls: Control[] = [];\r\n  interactions: Interaction[] = [];\r\n\r\n  constructor(private host: ElementRef) {\r\n    this.onClick = new EventEmitter<MapBrowserEvent>();\r\n    this.onDblClick = new EventEmitter<MapBrowserEvent>();\r\n    this.onMoveEnd = new EventEmitter<MapEvent>();\r\n    this.onPointerDrag = new EventEmitter<MapBrowserEvent>();\r\n    this.onPointerMove = new EventEmitter<MapBrowserEvent>();\r\n    this.onPostCompose = new EventEmitter<RenderEvent>();\r\n    this.onPostRender = new EventEmitter<MapEvent>();\r\n    this.onPreCompose = new EventEmitter<RenderEvent>();\r\n    this.onPropertyChange = new EventEmitter<ObjectEvent>();\r\n    this.onSingleClick = new EventEmitter<MapBrowserEvent>();\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.Map instance with:', this);\r\n    this.instance = new Map(this);\r\n    this.instance.setTarget(this.host.nativeElement.firstElementChild);\r\n    this.instance.on('click', (event: MapBrowserEvent) => this.onClick.emit(event));\r\n    this.instance.on('dblclick', (event: MapBrowserEvent) => this.onDblClick.emit(event));\r\n    this.instance.on('moveend', (event: MapEvent) => this.onMoveEnd.emit(event));\r\n    this.instance.on('pointerdrag', (event: MapBrowserEvent) => this.onPointerDrag.emit(event));\r\n    this.instance.on('pointermove', (event: MapBrowserEvent) => this.onPointerMove.emit(event));\r\n    this.instance.on('postcompose', (event: RenderEvent) => this.onPostCompose.emit(event));\r\n    this.instance.on('postrender', (event: MapEvent) => this.onPostRender.emit(event));\r\n    this.instance.on('precompose', (event: RenderEvent) => this.onPreCompose.emit(event));\r\n    this.instance.on('propertychange', (event: ObjectEvent) => this.onPropertyChange.emit(event));\r\n    this.instance.on('singleclick', (event: MapBrowserEvent) => this.onSingleClick.emit(event));\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const properties: { [index: string]: any } = {};\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    for (const key in changes) {\r\n      if (changes.hasOwnProperty(key)) {\r\n        properties[key] = changes[key].currentValue;\r\n      }\r\n    }\r\n    // console.log('changes detected in aol-map, setting new properties: ', properties);\r\n    this.instance.setProperties(properties, false);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.instance.updateSize();\r\n  }\r\n}\r\n","import { Component, Input, OnInit, OnChanges, OnDestroy, SimpleChanges, EventEmitter, Output } from '@angular/core';\r\nimport View from 'ol/View';\r\nimport { MapComponent } from './map.component';\r\nimport { ObjectEvent } from 'ol';\r\nimport { Extent } from 'ol/extent';\r\nimport { Coordinate } from 'ol/coordinate';\r\n\r\n@Component({\r\n  selector: 'aol-view',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ViewComponent implements OnInit, OnChanges, OnDestroy {\r\n  public instance: View;\r\n  public componentType = 'view';\r\n\r\n  @Input()\r\n  constrainRotation: boolean | number;\r\n  @Input()\r\n  enableRotation: boolean;\r\n  @Input()\r\n  extent: Extent;\r\n  @Input()\r\n  maxResolution: number;\r\n  @Input()\r\n  minResolution: number;\r\n  @Input()\r\n  maxZoom: number;\r\n  @Input()\r\n  minZoom: number;\r\n  @Input()\r\n  resolution: number;\r\n  @Input()\r\n  resolutions: number[];\r\n  @Input()\r\n  rotation: number;\r\n  @Input()\r\n  zoom: number;\r\n  @Input()\r\n  zoomFactor: number;\r\n  @Input()\r\n  center: Coordinate;\r\n  @Input()\r\n  projection: string;\r\n  @Input()\r\n  zoomAnimation = false;\r\n\r\n  @Output()\r\n  onChangeZoom: EventEmitter<ObjectEvent> = new EventEmitter<ObjectEvent>();\r\n  @Output()\r\n  onChangeResolution: EventEmitter<ObjectEvent> = new EventEmitter<ObjectEvent>();\r\n  @Output()\r\n  onChangeCenter: EventEmitter<ObjectEvent> = new EventEmitter<ObjectEvent>();\r\n\r\n  constructor(private host: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.View instance with: ', this);\r\n    this.instance = new View(this);\r\n    this.host.instance.setView(this.instance);\r\n\r\n    this.instance.on('change:zoom', (event: ObjectEvent) => this.onChangeZoom.emit(event));\r\n    this.instance.on('change:resolution', (event: ObjectEvent) => this.onChangeResolution.emit(event));\r\n    this.instance.on('change:center', (event: ObjectEvent) => this.onChangeCenter.emit(event));\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const properties: { [index: string]: any } = {};\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    for (const key in changes) {\r\n      if (changes.hasOwnProperty(key)) {\r\n        switch (key) {\r\n          case 'zoom':\r\n            /** Work-around: setting the zoom via setProperties does not work. */\r\n            if (this.zoomAnimation) {\r\n              this.instance.animate({ zoom: changes[key].currentValue });\r\n            } else {\r\n              this.instance.setZoom(changes[key].currentValue);\r\n            }\r\n            break;\r\n          case 'projection':\r\n            this.instance = new View(this);\r\n            this.host.instance.setView(this.instance);\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        properties[key] = changes[key].currentValue;\r\n      }\r\n    }\r\n    // console.log('changes detected in aol-view, setting new properties: ', properties);\r\n    this.instance.setProperties(properties, false);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-view');\r\n  }\r\n}\r\n","import { Component, Input, AfterContentInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { Graticule } from 'ol';\r\nimport { Stroke } from 'ol/style';\r\nimport { MapComponent } from './map.component';\r\n\r\n@Component({\r\n  selector: 'aol-graticule',\r\n  template: '<ng-content></ng-content>',\r\n})\r\nexport class GraticuleComponent implements AfterContentInit, OnChanges {\r\n  instance: any;\r\n  public componentType = 'graticule';\r\n\r\n  @Input()\r\n  strokeStyle: Stroke;\r\n  @Input()\r\n  showLabels: boolean;\r\n  @Input()\r\n  lonLabelPosition: number;\r\n  @Input()\r\n  latLabelPosition: number;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const properties: { [index: string]: any } = {};\r\n\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n\r\n    for (const key in changes) {\r\n      if (changes.hasOwnProperty(key)) {\r\n        properties[key] = changes[key].currentValue;\r\n      }\r\n    }\r\n\r\n    if (properties) {\r\n      this.instance = new Graticule(properties);\r\n    }\r\n    this.instance.setMap(this.map.instance);\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this.instance = new Graticule({\r\n      strokeStyle: this.strokeStyle,\r\n      showLabels: this.showLabels,\r\n      lonLabelPosition: this.lonLabelPosition,\r\n      latLabelPosition: this.latLabelPosition,\r\n    });\r\n    this.instance.setMap(this.map.instance);\r\n  }\r\n}\r\n","import { OnDestroy, OnInit, OnChanges, Input, SimpleChanges } from '@angular/core';\r\nimport { Event } from 'ol/events';\r\nimport { MapComponent } from '../map.component';\r\nimport { LayerGroupComponent } from './layergroup.component';\r\nimport { Extent } from 'ol/extent';\r\n\r\nexport abstract class LayerComponent implements OnInit, OnChanges, OnDestroy {\r\n  public instance: any;\r\n  public componentType = 'layer';\r\n\r\n  @Input()\r\n  opacity: number;\r\n  @Input()\r\n  visible: boolean;\r\n  @Input()\r\n  extent: Extent;\r\n  @Input()\r\n  zIndex: number;\r\n  @Input()\r\n  minResolution: number;\r\n  @Input()\r\n  maxResolution: number;\r\n\r\n  @Input()\r\n  precompose: (evt: Event) => void;\r\n  @Input()\r\n  postcompose: (evt: Event) => void;\r\n\r\n  constructor(protected host: MapComponent | LayerGroupComponent) {}\r\n\r\n  ngOnInit() {\r\n    if (this.precompose !== null && this.precompose !== undefined) {\r\n      this.instance.on('precompose', this.precompose);\r\n    }\r\n    if (this.postcompose !== null && this.postcompose !== undefined) {\r\n      this.instance.on('postcompose', this.postcompose);\r\n    }\r\n    this.host.instance.getLayers().push(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.host.instance.getLayers().remove(this.instance);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const properties: { [index: string]: any } = {};\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    for (const key in changes) {\r\n      if (changes.hasOwnProperty(key)) {\r\n        properties[key] = changes[key].currentValue;\r\n        if (key === 'precompose') {\r\n          this.instance.un('precompose', changes[key].previousValue);\r\n          this.instance.on('precompose', changes[key].currentValue);\r\n        }\r\n        if (key === 'postcompose') {\r\n          this.instance.un('postcompose', changes[key].previousValue);\r\n          this.instance.on('postcompose', changes[key].currentValue);\r\n        }\r\n      }\r\n    }\r\n    // console.log('changes detected in aol-layer, setting new properties: ', properties);\r\n    this.instance.setProperties(properties, false);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, SkipSelf, Optional } from '@angular/core';\r\nimport { Group } from 'ol/layer';\r\nimport { LayerComponent } from './layer.component';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-layer-group',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class LayerGroupComponent extends LayerComponent implements OnInit, OnDestroy {\r\n  public instance: Group;\r\n\r\n  constructor(\r\n    map: MapComponent,\r\n    @SkipSelf()\r\n    @Optional()\r\n    group?: LayerGroupComponent\r\n  ) {\r\n    super(group || map);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log(`creating ol.layer.Group instance with:`, this);\r\n    this.instance = new Group(this);\r\n    super.ngOnInit();\r\n  }\r\n}\r\n","import { Component, Input, OnChanges, OnInit, Optional, SimpleChanges } from '@angular/core';\r\nimport { Image } from 'ol/layer';\r\nimport { MapComponent } from '../map.component';\r\nimport { LayerComponent } from './layer.component';\r\nimport { LayerGroupComponent } from './layergroup.component';\r\nimport { Extent } from 'ol/extent';\r\n\r\n@Component({\r\n  selector: 'aol-layer-image',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class LayerImageComponent extends LayerComponent implements OnInit, OnChanges {\r\n  public source: Image;\r\n\r\n  @Input()\r\n  opacity: number;\r\n  @Input()\r\n  visible: boolean;\r\n  @Input()\r\n  extent: Extent;\r\n  @Input()\r\n  minResolution: number;\r\n  @Input()\r\n  maxResolution: number;\r\n  @Input()\r\n  zIndex: number;\r\n\r\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\r\n    super(group || map);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new Image(this);\r\n    super.ngOnInit();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    super.ngOnChanges(changes);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input, Optional, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { Tile } from 'ol/layer';\r\nimport { MapComponent } from '../map.component';\r\nimport { LayerComponent } from './layer.component';\r\nimport { LayerGroupComponent } from './layergroup.component';\r\n\r\n@Component({\r\n  selector: 'aol-layer-tile',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class LayerTileComponent extends LayerComponent implements OnInit, OnDestroy, OnChanges {\r\n  public source: Tile;\r\n\r\n  @Input()\r\n  preload: number;\r\n  @Input()\r\n  useInterimTilesOnError: boolean;\r\n\r\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\r\n    super(group || map);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.layer.Tile instance with:', this);\r\n    this.instance = new Tile(this);\r\n    super.ngOnInit();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    super.ngOnChanges(changes);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input, Optional, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { MapComponent } from '../map.component';\r\nimport { Vector } from 'ol/layer';\r\nimport { Style } from 'ol/style';\r\nimport { StyleFunction } from 'ol/style/Style';\r\nimport { LayerComponent } from './layer.component';\r\nimport { LayerGroupComponent } from './layergroup.component';\r\n\r\n@Component({\r\n  selector: 'aol-layer-vector',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class LayerVectorComponent extends LayerComponent implements OnInit, OnDestroy, OnChanges {\r\n  public source: Vector;\r\n\r\n  @Input()\r\n  renderBuffer: number;\r\n\r\n  @Input()\r\n  style: Style | Style[] | StyleFunction;\r\n\r\n  @Input()\r\n  updateWhileAnimating: boolean;\r\n\r\n  @Input()\r\n  updateWhileInteracting: boolean;\r\n\r\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\r\n    super(group || map);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.layer.Vector instance with:', this);\r\n    this.instance = new Vector(this);\r\n    super.ngOnInit();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    super.ngOnChanges(changes);\r\n  }\r\n}\r\n","import {Component, OnInit, Input, Optional, SimpleChanges, OnChanges} from '@angular/core';\r\nimport {VectorTile} from 'ol/layer';\r\nimport {RenderType} from 'ol/layer/VectorTile';\r\nimport {Feature} from 'ol';\r\nimport {Style} from 'ol/style';\r\nimport {MapComponent} from '../map.component';\r\nimport {LayerComponent} from './layer.component';\r\nimport {LayerGroupComponent} from './layergroup.component';\r\nimport {StyleFunction} from 'ol/style/Style';\r\n\r\n@Component({\r\n  selector: 'aol-layer-vectortile',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class LayerVectorTileComponent extends LayerComponent implements OnInit, OnChanges {\r\n  @Input()\r\n  renderBuffer: number;\r\n  @Input()\r\n  renderMode: RenderType | string;\r\n  /* not marked as optional in the typings */\r\n  @Input()\r\n  renderOrder: (feature1: Feature, feature2: Feature) => number;\r\n  @Input()\r\n  style: Style | Style[] | StyleFunction;\r\n  @Input()\r\n  updateWhileAnimating: boolean;\r\n  @Input()\r\n  updateWhileInteracting: boolean;\r\n  @Input()\r\n  visible: boolean;\r\n  @Input()\r\n  declutter: boolean;\r\n\r\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\r\n    super(group || map);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.layer.VectorTile instance with:', this);\r\n    this.instance = new VectorTile(this);\r\n    super.ngOnInit();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    super.ngOnChanges(changes);\r\n  }\r\n}\r\n","import { Input, OnDestroy } from '@angular/core';\r\nimport { Source } from 'ol';\r\nimport { LayerComponent } from '../layers/layer.component';\r\nimport { SourceRasterComponent } from './raster.component';\r\n\r\nexport class SourceComponent implements OnDestroy {\r\n  public instance: Source;\r\n  public componentType = 'source';\r\n\r\n  @Input()\r\n  attributions: any;\r\n\r\n  constructor(protected host: LayerComponent, protected raster?: SourceRasterComponent) {}\r\n\r\n  ngOnDestroy() {\r\n    if (this.host && this.host.instance) {\r\n      this.host.instance.setSource(null);\r\n    }\r\n\r\n    if (this.raster) {\r\n      this.raster.sources = [];\r\n    }\r\n  }\r\n\r\n  protected _register(s: Source) {\r\n    if (this.host) {\r\n      this.host.instance.setSource(s);\r\n    }\r\n\r\n    if (this.raster) {\r\n      this.raster.sources = [s];\r\n      this.raster.init();\r\n    }\r\n  }\r\n}\r\n","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { createXYZ } from 'ol/tilegrid';\r\nimport TileGrid from 'ol/tilegrid/TileGrid';\r\nimport { Extent } from 'ol/extent';\r\nimport { Coordinate } from 'ol/coordinate';\r\nimport { Size } from 'ol/size';\r\n\r\n@Component({\r\n  selector: 'aol-tilegrid',\r\n  template: '',\r\n})\r\nexport class TileGridComponent implements OnInit, OnChanges {\r\n  instance: TileGrid;\r\n\r\n  @Input()\r\n  extent: Extent;\r\n  @Input()\r\n  maxZoom: number;\r\n  @Input()\r\n  minZoom: number;\r\n  @Input()\r\n  tileSize: number | Size;\r\n  @Input()\r\n  origin?: Coordinate;\r\n  @Input()\r\n  resolutions: number[];\r\n\r\n  ngOnInit() {\r\n    if (!this.resolutions) {\r\n      this.instance = createXYZ(this);\r\n    } else {\r\n      this.instance = new TileGrid(this);\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (!this.resolutions) {\r\n      this.instance = createXYZ(this);\r\n    } else {\r\n      this.instance = new TileGrid(this);\r\n    }\r\n  }\r\n}\r\n","import { AfterContentInit, Component, EventEmitter, forwardRef, Host, Input, Output } from '@angular/core';\r\nimport { Raster, Source } from 'ol/source';\r\nimport { RasterOperationType, RasterSourceEvent } from 'ol/source/Raster';\r\nimport { LayerImageComponent } from '../layers/layerimage.component';\r\nimport { SourceComponent } from './source.component';\r\nimport { Operation } from 'ol/source/Raster';\r\n\r\n@Component({\r\n  selector: 'aol-source-raster',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [\r\n    {\r\n      provide: SourceComponent,\r\n      useExisting: forwardRef(() => SourceRasterComponent),\r\n    },\r\n  ],\r\n})\r\nexport class SourceRasterComponent extends SourceComponent implements AfterContentInit {\r\n  instance: Raster;\r\n\r\n  @Input()\r\n  operation?: Operation;\r\n  @Input()\r\n  threads?: number;\r\n  @Input()\r\n  lib?: Object;\r\n  @Input()\r\n  operationType?: RasterOperationType;\r\n\r\n  @Output()\r\n  beforeOperations: EventEmitter<RasterSourceEvent> = new EventEmitter<RasterSourceEvent>();\r\n  @Output()\r\n  afterOperations: EventEmitter<RasterSourceEvent> = new EventEmitter<RasterSourceEvent>();\r\n\r\n  sources: Source[] = [];\r\n\r\n  constructor(@Host() layer: LayerImageComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    this.instance = new Raster(this);\r\n    this.instance.on('beforeoperations', (event: RasterSourceEvent) => this.beforeOperations.emit(event));\r\n    this.instance.on('afteroperations', (event: RasterSourceEvent) => this.afterOperations.emit(event));\r\n    this._register(this.instance);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Host,\r\n  Input,\r\n  AfterContentInit,\r\n  forwardRef,\r\n  OnChanges,\r\n  ContentChild,\r\n  SimpleChanges,\r\n  Optional,\r\n  Output,\r\n  EventEmitter,\r\n} from '@angular/core';\r\nimport { XYZ } from 'ol/source';\r\nimport { LayerTileComponent } from '../layers/layertile.component';\r\nimport { SourceComponent } from './source.component';\r\nimport { TileGridComponent } from '../tilegrid.component';\r\nimport { SourceRasterComponent } from './raster.component';\r\nimport { Size } from 'ol/size';\r\nimport { TileSourceEvent } from 'ol/source/Tile';\r\nimport TileGrid from 'ol/tilegrid/TileGrid';\r\nimport { LoadFunction, UrlFunction } from 'ol/Tile';\r\n\r\n@Component({\r\n  selector: 'aol-source-xyz',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceXYZComponent) }],\r\n})\r\nexport class SourceXYZComponent extends SourceComponent implements AfterContentInit, OnChanges {\r\n  instance: XYZ;\r\n  @Input()\r\n  cacheSize: number;\r\n  @Input()\r\n  crossOrigin: string;\r\n  @Input()\r\n  opaque: boolean;\r\n  @Input()\r\n  projection: string;\r\n  @Input()\r\n  reprojectionErrorThreshold: number;\r\n  @Input()\r\n  minZoom: number;\r\n  @Input()\r\n  maxZoom: number;\r\n  @Input()\r\n  tileGrid: TileGrid;\r\n  @Input()\r\n  tileLoadFunction?: LoadFunction;\r\n  @Input()\r\n  tilePixelRatio: number;\r\n  @Input()\r\n  tileSize: number | Size;\r\n  @Input()\r\n  tileUrlFunction?: UrlFunction;\r\n  @Input()\r\n  url: string;\r\n  @Input()\r\n  urls: string[];\r\n  @Input()\r\n  wrapX: boolean;\r\n\r\n  @ContentChild(TileGridComponent)\r\n  tileGridXYZ: TileGridComponent;\r\n\r\n  @Output()\r\n  tileLoadStart: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\r\n  @Output()\r\n  tileLoadEnd: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\r\n  @Output()\r\n  tileLoadError: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\r\n\r\n  constructor(\r\n    @Optional()\r\n    @Host()\r\n    layer: LayerTileComponent,\r\n    @Optional()\r\n    @Host()\r\n    raster?: SourceRasterComponent\r\n  ) {\r\n    super(layer, raster);\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    if (this.tileGridXYZ) {\r\n      this.tileGrid = this.tileGridXYZ.instance;\r\n    }\r\n    this.init();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const properties: { [index: string]: any } = {};\r\n\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    for (const key in changes) {\r\n      if (changes.hasOwnProperty(key)) {\r\n        properties[key] = changes[key].currentValue;\r\n      }\r\n    }\r\n\r\n    this.instance.setProperties(properties, false);\r\n    if (changes.hasOwnProperty('url')) {\r\n      this.init();\r\n    }\r\n  }\r\n\r\n  init() {\r\n    this.instance = new XYZ(this);\r\n\r\n    this.instance.on('tileloadstart', (event: TileSourceEvent) => this.tileLoadStart.emit(event));\r\n    this.instance.on('tileloadend', (event: TileSourceEvent) => this.tileLoadEnd.emit(event));\r\n    this.instance.on('tileloaderror', (event: TileSourceEvent) => this.tileLoadError.emit(event));\r\n\r\n    this._register(this.instance);\r\n  }\r\n}\r\n","import { Component, Host, forwardRef, Input, AfterContentInit, Optional, Output, EventEmitter } from '@angular/core';\r\nimport { OSM } from 'ol/source';\r\nimport { LayerTileComponent } from '../layers/layertile.component';\r\nimport { SourceComponent } from './source.component';\r\nimport { SourceXYZComponent } from './xyz.component';\r\nimport { SourceRasterComponent } from './raster.component';\r\nimport { LoadFunction } from 'ol/Tile';\r\nimport { AttributionLike } from 'ol/source/Source';\r\nimport { TileSourceEvent } from 'ol/source/Tile';\r\n\r\n@Component({\r\n  selector: 'aol-source-osm',\r\n  template: `\r\n    <div class=\"aol-source-osm\"></div>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceOsmComponent) }],\r\n})\r\nexport class SourceOsmComponent extends SourceXYZComponent implements AfterContentInit {\r\n  instance: OSM;\r\n\r\n  @Input()\r\n  attributions: AttributionLike;\r\n  @Input()\r\n  cacheSize: number;\r\n  @Input()\r\n  crossOrigin: string;\r\n  @Input()\r\n  maxZoom: number;\r\n  @Input()\r\n  opaque: boolean;\r\n  @Input()\r\n  reprojectionErrorThreshold: number;\r\n  @Input()\r\n  tileLoadFunction: LoadFunction;\r\n  @Input()\r\n  url: string;\r\n  @Input()\r\n  wrapX: boolean;\r\n\r\n  @Output()\r\n  tileLoadStart: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\r\n  @Output()\r\n  tileLoadEnd: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\r\n  @Output()\r\n  tileLoadError: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\r\n\r\n  constructor(\r\n    @Host()\r\n    @Optional()\r\n    layer: LayerTileComponent,\r\n    @Host()\r\n    @Optional()\r\n    raster?: SourceRasterComponent\r\n  ) {\r\n    super(layer, raster);\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    if (this.tileGridXYZ) {\r\n      this.tileGrid = this.tileGridXYZ.instance;\r\n    }\r\n\r\n    this.instance = new OSM(this);\r\n\r\n    this.instance.on('tileloadstart', (event: TileSourceEvent) => this.tileLoadStart.emit(event));\r\n    this.instance.on('tileloadend', (event: TileSourceEvent) => this.tileLoadEnd.emit(event));\r\n    this.instance.on('tileloaderror', (event: TileSourceEvent) => this.tileLoadError.emit(event));\r\n    this._register(this.instance);\r\n  }\r\n}\r\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\r\nimport { BingMaps } from 'ol/source';\r\nimport { SourceComponent } from './source.component';\r\nimport { LayerTileComponent } from '../layers/layertile.component';\r\nimport { LoadFunction } from 'ol/Tile';\r\n\r\n@Component({\r\n  selector: 'aol-source-bingmaps',\r\n  template: `\r\n    <div class=\"aol-source-bingmaps\"></div>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceBingmapsComponent) }],\r\n})\r\nexport class SourceBingmapsComponent extends SourceComponent implements OnInit {\r\n  instance: BingMaps;\r\n\r\n  @Input()\r\n  cacheSize: number;\r\n  @Input()\r\n  hidpi: boolean;\r\n  @Input()\r\n  culture: string;\r\n  @Input()\r\n  key: string;\r\n  @Input()\r\n  imagerySet: 'Road' | 'Aerial' | 'AerialWithLabels' | 'collinsBart' | 'ordnanceSurvey' = 'Aerial';\r\n  @Input()\r\n  maxZoom: number;\r\n  @Input()\r\n  reprojectionErrorThreshold: number;\r\n  @Input()\r\n  tileLoadFunction: LoadFunction;\r\n  @Input()\r\n  wrapX: boolean;\r\n\r\n  constructor(@Host() layer: LayerTileComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new BingMaps(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n}\r\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\r\nimport { Vector } from 'ol/source';\r\nimport Feature from 'ol/format/Feature';\r\nimport { LayerVectorComponent } from '../layers/layervector.component';\r\nimport { SourceComponent } from './source.component';\r\nimport { LoadingStrategy } from 'ol/source/Vector';\r\n\r\n@Component({\r\n  selector: 'aol-source-vector',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceVectorComponent) }],\r\n})\r\nexport class SourceVectorComponent extends SourceComponent implements OnInit {\r\n  instance: Vector;\r\n  @Input()\r\n  overlaps: boolean;\r\n  @Input()\r\n  useSpatialIndex: boolean;\r\n  @Input()\r\n  wrapX: boolean;\r\n  @Input()\r\n  url: string;\r\n  @Input()\r\n  format: Feature;\r\n  @Input()\r\n  strategy: LoadingStrategy;\r\n\r\n  constructor(@Host() layer: LayerVectorComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new Vector(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n}\r\n","import { Component, Host, Input, forwardRef, ContentChild, AfterContentInit } from '@angular/core';\r\nimport { Feature } from 'ol';\r\nimport { LayerVectorComponent } from '../layers/layervector.component';\r\nimport { SourceComponent } from './source.component';\r\nimport { SourceVectorComponent } from './vector.component';\r\nimport { Cluster, Vector } from 'ol/source';\r\nimport { Point } from 'ol/geom';\r\n\r\n@Component({\r\n  selector: 'aol-source-cluster',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceClusterComponent) }],\r\n})\r\nexport class SourceClusterComponent extends SourceComponent implements AfterContentInit {\r\n  instance: Cluster;\r\n\r\n  @Input()\r\n  distance: number;\r\n  @Input()\r\n  geometryFunction?: (feature: Feature) => Point;\r\n  @Input()\r\n  wrapX?: boolean;\r\n\r\n  @ContentChild(SourceVectorComponent)\r\n  sourceVectorComponent: SourceVectorComponent;\r\n  source: Vector;\r\n\r\n  constructor(@Host() layer: LayerVectorComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this.source = this.sourceVectorComponent.instance;\r\n\r\n    this.instance = new Cluster(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport WMTS from 'ol/tilegrid/WMTS';\r\nimport { TileGridComponent } from './tilegrid.component';\r\nimport { Coordinate } from 'ol/coordinate';\r\nimport { Size } from 'ol/size';\r\n\r\n@Component({\r\n  selector: 'aol-tilegrid-wmts',\r\n  template: '',\r\n})\r\nexport class TileGridWMTSComponent extends TileGridComponent implements OnInit {\r\n  instance: WMTS;\r\n\r\n  @Input()\r\n  origin?: Coordinate;\r\n  @Input()\r\n  origins?: Coordinate[];\r\n  @Input()\r\n  resolutions: number[];\r\n  @Input()\r\n  matrixIds: string[];\r\n  @Input()\r\n  sizes?: Size[];\r\n  @Input()\r\n  tileSizes?: (number | Size)[];\r\n  @Input()\r\n  widths?: number[];\r\n\r\n  ngOnInit() {\r\n    this.instance = new WMTS(this);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Host,\r\n  Input,\r\n  forwardRef,\r\n  AfterContentInit,\r\n  ContentChild,\r\n  SimpleChanges,\r\n  OnChanges,\r\n} from '@angular/core';\r\nimport { LayerTileComponent } from '../layers/layertile.component';\r\nimport { SourceComponent } from './source.component';\r\nimport { TileGridWMTSComponent } from '../tilegridwmts.component';\r\nimport { WMTS } from 'ol/source';\r\nimport { WMTS as TileGridWMTS } from 'ol/tilegrid';\r\nimport { WMTSRequestEncoding } from 'ol/source';\r\nimport { ProjectionLike } from 'ol/proj';\r\nimport { LoadFunction } from 'ol/Tile';\r\n\r\n@Component({\r\n  selector: 'aol-source-tilewmts',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceTileWMTSComponent) }],\r\n})\r\nexport class SourceTileWMTSComponent extends SourceComponent implements AfterContentInit, OnChanges {\r\n  instance: WMTS;\r\n  @Input()\r\n  cacheSize?: number;\r\n  @Input()\r\n  crossOrigin?: string;\r\n  @Input()\r\n  tileGrid: TileGridWMTS;\r\n  @Input()\r\n  projection: ProjectionLike;\r\n  @Input()\r\n  reprojectionErrorThreshold?: number;\r\n  @Input()\r\n  requestEncoding?: WMTSRequestEncoding | string;\r\n  @Input()\r\n  layer: string;\r\n  @Input()\r\n  style: string;\r\n  @Input()\r\n  tileClass?: any;\r\n  @Input()\r\n  tilePixelRatio?: number;\r\n  @Input()\r\n  version?: string;\r\n  @Input()\r\n  format?: string;\r\n  @Input()\r\n  matrixSet: string;\r\n  @Input()\r\n  dimensions?: Object;\r\n  @Input()\r\n  url?: string;\r\n  @Input()\r\n  tileLoadFunction?: LoadFunction;\r\n  @Input()\r\n  urls?: string[];\r\n  @Input()\r\n  wrapX?: boolean;\r\n\r\n  @ContentChild(TileGridWMTSComponent)\r\n  tileGridWMTS: TileGridWMTSComponent;\r\n\r\n  constructor(@Host() layer: LayerTileComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const properties: { [index: string]: any } = {};\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    for (const key in changes) {\r\n      if (changes.hasOwnProperty(key)) {\r\n        switch (key) {\r\n          case 'url':\r\n            this.url = changes[key].currentValue;\r\n            this.setLayerSource();\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        properties[key] = changes[key].currentValue;\r\n      }\r\n    }\r\n    this.instance.setProperties(properties, false);\r\n  }\r\n\r\n  setLayerSource(): void {\r\n    this.instance = new WMTS(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    if (this.tileGridWMTS) {\r\n      this.tileGrid = this.tileGridWMTS.instance;\r\n      this.setLayerSource();\r\n    }\r\n  }\r\n}\r\n","import Feature from 'ol/format/Feature';\r\n\r\nexport class FormatComponent {\r\n  public instance: Feature;\r\n  public componentType = 'format';\r\n}\r\n","import {Component, Host, Input, forwardRef, ContentChild, AfterContentInit} from '@angular/core';\r\nimport VectorTile from 'ol/source/VectorTile';\r\nimport Feature from 'ol/format/Feature';\r\nimport TileGrid from 'ol/tilegrid/TileGrid';\r\nimport {LayerVectorTileComponent} from '../layers/layervectortile.component';\r\nimport {FormatComponent} from '../formats/format.component';\r\nimport {TileGridComponent} from '../tilegrid.component';\r\nimport {SourceComponent} from './source.component';\r\nimport {ProjectionLike} from 'ol/proj';\r\nimport {UrlFunction} from 'ol/Tile';\r\n\r\n@Component({\r\n  selector: 'aol-source-vectortile',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{provide: SourceComponent, useExisting: forwardRef(() => SourceVectorTileComponent)}],\r\n})\r\nexport class SourceVectorTileComponent extends SourceComponent implements AfterContentInit {\r\n  public instance: VectorTile;\r\n  @Input()\r\n  cacheSize: number;\r\n  @Input()\r\n  overlaps: boolean;\r\n  @Input()\r\n  projection: ProjectionLike;\r\n  @Input()\r\n  tilePixelRatio: number;\r\n  @Input()\r\n  tileUrlFunction: UrlFunction;\r\n  @Input()\r\n  url: string;\r\n  @Input()\r\n  urls: string[];\r\n  @Input()\r\n  wrapX: boolean;\r\n\r\n  @ContentChild(FormatComponent)\r\n  formatComponent: FormatComponent;\r\n  format: Feature;\r\n  @ContentChild(TileGridComponent)\r\n  tileGridComponent: TileGridComponent;\r\n  tileGrid: TileGrid;\r\n\r\n  constructor(@Host() layer: LayerVectorTileComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  /* need the children to construct the OL3 object */\r\n  ngAfterContentInit() {\r\n    if (this.formatComponent !== null && this.formatComponent !== undefined) {\r\n      this.format = this.formatComponent.instance;\r\n    }\r\n    if (this.tileGridComponent !== null && this.tileGridComponent !== undefined) {\r\n      this.tileGrid = this.tileGridComponent.instance;\r\n    }\r\n    // console.log('creating ol.source.VectorTile instance with:', this);\r\n    this.instance = new VectorTile(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n}\r\n","import { Component, Host, Input, OnChanges, OnInit, forwardRef, SimpleChanges } from '@angular/core';\r\nimport { LayerTileComponent } from '../layers/layertile.component';\r\nimport { SourceComponent } from './source.component';\r\nimport { TileWMS } from 'ol/source';\r\nimport { TileGrid } from 'ol/tilegrid';\r\nimport { LoadFunction } from 'ol/Tile';\r\n\r\n@Component({\r\n  selector: 'aol-source-tilewms',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceTileWMSComponent) }],\r\n})\r\nexport class SourceTileWMSComponent extends SourceComponent implements OnChanges, OnInit {\r\n  instance: TileWMS;\r\n  @Input()\r\n  cacheSize: number;\r\n  @Input()\r\n  crossOrigin: string;\r\n  @Input()\r\n  gutter: number;\r\n  @Input()\r\n  hidpi: boolean;\r\n  @Input()\r\n  params: Object;\r\n  @Input()\r\n  projection: string;\r\n  @Input()\r\n  reprojectionErrorThreshold: number;\r\n  @Input()\r\n  serverType: string;\r\n  @Input()\r\n  tileGrid: TileGrid;\r\n  @Input()\r\n  tileLoadFunction: LoadFunction;\r\n  @Input()\r\n  url: string;\r\n  @Input()\r\n  urls: string[];\r\n  @Input()\r\n  wrapX: boolean;\r\n\r\n  constructor(@Host() layer: LayerTileComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new TileWMS(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (this.instance && changes.hasOwnProperty('params')) {\r\n      this.instance.updateParams(this.params);\r\n    }\r\n  }\r\n}\r\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\r\nimport { TileJSON } from 'ol/source';\r\nimport { LayerTileComponent } from '../layers/layertile.component';\r\nimport { SourceComponent } from './source.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-tilejson',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceTileJSONComponent) }],\r\n})\r\nexport class SourceTileJSONComponent extends SourceComponent implements OnInit {\r\n  instance: TileJSON;\r\n\r\n  @Input()\r\n  url: string;\r\n\r\n  constructor(@Host() layer: LayerTileComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new TileJSON(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n}\r\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\r\nimport { LayerVectorComponent } from '../layers/layervector.component';\r\nimport { SourceComponent } from './source.component';\r\nimport { Feature } from 'ol';\r\nimport { Vector } from 'ol/source';\r\nimport { GeoJSON } from 'ol/format';\r\nimport { ProjectionLike } from 'ol/proj';\r\n\r\n@Component({\r\n  selector: 'aol-source-geojson',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceGeoJSONComponent) }],\r\n})\r\nexport class SourceGeoJSONComponent extends SourceComponent implements OnInit {\r\n  instance: Vector;\r\n  format: Feature;\r\n  @Input()\r\n  defaultDataProjection: ProjectionLike;\r\n  @Input()\r\n  featureProjection: ProjectionLike;\r\n  @Input()\r\n  geometryName: string;\r\n  @Input()\r\n  url: string;\r\n\r\n  constructor(@Host() layer: LayerVectorComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.format = new GeoJSON(this);\r\n    this.instance = new Vector(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n}\r\n","import { Component, Host, Input, OnInit, forwardRef, Output, EventEmitter } from '@angular/core';\r\nimport { ImageStatic } from 'ol/source';\r\nimport { SourceComponent } from './source.component';\r\nimport { LayerImageComponent } from '../layers/layerimage.component';\r\nimport { ProjectionLike } from 'ol/proj';\r\nimport { Extent } from 'ol/extent';\r\nimport { AttributionLike } from 'ol/source/Source';\r\nimport { LoadFunction } from 'ol/Image';\r\nimport { Size } from 'ol/size';\r\nimport { ImageSourceEvent } from 'ol/source/Image';\r\n\r\n@Component({\r\n  selector: 'aol-source-imagestatic',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceImageStaticComponent) }],\r\n})\r\nexport class SourceImageStaticComponent extends SourceComponent implements OnInit {\r\n  instance: ImageStatic;\r\n\r\n  @Input()\r\n  projection: ProjectionLike | string;\r\n  @Input()\r\n  imageExtent: Extent;\r\n  @Input()\r\n  url: string;\r\n  @Input()\r\n  attributions: AttributionLike;\r\n  @Input()\r\n  crossOrigin?: string;\r\n  @Input()\r\n  imageLoadFunction?: LoadFunction;\r\n  @Input()\r\n  imageSize?: Size;\r\n\r\n  @Output()\r\n  onImageLoadStart = new EventEmitter<ImageSourceEvent>();\r\n  @Output()\r\n  onImageLoadEnd = new EventEmitter<ImageSourceEvent>();\r\n  @Output()\r\n  onImageLoadError = new EventEmitter<ImageSourceEvent>();\r\n\r\n  constructor(@Host() layer: LayerImageComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new ImageStatic(this);\r\n    this.host.instance.setSource(this.instance);\r\n    this.instance.on('imageloadstart', (event: ImageSourceEvent) => this.onImageLoadStart.emit(event));\r\n    this.instance.on('imageloadend', (event: ImageSourceEvent) => this.onImageLoadEnd.emit(event));\r\n    this.instance.on('imageloaderror', (event: ImageSourceEvent) => this.onImageLoadError.emit(event));\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Host,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  forwardRef,\r\n  SimpleChanges,\r\n  Output,\r\n  EventEmitter,\r\n} from '@angular/core';\r\nimport { ImageWMS } from 'ol/source';\r\nimport { LayerImageComponent } from '../layers/layerimage.component';\r\nimport { SourceComponent } from './source.component';\r\nimport { ProjectionLike } from 'ol/proj';\r\nimport { AttributionLike } from 'ol/source/Source';\r\nimport { LoadFunction } from 'ol/Image';\r\nimport { ImageSourceEvent } from 'ol/source/Image';\r\n\r\n@Component({\r\n  selector: 'aol-source-imagewms',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceImageWMSComponent) }],\r\n})\r\nexport class SourceImageWMSComponent extends SourceComponent implements OnChanges, OnInit {\r\n  instance: ImageWMS;\r\n\r\n  @Input()\r\n  attributions: AttributionLike;\r\n  @Input()\r\n  crossOrigin: string;\r\n  @Input()\r\n  hidpi: boolean;\r\n  @Input()\r\n  serverType: string;\r\n  @Input()\r\n  imageLoadFunction?: LoadFunction;\r\n  @Input()\r\n  params: Object;\r\n  @Input()\r\n  projection: ProjectionLike | string;\r\n  @Input()\r\n  ratio: number;\r\n  @Input()\r\n  resolutions: Array<number>;\r\n  @Input()\r\n  url: string;\r\n\r\n  @Output()\r\n  onImageLoadStart = new EventEmitter<ImageSourceEvent>();\r\n  @Output()\r\n  onImageLoadEnd = new EventEmitter<ImageSourceEvent>();\r\n  @Output()\r\n  onImageLoadError = new EventEmitter<ImageSourceEvent>();\r\n\r\n  constructor(@Host() layer: LayerImageComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new ImageWMS(this);\r\n    this.host.instance.setSource(this.instance);\r\n    this.instance.on('imageloadstart', (event: ImageSourceEvent) => this.onImageLoadStart.emit(event));\r\n    this.instance.on('imageloadend', (event: ImageSourceEvent) => this.onImageLoadEnd.emit(event));\r\n    this.instance.on('imageloaderror', (event: ImageSourceEvent) => this.onImageLoadError.emit(event));\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (this.instance && changes.hasOwnProperty('params')) {\r\n      this.instance.updateParams(this.params);\r\n    }\r\n  }\r\n}\r\n","import { Component, forwardRef, Host, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { ImageArcGISRest } from 'ol/source';\r\nimport { LayerImageComponent } from '../layers/layerimage.component';\r\nimport { SourceComponent } from './source.component';\r\nimport { ProjectionLike } from 'ol/proj';\r\nimport { AttributionLike } from 'ol/source/Source';\r\nimport { LoadFunction } from 'ol/Image';\r\n\r\n@Component({\r\n  selector: 'aol-source-imagearcgisrest',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceImageArcGISRestComponent) }],\r\n})\r\nexport class SourceImageArcGISRestComponent extends SourceComponent implements OnInit, OnChanges {\r\n  instance: ImageArcGISRest;\r\n\r\n  @Input() projection: ProjectionLike | string;\r\n  @Input() url: string;\r\n  @Input() attributions: AttributionLike[];\r\n  @Input() crossOrigin?: string;\r\n  @Input() imageLoadFunction?: LoadFunction;\r\n  @Input() params?: { [k: string]: any };\r\n  @Input() ratio = 1.5;\r\n  @Input() resolutions?: number[];\r\n  @Input() wrapX?: boolean;\r\n\r\n  constructor(@Host() layer: LayerImageComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new ImageArcGISRest(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (this.instance && changes.hasOwnProperty('params')) {\r\n      this.instance.updateParams(this.params);\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy, OnChanges, Input, SimpleChanges } from '@angular/core';\r\nimport { Feature } from 'ol';\r\nimport { SourceVectorComponent } from './sources/vector.component';\r\n\r\n@Component({\r\n  selector: 'aol-feature',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class FeatureComponent implements OnInit, OnDestroy, OnChanges {\r\n  public componentType = 'feature';\r\n  public instance: Feature;\r\n\r\n  @Input()\r\n  id: string | number | undefined;\r\n\r\n  constructor(private host: SourceVectorComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new Feature();\r\n    if (this.id !== undefined) {\r\n      this.instance.setId(this.id);\r\n    }\r\n    this.host.instance.addFeature(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.host.instance.removeFeature(this.instance);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (this.instance) {\r\n      this.instance.setId(this.id);\r\n    }\r\n  }\r\n}\r\n","import { Input, OnInit } from '@angular/core';\r\nimport { FeatureComponent } from '../feature.component';\r\nimport { MapComponent } from '../map.component';\r\nimport SimpleGeometry from 'ol/geom/SimpleGeometry';\r\n\r\nexport abstract class SimpleGeometryComponent implements OnInit {\r\n  public instance: SimpleGeometry;\r\n  public componentType = 'simple-geometry';\r\n\r\n  @Input() srid: string;\r\n\r\n  constructor(protected map: MapComponent, protected host: FeatureComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.host.instance.setGeometry(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FeatureComponent } from '../feature.component';\r\nimport { Circle } from 'ol/geom';\r\nimport { SimpleGeometryComponent } from './simplegeometry.component';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-geometry-circle',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class GeometryCircleComponent extends SimpleGeometryComponent implements OnInit {\r\n  public componentType = 'geometry-circle';\r\n  public instance: Circle;\r\n\r\n  @Input()\r\n  get radius(): number {\r\n    return this.instance.getRadius();\r\n  }\r\n  set radius(radius: number) {\r\n    this.instance.setRadius(radius);\r\n  }\r\n\r\n  constructor(map: MapComponent, host: FeatureComponent) {\r\n    super(map, host);\r\n    // defaulting coordinates to [0,0]. To be overridden in child component.\r\n    this.instance = new Circle([0, 0]);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FeatureComponent } from '../feature.component';\r\nimport { SimpleGeometryComponent } from './simplegeometry.component';\r\nimport { MapComponent } from '../map.component';\r\nimport { LineString } from 'ol/geom';\r\n\r\n@Component({\r\n  selector: 'aol-geometry-linestring',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class GeometryLinestringComponent extends SimpleGeometryComponent implements OnInit {\r\n  public componentType = 'geometry-linestring';\r\n  public instance: LineString;\r\n\r\n  constructor(map: MapComponent, host: FeatureComponent) {\r\n    super(map, host);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new LineString([[0, 0], [1, 1]]);\r\n    super.ngOnInit();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FeatureComponent } from '../feature.component';\r\nimport { SimpleGeometryComponent } from './simplegeometry.component';\r\nimport { MapComponent } from '../map.component';\r\nimport { MultiLineString } from 'ol/geom';\r\n\r\n@Component({\r\n  selector: 'aol-geometry-multilinestring',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class GeometryMultiLinestringComponent extends SimpleGeometryComponent implements OnInit {\r\n  public componentType = 'geometry-multilinestring';\r\n  public instance: MultiLineString;\r\n\r\n  constructor(map: MapComponent, host: FeatureComponent) {\r\n    super(map, host);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new MultiLineString([[[0, 0], [1, 1]]]);\r\n    super.ngOnInit();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FeatureComponent } from '../feature.component';\r\nimport { SimpleGeometryComponent } from './simplegeometry.component';\r\nimport { MapComponent } from '../map.component';\r\nimport { MultiPoint } from 'ol/geom';\r\n\r\n@Component({\r\n  selector: 'aol-geometry-multipoint',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class GeometryMultiPointComponent extends SimpleGeometryComponent implements OnInit {\r\n  public componentType = 'geometry-multipoint';\r\n  public instance: MultiPoint;\r\n\r\n  constructor(map: MapComponent, host: FeatureComponent) {\r\n    super(map, host);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new MultiPoint([[0, 0], [1, 1]]);\r\n    super.ngOnInit();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FeatureComponent } from '../feature.component';\r\nimport { SimpleGeometryComponent } from './simplegeometry.component';\r\nimport { MapComponent } from '../map.component';\r\nimport { MultiPolygon } from 'ol/geom';\r\n\r\n@Component({\r\n  selector: 'aol-geometry-multipolygon',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class GeometryMultiPolygonComponent extends SimpleGeometryComponent implements OnInit {\r\n  public componentType = 'geometry-multipolygon';\r\n  public instance: MultiPolygon;\r\n\r\n  constructor(map: MapComponent, host: FeatureComponent) {\r\n    super(map, host);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new MultiPolygon([[[[0, 0], [1, 1], [0, 1]]]]);\r\n    super.ngOnInit();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FeatureComponent } from '../feature.component';\r\nimport { SimpleGeometryComponent } from './simplegeometry.component';\r\nimport { MapComponent } from '../map.component';\r\nimport { Point } from 'ol/geom';\r\n\r\n@Component({\r\n  selector: 'aol-geometry-point',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class GeometryPointComponent extends SimpleGeometryComponent implements OnInit {\r\n  public componentType = 'geometry-point';\r\n  public instance: Point;\r\n\r\n  constructor(map: MapComponent, host: FeatureComponent) {\r\n    super(map, host);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new Point([0, 0]);\r\n    super.ngOnInit();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FeatureComponent } from '../feature.component';\r\nimport { SimpleGeometryComponent } from './simplegeometry.component';\r\nimport { MapComponent } from '../map.component';\r\nimport { Polygon } from 'ol/geom';\r\n\r\n@Component({\r\n  selector: 'aol-geometry-polygon',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class GeometryPolygonComponent extends SimpleGeometryComponent implements OnInit {\r\n  public componentType = 'geometry-polygon';\r\n  public instance: Polygon;\r\n\r\n  constructor(map: MapComponent, host: FeatureComponent) {\r\n    super(map, host);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new Polygon([[[0, 0], [1, 1], [0, 1]]]);\r\n    super.ngOnInit();\r\n  }\r\n}\r\n","import { Component, ElementRef } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'aol-content',\r\n  template: '<ng-content></ng-content>',\r\n})\r\nexport class ContentComponent {\r\n  constructor(public elementRef: ElementRef) {}\r\n}\r\n","import { Component, ContentChild, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { MapComponent } from './map.component';\r\nimport { Overlay, PanOptions } from 'ol';\r\nimport { ContentComponent } from './content.component';\r\nimport OverlayPositioning from 'ol/OverlayPositioning';\r\n\r\n@Component({\r\n  selector: 'aol-overlay',\r\n  template: '<ng-content></ng-content>',\r\n})\r\nexport class OverlayComponent implements OnInit, OnDestroy {\r\n  componentType = 'overlay';\r\n  instance: Overlay;\r\n  element: Element;\r\n  @ContentChild(ContentComponent)\r\n  content: ContentComponent;\r\n\r\n  @Input()\r\n  id: number | string;\r\n  @Input()\r\n  offset: number[];\r\n  @Input()\r\n  positioning: OverlayPositioning | string;\r\n  @Input()\r\n  stopEvent: boolean;\r\n  @Input()\r\n  insertFirst: boolean;\r\n  @Input()\r\n  autoPan: boolean;\r\n  @Input()\r\n  autoPanAnimation: PanOptions;\r\n  @Input()\r\n  autoPanMargin: number;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    if (this.content) {\r\n      this.element = this.content.elementRef.nativeElement;\r\n      this.instance = new Overlay(this);\r\n      this.map.instance.addOverlay(this.instance);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.instance) {\r\n      this.map.instance.removeOverlay(this.instance);\r\n    }\r\n  }\r\n}\r\n","import { Component, Optional, OnChanges, Input, SimpleChanges, OnInit } from '@angular/core';\r\nimport { transform } from 'ol/proj';\r\nimport { MapComponent } from './map.component';\r\nimport { GeometryPointComponent } from './geom/geometrypoint.component';\r\nimport { GeometryCircleComponent } from './geom/geometrycircle.component';\r\nimport { ViewComponent } from './view.component';\r\nimport { OverlayComponent } from './overlay.component';\r\n\r\n@Component({\r\n  selector: 'aol-coordinate',\r\n  template: `\r\n    <div class=\"aol-coordinate\"></div>\r\n  `,\r\n})\r\nexport class CoordinateComponent implements OnChanges, OnInit {\r\n  private host: any;\r\n  private mapSrid = 'EPSG:3857';\r\n\r\n  @Input()\r\n  x: number;\r\n  @Input()\r\n  y: number;\r\n  @Input()\r\n  srid = 'EPSG:3857';\r\n\r\n  constructor(\r\n    private map: MapComponent,\r\n    @Optional() viewHost: ViewComponent,\r\n    @Optional() geometryPointHost: GeometryPointComponent,\r\n    @Optional() geometryCircleHost: GeometryCircleComponent,\r\n    @Optional() overlayHost: OverlayComponent\r\n  ) {\r\n    // console.log('instancing aol-coordinate');\r\n    if (geometryPointHost !== null) {\r\n      this.host = geometryPointHost;\r\n    } else if (geometryCircleHost !== null) {\r\n      this.host = geometryCircleHost;\r\n    } else if (viewHost !== null) {\r\n      this.host = viewHost;\r\n    } else if (overlayHost !== null) {\r\n      this.host = overlayHost;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.map.instance.on('change:view', e => this.onMapViewChanged(e));\r\n    this.mapSrid = this.map.instance\r\n      .getView()\r\n      .getProjection()\r\n      .getCode();\r\n    this.transformCoordinates();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    this.transformCoordinates();\r\n  }\r\n\r\n  private onMapViewChanged(event) {\r\n    this.mapSrid = event.target\r\n      .get(event.key)\r\n      .getProjection()\r\n      .getCode();\r\n    this.transformCoordinates();\r\n  }\r\n\r\n  private transformCoordinates() {\r\n    let transformedCoordinates: number[];\r\n\r\n    if (this.srid === this.mapSrid) {\r\n      transformedCoordinates = [this.x, this.y];\r\n    } else {\r\n      transformedCoordinates = transform([this.x, this.y], this.srid, this.mapSrid);\r\n    }\r\n\r\n    switch (this.host.componentType) {\r\n      case 'geometry-point':\r\n        this.host.instance.setCoordinates(transformedCoordinates);\r\n        break;\r\n      case 'geometry-circle':\r\n      case 'view':\r\n        this.host.instance.setCenter(transformedCoordinates);\r\n        break;\r\n      case 'overlay':\r\n        this.host.instance.setPosition(transformedCoordinates);\r\n        break;\r\n    }\r\n  }\r\n}\r\n","import { Component, Input, OnChanges, OnInit, Optional, SimpleChanges } from '@angular/core';\r\nimport { MapComponent } from './map.component';\r\nimport { GeometryLinestringComponent } from './geom/geometrylinestring.component';\r\nimport { GeometryPolygonComponent } from './geom/geometrypolygon.component';\r\nimport { GeometryMultiPointComponent } from './geom/geometrymultipoint.component';\r\nimport { GeometryMultiLinestringComponent } from './geom/geometrymultilinestring.component';\r\nimport { GeometryMultiPolygonComponent } from './geom/geometrymultipolygon.component';\r\nimport { Coordinate } from 'ol/coordinate';\r\nimport { transform } from 'ol/proj';\r\n\r\n@Component({\r\n  selector: 'aol-collection-coordinates',\r\n  template: `\r\n    <div class=\"aol-collection-coordinates\"></div>\r\n  `,\r\n})\r\nexport class CollectionCoordinatesComponent implements OnChanges, OnInit {\r\n  private host: any;\r\n  private mapSrid = 'EPSG:3857';\r\n\r\n  @Input()\r\n  coordinates: Coordinate[] | Coordinate[][] | Coordinate[][][];\r\n  @Input()\r\n  srid = 'EPSG:3857';\r\n\r\n  constructor(\r\n    private map: MapComponent,\r\n    @Optional() geometryLinestring: GeometryLinestringComponent,\r\n    @Optional() geometryPolygon: GeometryPolygonComponent,\r\n    @Optional() geometryMultipoint: GeometryMultiPointComponent,\r\n    @Optional() geometryMultilinestring: GeometryMultiLinestringComponent,\r\n    @Optional() geometryMultipolygon: GeometryMultiPolygonComponent\r\n  ) {\r\n    if (!!geometryLinestring) {\r\n      this.host = geometryLinestring;\r\n    } else if (!!geometryPolygon) {\r\n      this.host = geometryPolygon;\r\n    } else if (!!geometryMultipoint) {\r\n      this.host = geometryMultipoint;\r\n    } else if (!!geometryMultilinestring) {\r\n      this.host = geometryMultilinestring;\r\n    } else if (!!geometryMultipolygon) {\r\n      this.host = geometryMultipolygon;\r\n    } else {\r\n      throw new Error('aol-collection-coordinates must be a child of a geometry component');\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.map.instance.on('change:view', e => this.onMapViewChanged(e));\r\n    this.mapSrid = this.map.instance\r\n      .getView()\r\n      .getProjection()\r\n      .getCode();\r\n    this.transformCoordinates();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    this.transformCoordinates();\r\n  }\r\n\r\n  private onMapViewChanged(event) {\r\n    this.mapSrid = event.target\r\n      .get(event.key)\r\n      .getProjection()\r\n      .getCode();\r\n    this.transformCoordinates();\r\n  }\r\n\r\n  private transformCoordinates() {\r\n    let transformedCoordinates: Coordinate[] | Coordinate[][] | Coordinate[][][];\r\n\r\n    if (this.srid === this.mapSrid) {\r\n      transformedCoordinates = this.coordinates;\r\n    } else {\r\n      switch (this.host.componentType) {\r\n        case 'geometry-linestring':\r\n        case 'geometry-multipoint':\r\n          transformedCoordinates = (<Coordinate[]>this.coordinates).map(c => transform(c, this.srid, this.mapSrid));\r\n          break;\r\n        case 'geometry-polygon':\r\n        case 'geometry-multilinestring':\r\n          transformedCoordinates = (<Coordinate[][]>this.coordinates).map(cc =>\r\n            cc.map(c => transform(c, this.srid, this.mapSrid))\r\n          );\r\n          break;\r\n        case 'geometry-multipolygon':\r\n          transformedCoordinates = (<Coordinate[][][]>this.coordinates).map(ccc =>\r\n            ccc.map(cc => cc.map(c => transform(c, this.srid, this.mapSrid)))\r\n          );\r\n          break;\r\n      }\r\n    }\r\n\r\n    this.host.instance.setCoordinates(transformedCoordinates);\r\n  }\r\n}\r\n","import { Component, Input, Optional, OnInit } from '@angular/core';\r\nimport { Fill, Image, Stroke, Style, Text } from 'ol/style';\r\nimport { Geometry } from 'ol/geom';\r\nimport { FeatureComponent } from '../feature.component';\r\nimport { LayerVectorComponent } from '../layers/layervector.component';\r\nimport { GeometryFunction } from 'ol/style/Style';\r\n\r\n@Component({\r\n  selector: 'aol-style',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class StyleComponent implements OnInit {\r\n  private host: FeatureComponent | LayerVectorComponent;\r\n  public instance: Style;\r\n  public componentType = 'style';\r\n\r\n  @Input()\r\n  geometry: string | Geometry | GeometryFunction;\r\n  @Input()\r\n  fill: Fill;\r\n  @Input()\r\n  image: Image;\r\n  @Input()\r\n  stroke: Stroke;\r\n  @Input()\r\n  text: Text;\r\n  @Input()\r\n  zIndex: number;\r\n\r\n  constructor(@Optional() featureHost: FeatureComponent, @Optional() layerHost: LayerVectorComponent) {\r\n    // console.log('creating aol-style');\r\n    this.host = !!featureHost ? featureHost : layerHost;\r\n    if (!this.host) {\r\n      throw new Error('aol-style must be applied to a feature or a layer');\r\n    }\r\n  }\r\n\r\n  update() {\r\n    // console.log('updating style\\'s host: ', this.host);\r\n    this.host.instance.changed();\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('creating aol-style instance with: ', this);\r\n    this.instance = new Style(this);\r\n    this.host.instance.setStyle(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, Host, AfterContentInit, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\r\nimport { AtlasManager, Circle, Fill, Stroke } from 'ol/style';\r\nimport { StyleComponent } from './style.component';\r\n\r\n@Component({\r\n  selector: 'aol-style-circle',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class StyleCircleComponent implements AfterContentInit, OnChanges, OnDestroy {\r\n  public componentType = 'style-circle';\r\n  public instance: Circle;\r\n\r\n  @Input()\r\n  fill: Fill;\r\n  @Input()\r\n  radius: number;\r\n  @Input()\r\n  snapToPixel: boolean;\r\n  @Input()\r\n  stroke: Stroke;\r\n  @Input()\r\n  atlasManager: AtlasManager;\r\n\r\n  constructor(@Host() private host: StyleComponent) {}\r\n\r\n  /**\r\n   * WORK-AROUND: since the re-rendering is not triggered on style change\r\n   * we trigger a radius change.\r\n   * see openlayers #6233 and #5775\r\n   */\r\n  update() {\r\n    if (!!this.instance) {\r\n      // console.log('setting ol.style.Circle instance\\'s radius');\r\n      this.instance.setRadius(this.radius);\r\n    }\r\n    this.host.update();\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    // console.log('creating ol.style.Circle instance with: ', this);\r\n    this.instance = new Circle(this);\r\n    this.host.instance.setImage(this.instance);\r\n    this.host.update();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    if (changes['radius']) {\r\n      this.instance.setRadius(changes['radius'].currentValue);\r\n    }\r\n    // console.log('changes detected in aol-style-circle, setting new radius: ', changes['radius'].currentValue);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-style-circle');\r\n    this.host.instance.setImage(null);\r\n  }\r\n}\r\n","import { Component, Input, Optional, OnInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { Text } from 'ol/style';\r\nimport { StyleComponent } from './style.component';\r\n\r\n@Component({\r\n  selector: 'aol-style-text',\r\n  template: `\r\n    <div class=\"aol-style-text\"></div>\r\n  `,\r\n})\r\nexport class StyleTextComponent implements OnInit, OnChanges {\r\n  public instance: Text;\r\n  public componentType = 'style-text';\r\n\r\n  @Input()\r\n  font: string | undefined;\r\n  @Input()\r\n  offsetX: number | undefined;\r\n  @Input()\r\n  offsetY: number | undefined;\r\n  @Input()\r\n  scale: number | undefined;\r\n  @Input()\r\n  rotateWithView: boolean | undefined;\r\n  @Input()\r\n  rotation: number | undefined;\r\n  @Input()\r\n  text: string | undefined;\r\n  @Input()\r\n  textAlign: string | undefined;\r\n  @Input()\r\n  textBaseLine: string | undefined;\r\n\r\n  constructor(@Optional() private host: StyleComponent) {\r\n    if (!host) {\r\n      throw new Error('aol-style-text must be a descendant of aol-style');\r\n    }\r\n    // console.log('creating aol-style-text with: ', this);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.style.Text instance with: ', this);\r\n    this.instance = new Text(this);\r\n    this.host.instance.setText(this.instance);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    if (changes['font']) {\r\n      this.instance.setFont(changes['font'].currentValue);\r\n    }\r\n    if (changes['offsetX']) {\r\n      this.instance.setOffsetX(changes['offsetX'].currentValue);\r\n    }\r\n    if (changes['offsetY']) {\r\n      this.instance.setOffsetY(changes['offsetY'].currentValue);\r\n    }\r\n    if (changes['scale']) {\r\n      this.instance.setScale(changes['scale'].currentValue);\r\n    }\r\n    if (changes['rotation']) {\r\n      this.instance.setRotation(changes['rotation'].currentValue);\r\n    }\r\n    if (changes['text']) {\r\n      this.instance.setText(changes['text'].currentValue);\r\n    }\r\n    if (changes['textAlign']) {\r\n      this.instance.setTextAlign(changes['textAlign'].currentValue);\r\n    }\r\n    if (changes['textBaseLine']) {\r\n      this.instance.setTextBaseline(changes['textBaseLine'].currentValue);\r\n    }\r\n    this.host.update();\r\n    // console.log('changes detected in aol-style-text, setting new properties: ', changes);\r\n  }\r\n}\r\n","import { Component, Input, Optional, OnInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { Stroke } from 'ol/style';\r\nimport { StyleComponent } from './style.component';\r\nimport { StyleCircleComponent } from './circle.component';\r\nimport { StyleTextComponent } from './text.component';\r\nimport { Color } from 'ol/color';\r\n\r\n@Component({\r\n  selector: 'aol-style-stroke',\r\n  template: `\r\n    <div class=\"aol-style-stroke\"></div>\r\n  `,\r\n})\r\nexport class StyleStrokeComponent implements OnInit, OnChanges {\r\n  public instance: Stroke;\r\n  /* the typings do not have the setters */\r\n  private host: /*StyleComponent|StyleCircleComponent|StyleTextComponent*/ any;\r\n\r\n  @Input()\r\n  color: Color | undefined;\r\n  @Input()\r\n  lineCap: string | undefined;\r\n  @Input()\r\n  lineDash: number[] | undefined;\r\n  @Input()\r\n  lineJoin: string | undefined;\r\n  @Input()\r\n  miterLimit: number | undefined;\r\n  @Input()\r\n  width: number | undefined;\r\n\r\n  constructor(\r\n    @Optional() styleHost: StyleComponent,\r\n    @Optional() styleCircleHost: StyleCircleComponent,\r\n    @Optional() styleTextHost: StyleTextComponent\r\n  ) {\r\n    if (!styleHost) {\r\n      throw new Error('aol-style-stroke must be a descendant of aol-style');\r\n    }\r\n    if (!!styleTextHost) {\r\n      this.host = styleTextHost;\r\n    } else if (!!styleCircleHost) {\r\n      this.host = styleCircleHost;\r\n    } else {\r\n      this.host = styleHost;\r\n    }\r\n    // console.log('creating aol-style-stroke with: ', this);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.style.Stroke instance with: ', this);\r\n    this.instance = new Stroke(this);\r\n    switch (this.host.componentType) {\r\n      case 'style':\r\n        this.host.instance.setStroke(this.instance);\r\n        // console.log('setting ol.style instance\\'s stroke:', this.host);\r\n        break;\r\n      case 'style-text':\r\n        this.host.instance.setStroke(this.instance);\r\n        break;\r\n      case 'style-circle':\r\n        this.host.stroke = this.instance;\r\n        // console.log('setting ol.style.circle instance\\'s stroke:', this.host);\r\n        break;\r\n      default:\r\n        throw new Error('unknown host type: ' + this.host);\r\n      // break;\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    if (changes['color']) {\r\n      this.instance.setColor(changes['color'].currentValue);\r\n    }\r\n    if (changes['lineCap']) {\r\n      this.instance.setLineCap(changes['lineCap'].currentValue);\r\n    }\r\n    if (changes['lineDash']) {\r\n      this.instance.setLineDash(changes['lineDash'].currentValue);\r\n    }\r\n    if (changes['lineJoin']) {\r\n      this.instance.setLineJoin(changes['lineJoin'].currentValue);\r\n    }\r\n    if (changes['miterLimit']) {\r\n      this.instance.setMiterLimit(changes['miterLimit'].currentValue);\r\n    }\r\n    if (changes['width']) {\r\n      this.instance.setWidth(changes['width'].currentValue);\r\n    }\r\n    this.host.update();\r\n    // console.log('changes detected in aol-style-stroke, setting new properties: ', changes);\r\n  }\r\n}\r\n","import { Component, Input, Host, OnInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { Icon } from 'ol/style';\r\nimport IconAnchorUnits from 'ol/style/IconAnchorUnits';\r\nimport IconOrigin from 'ol/style/IconOrigin';\r\nimport { StyleComponent } from './style.component';\r\n\r\n@Component({\r\n  selector: 'aol-style-icon',\r\n  template: `\r\n    <div class=\"aol-style-icon\"></div>\r\n  `,\r\n})\r\nexport class StyleIconComponent implements OnInit, OnChanges {\r\n  public instance: Icon;\r\n\r\n  @Input()\r\n  anchor: [number, number];\r\n  @Input()\r\n  anchorXUnits: IconAnchorUnits;\r\n  @Input()\r\n  anchorYUnits: IconAnchorUnits;\r\n  @Input()\r\n  anchorOrigin: IconOrigin;\r\n  @Input()\r\n  color: [number, number, number, number];\r\n  @Input()\r\n  crossOrigin: IconOrigin;\r\n  @Input()\r\n  img: string;\r\n  @Input()\r\n  offset: [number, number];\r\n  @Input()\r\n  offsetOrigin: IconOrigin;\r\n  @Input()\r\n  opacity: number;\r\n  @Input()\r\n  scale: number;\r\n  @Input()\r\n  snapToPixel: boolean;\r\n  @Input()\r\n  rotateWithView: boolean;\r\n  @Input()\r\n  rotation: number;\r\n  @Input()\r\n  size: [number, number];\r\n  @Input()\r\n  imgSize: [number, number];\r\n  @Input()\r\n  src: string;\r\n\r\n  constructor(@Host() private host: StyleComponent) {}\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.style.Icon instance with: ', this);\r\n    this.instance = new Icon(this);\r\n    this.host.instance.setImage(this.instance);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    if (changes['opacity']) {\r\n      this.instance.setOpacity(changes['opacity'].currentValue);\r\n    }\r\n    if (changes['rotation']) {\r\n      this.instance.setRotation(changes['rotation'].currentValue);\r\n    }\r\n    if (changes['scale']) {\r\n      this.instance.setScale(changes['scale'].currentValue);\r\n    }\r\n    if (changes['src']) {\r\n      this.instance = new Icon(this);\r\n      this.host.instance.setImage(this.instance);\r\n    }\r\n    this.host.update();\r\n    // console.log('changes detected in aol-style-icon: ', changes);\r\n  }\r\n}\r\n","import { Component, Input, Optional, OnInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { Fill } from 'ol/style';\r\nimport { StyleComponent } from './style.component';\r\nimport { StyleCircleComponent } from './circle.component';\r\nimport { StyleTextComponent } from './text.component';\r\nimport { Color } from 'ol/color';\r\nimport { ColorLike } from 'ol/colorlike';\r\n\r\n@Component({\r\n  selector: 'aol-style-fill',\r\n  template: `\r\n    <div class=\"aol-style-fill\"></div>\r\n  `,\r\n})\r\nexport class StyleFillComponent implements OnInit, OnChanges {\r\n  /* the typings do not have the setters */\r\n  private host: /*StyleComponent|StyleCircleComponent|StyleTextComponent*/ any;\r\n  public instance: Fill;\r\n\r\n  @Input()\r\n  color: Color | ColorLike;\r\n\r\n  constructor(\r\n    @Optional() styleHost: StyleComponent,\r\n    @Optional() styleCircleHost: StyleCircleComponent,\r\n    @Optional() styleTextHost: StyleTextComponent\r\n  ) {\r\n    if (!styleHost) {\r\n      throw new Error('aol-style-stroke must be a descendant of aol-style');\r\n    }\r\n    if (!!styleTextHost) {\r\n      this.host = styleTextHost;\r\n    } else if (!!styleCircleHost) {\r\n      this.host = styleCircleHost;\r\n    } else {\r\n      this.host = styleHost;\r\n    }\r\n    // console.log('creating aol-style-fill with: ', this);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.style.Fill instance with: ', this);\r\n    this.instance = new Fill(this);\r\n    switch (this.host.componentType) {\r\n      case 'style':\r\n        this.host.instance.setFill(this.instance);\r\n        // console.log('setting ol.style instance\\'s fill:', this.host);\r\n        break;\r\n      case 'style-text':\r\n        this.host.instance.setFill(this.instance);\r\n        break;\r\n      case 'style-circle':\r\n        this.host.fill = this.instance;\r\n        // console.log('setting ol.style.circle instance\\'s fill:', this.host);\r\n        break;\r\n      default:\r\n        throw new Error('unknown host type: ' + this.host);\r\n      // break;\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    if (changes['color']) {\r\n      this.instance.setColor(changes['color'].currentValue);\r\n    }\r\n    this.host.update();\r\n    // console.log('changes detected in aol-style-fill, setting new color: ', changes);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\r\nimport { Control, defaults } from 'ol/control';\r\nimport { Collection } from 'ol';\r\nimport { Options as AttributionOptions } from 'ol/control/Attribution';\r\nimport { Options as RotateOptions } from 'ol/control/Rotate';\r\nimport { Options as ZoomOptions } from 'ol/control/Zoom';\r\n\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-defaults',\r\n  template: '',\r\n})\r\nexport class DefaultControlComponent implements OnInit, OnDestroy {\r\n  instance: Collection<Control>;\r\n  @Input()\r\n  attribution: boolean;\r\n  @Input()\r\n  attributionOptions: AttributionOptions;\r\n  @Input()\r\n  rotate: boolean;\r\n  @Input()\r\n  rotateOptions: RotateOptions;\r\n  @Input()\r\n  zoom: boolean;\r\n  @Input()\r\n  zoomOptions: ZoomOptions;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    // console.log('ol.control.defaults init: ', this);\r\n    this.instance = defaults(this);\r\n    this.instance.forEach(c => this.map.instance.addControl(c));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-defaults');\r\n    this.instance.forEach(c => this.map.instance.removeControl(c));\r\n  }\r\n}\r\n","import { Component, ContentChild, OnDestroy, OnInit } from '@angular/core';\r\nimport { Control } from 'ol/control';\r\nimport { MapComponent } from '../map.component';\r\nimport { ContentComponent } from '../content.component';\r\n\r\n@Component({\r\n  selector: 'aol-control',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ControlComponent implements OnInit, OnDestroy {\r\n  public componentType = 'control';\r\n  instance: Control;\r\n  element: Element;\r\n  @ContentChild(ContentComponent)\r\n  content: ContentComponent;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    if (this.content) {\r\n      this.element = this.content.elementRef.nativeElement;\r\n      this.instance = new Control(this);\r\n      this.map.instance.addControl(this.instance);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.instance) {\r\n      this.map.instance.removeControl(this.instance);\r\n    }\r\n  }\r\n}\r\n","import { Component, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { Attribution } from 'ol/control';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-attribution',\r\n  template: ``,\r\n})\r\nexport class ControlAttributionComponent implements OnInit, OnDestroy {\r\n  public componentType = 'control';\r\n  instance: Attribution;\r\n  target: Element;\r\n  @Input()\r\n  collapsible: boolean;\r\n\r\n  constructor(private map: MapComponent, private element: ElementRef) {}\r\n\r\n  ngOnInit() {\r\n    this.target = this.element.nativeElement;\r\n    // console.log('ol.control.Attribution init: ', this);\r\n    this.instance = new Attribution(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-attribution');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { FullScreen } from 'ol/control';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-fullscreen',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ControlFullScreenComponent implements OnInit, OnDestroy {\r\n  instance: FullScreen;\r\n\r\n  @Input()\r\n  className: string;\r\n  @Input()\r\n  label: string;\r\n  @Input()\r\n  labelActive: string;\r\n  @Input()\r\n  tipLabel: string;\r\n  @Input()\r\n  keys: boolean;\r\n\r\n  constructor(private map: MapComponent) {\r\n    // console.log('instancing aol-control-fullscreen');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new FullScreen(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-fullscreen');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport MousePosition from 'ol/control/MousePosition';\r\nimport { MapComponent } from '../map.component';\r\nimport { CoordinateFormat } from 'ol/coordinate';\r\nimport { ProjectionLike } from 'ol/proj';\r\n\r\n@Component({\r\n  selector: 'aol-control-mouseposition',\r\n  template: ``,\r\n})\r\nexport class ControlMousePositionComponent implements OnInit, OnDestroy {\r\n  instance: MousePosition;\r\n  @Input()\r\n  coordinateFormat: CoordinateFormat;\r\n  @Input()\r\n  projection: ProjectionLike;\r\n  target: Element;\r\n\r\n  constructor(private map: MapComponent, private element: ElementRef) {}\r\n\r\n  ngOnInit() {\r\n    this.target = this.element.nativeElement;\r\n    // console.log('ol.control.MousePosition init: ', this);\r\n    this.instance = new MousePosition(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-mouseposition');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { Layer } from 'ol/layer';\r\nimport { View } from 'ol';\r\nimport { OverviewMap } from 'ol/control';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-overviewmap',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ControlOverviewMapComponent implements OnInit, OnChanges, OnDestroy {\r\n  instance: OverviewMap;\r\n  @Input()\r\n  collapsed: boolean;\r\n  @Input()\r\n  collapseLabel: string;\r\n  @Input()\r\n  collapsible: boolean;\r\n  @Input()\r\n  label: string;\r\n  @Input()\r\n  layers: Layer[];\r\n  @Input()\r\n  target: Element;\r\n  @Input()\r\n  tipLabel: string;\r\n  @Input()\r\n  view: View;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new OverviewMap(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (this.instance != null && changes.hasOwnProperty('view')) {\r\n      this.reloadInstance();\r\n    }\r\n  }\r\n\r\n  private reloadInstance() {\r\n    this.map.instance.removeControl(this.instance);\r\n    this.instance = new OverviewMap(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { Rotate } from 'ol/control';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-rotate',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ControlRotateComponent implements OnInit, OnDestroy {\r\n  instance: Rotate;\r\n\r\n  @Input()\r\n  className: string;\r\n  @Input()\r\n  label: string;\r\n  @Input()\r\n  tipLabel: string;\r\n  @Input()\r\n  duration: number;\r\n  @Input()\r\n  autoHide: boolean;\r\n\r\n  constructor(private map: MapComponent) {\r\n    // console.log('instancing aol-control-rotate');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new Rotate(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-rotate');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { ScaleLine } from 'ol/control';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-scaleline',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ControlScaleLineComponent implements OnInit, OnDestroy {\r\n  instance: ScaleLine;\r\n  @Input()\r\n  units: string;\r\n\r\n  constructor(private map: MapComponent) {\r\n    // console.log('instancing aol-control-scaleline');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new ScaleLine(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-scaleline');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { Zoom } from 'ol/control';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-zoom',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ControlZoomComponent implements OnInit, OnDestroy {\r\n  instance: Zoom;\r\n\r\n  @Input()\r\n  duration: number;\r\n  @Input()\r\n  zoomInLabel: string | Node;\r\n  @Input()\r\n  zoomOutLabel: string | Node;\r\n  @Input()\r\n  zoomInTipLabel: string;\r\n  @Input()\r\n  zoomOutTipLabel: string;\r\n  @Input()\r\n  delta: number;\r\n\r\n  constructor(private map: MapComponent) {\r\n    // console.log('instancing aol-control-zoom');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new Zoom(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-zoom');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { ZoomSlider } from 'ol/control';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-zoomslider',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ControlZoomSliderComponent implements OnInit, OnDestroy {\r\n  instance: ZoomSlider;\r\n\r\n  @Input()\r\n  className: string;\r\n  @Input()\r\n  duration: number;\r\n  @Input()\r\n  maxResolution: number;\r\n  @Input()\r\n  minResolution: number;\r\n\r\n  constructor(private map: MapComponent) {\r\n    // console.log('instancing aol-control-zoomslider');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new ZoomSlider(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-zoomslider');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { ZoomToExtent } from 'ol/control';\r\nimport { MapComponent } from '../map.component';\r\nimport { Extent } from 'ol/extent';\r\n\r\n@Component({\r\n  selector: 'aol-control-zoomtoextent',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ControlZoomToExtentComponent implements OnInit, OnDestroy {\r\n  instance: ZoomToExtent;\r\n\r\n  @Input()\r\n  className: string;\r\n  @Input()\r\n  label: string | Node;\r\n  @Input()\r\n  tipLabel: string;\r\n  @Input()\r\n  extent: Extent;\r\n\r\n  constructor(private map: MapComponent) {\r\n    // console.log('instancing aol-control-zoomtoextent');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new ZoomToExtent(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-zoomtoextent');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, forwardRef, Input } from '@angular/core';\r\nimport { FormatComponent } from './format.component';\r\nimport { MVT } from 'ol/format';\r\nimport { Geometry } from 'ol/geom';\r\nimport GeometryType from 'ol/geom/GeometryType';\r\n\r\n@Component({\r\n  selector: 'aol-format-mvt',\r\n  template: '',\r\n  providers: [{ provide: FormatComponent, useExisting: forwardRef(() => FormatMVTComponent) }],\r\n})\r\nexport class FormatMVTComponent extends FormatComponent {\r\n  instance: MVT;\r\n\r\n  @Input()\r\n  featureClass:\r\n    | ((geom: Geometry | { [k: string]: any }) => any)\r\n    | ((geom: GeometryType, arg2: number[], arg3: number[] | number[][], arg4: { [k: string]: any }) => any);\r\n  @Input()\r\n  geometryName: string;\r\n  @Input()\r\n  layerName: string;\r\n  @Input()\r\n  layers: string[];\r\n\r\n  constructor() {\r\n    super();\r\n    this.instance = new MVT(this);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { defaults, Interaction } from 'ol/interaction';\r\nimport { Collection } from 'ol';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-default',\r\n  template: '',\r\n})\r\nexport class DefaultInteractionComponent implements OnInit, OnDestroy {\r\n  instance: Collection<Interaction>;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = defaults();\r\n    this.instance.forEach(i => this.map.instance.addInteraction(i));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.instance.forEach(i => this.map.instance.removeInteraction(i));\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { DoubleClickZoom } from 'ol/interaction';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-doubleclickzoom',\r\n  template: '',\r\n})\r\nexport class DoubleClickZoomInteractionComponent implements OnInit, OnDestroy {\r\n  instance: DoubleClickZoom;\r\n\r\n  @Input()\r\n  duration: number;\r\n  @Input()\r\n  delta: number;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new DoubleClickZoom(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { DragAndDrop } from 'ol/interaction';\r\nimport Feature from 'ol/format/Feature';\r\nimport { MapComponent } from '../map.component';\r\nimport { ProjectionLike } from 'ol/proj';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-draganddrop',\r\n  template: '',\r\n})\r\nexport class DragAndDropInteractionComponent implements OnInit, OnDestroy {\r\n  instance: DragAndDrop;\r\n\r\n  @Input()\r\n  formatConstructors: ((n: Feature) => any)[];\r\n  @Input()\r\n  projection: ProjectionLike;\r\n  @Input()\r\n  target: Element;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new DragAndDrop(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\r\nimport { DragBox } from 'ol/interaction';\r\nimport { MapComponent } from '../map.component';\r\nimport { Condition } from 'ol/events/condition';\r\nimport { EndCondition } from 'ol/interaction/DragBox';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-dragbox',\r\n  template: '',\r\n})\r\nexport class DragBoxInteractionComponent implements OnInit, OnDestroy {\r\n  instance: DragBox;\r\n\r\n  @Input()\r\n  className: string;\r\n  @Input()\r\n  condition: Condition;\r\n  @Input()\r\n  boxEndCondition: EndCondition;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new DragBox(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\r\nimport { DragPan } from 'ol/interaction';\r\nimport Kinetic from 'ol/Kinetic';\r\nimport { MapComponent } from '../map.component';\r\nimport { Condition } from 'ol/events/condition';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-dragpan',\r\n  template: '',\r\n})\r\nexport class DragPanInteractionComponent implements OnInit, OnDestroy {\r\n  instance: DragPan;\r\n\r\n  @Input()\r\n  condition: Condition;\r\n  @Input()\r\n  kinetic: Kinetic;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new DragPan(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\r\nimport { DragRotate } from 'ol/interaction';\r\nimport { MapComponent } from '../map.component';\r\nimport { Condition } from 'ol/events/condition';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-dragrotate',\r\n  template: '',\r\n})\r\nexport class DragRotateInteractionComponent implements OnInit, OnDestroy {\r\n  instance: DragRotate;\r\n\r\n  @Input()\r\n  condition: Condition;\r\n  @Input()\r\n  duration: number;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new DragRotate(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\r\nimport { DragRotateAndZoom } from 'ol/interaction';\r\nimport { MapComponent } from '../map.component';\r\nimport { Condition } from 'ol/events/condition';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-dragrotateandzoom',\r\n  template: '',\r\n})\r\nexport class DragRotateAndZoomInteractionComponent implements OnInit, OnDestroy {\r\n  instance: DragRotateAndZoom;\r\n\r\n  @Input()\r\n  condition: Condition;\r\n  @Input()\r\n  duration: number;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new DragRotateAndZoom(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\r\nimport { DragZoom } from 'ol/interaction';\r\nimport { MapComponent } from '../map.component';\r\nimport { Condition } from 'ol/events/condition';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-dragzoom',\r\n  template: '',\r\n})\r\nexport class DragZoomInteractionComponent implements OnInit, OnDestroy {\r\n  instance: DragZoom;\r\n\r\n  @Input()\r\n  className: string;\r\n  @Input()\r\n  condition: Condition;\r\n  @Input()\r\n  duration: number;\r\n  @Input()\r\n  out: boolean;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new DragZoom(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { MouseWheelZoom } from 'ol/interaction';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-mousewheelzoom',\r\n  template: '',\r\n})\r\nexport class MouseWheelZoomInteractionComponent implements OnInit, OnDestroy {\r\n  instance: MouseWheelZoom;\r\n  @Input()\r\n  duration: number;\r\n  @Input()\r\n  timeout: number;\r\n  @Input()\r\n  useAnchor: boolean;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new MouseWheelZoom(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\r\nimport { PinchZoom } from 'ol/interaction';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-pinchzoom',\r\n  template: '',\r\n})\r\nexport class PinchZoomInteractionComponent implements OnInit, OnDestroy {\r\n  instance: PinchZoom;\r\n\r\n  @Input()\r\n  duration: number;\r\n  @Input()\r\n  constrainResolution: boolean;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new PinchZoom(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit, EventEmitter, Output } from '@angular/core';\r\nimport { MapComponent } from '../map.component';\r\nimport { Draw } from 'ol/interaction';\r\nimport { Collection, Feature } from 'ol';\r\nimport { Vector } from 'ol/source';\r\nimport GeometryType from 'ol/geom/GeometryType';\r\nimport { Style } from 'ol/style';\r\nimport { DrawEvent, GeometryFunction } from 'ol/interaction/Draw';\r\nimport { StyleFunction } from 'ol/style/Style';\r\nimport { Condition } from 'ol/events/condition';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-draw',\r\n  template: '',\r\n})\r\nexport class DrawInteractionComponent implements OnInit, OnDestroy {\r\n  instance: Draw;\r\n\r\n  @Input()\r\n  clickTolerance?: number;\r\n  @Input()\r\n  features?: Collection<Feature>;\r\n  @Input()\r\n  source?: Vector;\r\n  @Input()\r\n  snapTolerance?: number;\r\n  @Input()\r\n  type: GeometryType;\r\n  @Input()\r\n  maxPoints?: number;\r\n  @Input()\r\n  minPoints?: number;\r\n  @Input()\r\n  finishCondition?: Condition;\r\n  @Input()\r\n  style?: Style | Style[] | StyleFunction;\r\n  @Input()\r\n  geometryFunction?: GeometryFunction;\r\n  @Input()\r\n  geometryName?: string;\r\n  @Input()\r\n  condition?: Condition;\r\n  @Input()\r\n  freehandCondition?: Condition;\r\n  @Input()\r\n  freehand?: boolean;\r\n  @Input()\r\n  wrapX?: boolean;\r\n\r\n  @Output()\r\n  onChange = new EventEmitter<DrawEvent>();\r\n  @Output()\r\n  onChangeActive = new EventEmitter<DrawEvent>();\r\n  @Output()\r\n  onDrawEnd = new EventEmitter<DrawEvent>();\r\n  @Output()\r\n  onDrawStart = new EventEmitter<DrawEvent>();\r\n  @Output()\r\n  onPropertyChange = new EventEmitter<DrawEvent>();\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new Draw(this);\r\n    this.instance.on('change', (event: DrawEvent) => this.onChange.emit(event));\r\n    this.instance.on('change:active', (event: DrawEvent) => this.onChangeActive.emit(event));\r\n    this.instance.on('drawend', (event: DrawEvent) => this.onDrawEnd.emit(event));\r\n    this.instance.on('drawstart', (event: DrawEvent) => this.onDrawStart.emit(event));\r\n    this.instance.on('propertychange', (event: DrawEvent) => this.onPropertyChange.emit(event));\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { MapComponent } from '../map.component';\r\nimport { Select } from 'ol/interaction';\r\nimport { Layer } from 'ol/layer';\r\nimport { Style } from 'ol/style';\r\nimport { Collection, Feature } from 'ol';\r\nimport { SelectEvent, FilterFunction } from 'ol/interaction/Select';\r\nimport { StyleFunction } from 'ol/style/Style';\r\nimport { Condition } from 'ol/events/condition';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-select',\r\n  template: '',\r\n})\r\nexport class SelectInteractionComponent implements OnInit, OnDestroy {\r\n  instance: Select;\r\n\r\n  @Input()\r\n  addCondition?: Condition;\r\n  @Input()\r\n  condition?: Condition;\r\n  @Input()\r\n  layers?: Layer[] | ((layer: Layer) => boolean);\r\n  @Input()\r\n  style?: Style | Style[] | StyleFunction;\r\n  @Input()\r\n  removeCondition?: Condition;\r\n  @Input()\r\n  toggleCondition?: Condition;\r\n  @Input()\r\n  multi?: boolean;\r\n  @Input()\r\n  features?: Collection<Feature>;\r\n  @Input()\r\n  filter?: FilterFunction;\r\n  @Input()\r\n  wrapX?: boolean;\r\n\r\n  @Output()\r\n  onChange = new EventEmitter<SelectEvent>();\r\n  @Output()\r\n  onSelect = new EventEmitter<SelectEvent>();\r\n  @Output()\r\n  onPropertyChange = new EventEmitter<SelectEvent>();\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new Select(this);\r\n\r\n    this.instance.on('change', (event: SelectEvent) => this.onChange.emit(event));\r\n    this.instance.on('select', (event: SelectEvent) => this.onSelect.emit(event));\r\n    this.instance.on('propertychange', (event: SelectEvent) => this.onPropertyChange.emit(event));\r\n\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { MapComponent } from '../map.component';\r\nimport { Modify } from 'ol/interaction';\r\nimport { Collection, Feature } from 'ol';\r\nimport { Style } from 'ol/style';\r\nimport { Vector } from 'ol/source';\r\nimport { ModifyEvent } from 'ol/interaction/Modify';\r\nimport { StyleFunction } from 'ol/style/Style';\r\nimport { Condition } from 'ol/events/condition';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-modify',\r\n  template: '',\r\n})\r\nexport class ModifyInteractionComponent implements OnInit, OnDestroy {\r\n  instance: Modify;\r\n\r\n  @Input()\r\n  condition?: Condition;\r\n  @Input()\r\n  deleteCondition?: Condition;\r\n  @Input()\r\n  pixelTolerance?: number;\r\n  @Input()\r\n  style?: Style | Style[] | StyleFunction;\r\n  @Input()\r\n  features: Collection<Feature>;\r\n  @Input()\r\n  wrapX?: boolean;\r\n  @Input()\r\n  source?: Vector;\r\n\r\n  @Output()\r\n  onModifyEnd = new EventEmitter<ModifyEvent>();\r\n  @Output()\r\n  onModifyStart = new EventEmitter<ModifyEvent>();\r\n  @Output()\r\n  onChange = new EventEmitter<ModifyEvent>();\r\n  @Output()\r\n  onChangeActive = new EventEmitter<ModifyEvent>();\r\n  @Output()\r\n  onPropertyChange = new EventEmitter<ModifyEvent>();\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new Modify(this);\r\n    this.instance.on('change', (event: ModifyEvent) => this.onChange.emit(event));\r\n    this.instance.on('change:active', (event: ModifyEvent) => this.onChangeActive.emit(event));\r\n    this.instance.on('propertychange', (event: ModifyEvent) => this.onPropertyChange.emit(event));\r\n    this.instance.on('modifyend', (event: ModifyEvent) => this.onModifyEnd.emit(event));\r\n    this.instance.on('modifystart', (event: ModifyEvent) => this.onModifyStart.emit(event));\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Translate } from 'ol/interaction';\r\nimport { Collection, Feature } from 'ol';\r\nimport { Layer } from 'ol/layer';\r\nimport { TranslateEvent } from 'ol/interaction/Translate';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-translate',\r\n  template: '',\r\n})\r\nexport class TranslateInteractionComponent implements OnInit, OnDestroy {\r\n  instance: Translate;\r\n\r\n  @Input()\r\n  features?: Collection<Feature>;\r\n  @Input()\r\n  layers?: Layer[] | ((layer: Layer) => boolean);\r\n  @Input()\r\n  hitTolerance?: number;\r\n\r\n  @Output()\r\n  onChange: EventEmitter<TranslateEvent>;\r\n  @Output()\r\n  onPropertyChange: EventEmitter<TranslateEvent>;\r\n  @Output()\r\n  onTranslateEnd: EventEmitter<TranslateEvent>;\r\n  @Output()\r\n  onTranslateStart: EventEmitter<TranslateEvent>;\r\n  @Output()\r\n  onTranslating: EventEmitter<TranslateEvent>;\r\n\r\n  constructor(private map: MapComponent) {\r\n    this.onChange = new EventEmitter<TranslateEvent>();\r\n    this.onPropertyChange = new EventEmitter<TranslateEvent>();\r\n    this.onTranslateEnd = new EventEmitter<TranslateEvent>();\r\n    this.onTranslateStart = new EventEmitter<TranslateEvent>();\r\n    this.onTranslating = new EventEmitter<TranslateEvent>();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new Translate(this);\r\n\r\n    this.instance.on('change', (event: TranslateEvent) => this.onChange.emit(event));\r\n    this.instance.on('propertychange', (event: TranslateEvent) => this.onPropertyChange.emit(event));\r\n    this.instance.on('translateend', (event: TranslateEvent) => this.onTranslateEnd.emit(event));\r\n    this.instance.on('translatestart', (event: TranslateEvent) => this.onTranslateStart.emit(event));\r\n    this.instance.on('translating', (event: TranslateEvent) => this.onTranslating.emit(event));\r\n\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, ElementRef, OnInit } from '@angular/core';\r\nimport { Attribution } from 'ol/control';\r\n\r\n@Component({\r\n  selector: 'aol-attribution',\r\n  template: '<ng-content></ng-content>',\r\n})\r\nexport class AttributionComponent implements OnInit {\r\n  instance: Attribution;\r\n  html: string;\r\n\r\n  constructor(private elementRef: ElementRef) {}\r\n\r\n  ngOnInit() {\r\n    this.html = this.elementRef.nativeElement.innerHTML;\r\n    this.instance = new Attribution(this);\r\n  }\r\n}\r\n","import { AfterViewInit, Component, ContentChildren, Host, QueryList } from '@angular/core';\r\nimport { Attribution } from 'ol/control';\r\nimport { SourceComponent } from './sources/source.component';\r\nimport { AttributionComponent } from './attribution.component';\r\n\r\n@Component({\r\n  selector: 'aol-attributions',\r\n  template: '<ng-content></ng-content>',\r\n})\r\nexport class AttributionsComponent implements AfterViewInit {\r\n  instance: Array<Attribution>;\r\n\r\n  @ContentChildren(AttributionComponent)\r\n  attributions: QueryList<AttributionComponent>;\r\n\r\n  constructor(@Host() private source: SourceComponent) {}\r\n\r\n  /* we can do this at the very end */\r\n  ngAfterViewInit() {\r\n    if (this.attributions.length) {\r\n      this.instance = this.attributions.map(cmp => cmp.instance);\r\n      // console.log('setting attributions:', this.instance);\r\n      this.source.instance.setAttributions(this.instance);\r\n    }\r\n  }\r\n}\r\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\r\nimport { SourceComponent } from './source.component';\r\nimport { LayerTileComponent } from '../layers/layertile.component';\r\nimport { UTFGrid } from 'ol/source';\r\n\r\n@Component({\r\n  selector: 'aol-source-utfgrid',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceUTFGridComponent) }],\r\n})\r\nexport class SourceUTFGridComponent extends SourceComponent implements OnInit {\r\n  instance: UTFGrid;\r\n  @Input() tileJSON: JSON;\r\n  @Input() url: string;\r\n\r\n  constructor(@Host() layer: LayerTileComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new UTFGrid(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n}\r\n","import {AfterContentInit, AfterViewInit, Component, ContentChild, forwardRef, Host, Input, OnInit} from '@angular/core';\nimport {ProjectionLike} from 'ol/proj';\nimport {UrlFunction} from 'ol/Tile';\nimport stylefunction from 'ol-mapbox-style/stylefunction';\nimport {applyStyle, applyBackground} from 'ol-mapbox-style';\nimport {SourceComponent} from './source.component';\nimport {LayerVectorTileComponent} from '../layers/layervectortile.component';\nimport {MapComponent} from '../map.component';\nimport {SourceVectorTileComponent} from './vectortile.component';\nimport {HttpClient} from '@angular/common/http';\n\n@Component({\n  selector: 'aol-source-mapbox',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{provide: SourceComponent, useExisting: forwardRef(() => SourceMapboxVectorTileComponent)}],\n})\nexport class SourceMapboxVectorTileComponent extends SourceVectorTileComponent implements AfterContentInit {\n\n  @Input() styleUrl: string;\n\n  @Input() sourceName: string;\n\n  @Input() spriteJsonUrl: string;\n\n  @Input() spriteUrl: string;\n\n  private styleLoaded = false;\n\n  private spriteJsonLoaded = false;\n\n  private glStyle = {};\n\n  private spriteData = {};\n\n  constructor(@Host() layer: LayerVectorTileComponent, private map: MapComponent, private http: HttpClient) {\n    super(layer);\n  }\n\n\n  ngAfterContentInit(): void {\n    super.ngAfterContentInit();\n\n    this.http.get(this.styleUrl).subscribe(styleObject => {\n      this.glStyle = styleObject;\n      this.styleLoaded = true;\n      this.applyMapboxStyle();\n    });\n\n    this.http.get(this.spriteJsonUrl).subscribe(spriteData => {\n      this.spriteData = spriteData;\n      this.spriteJsonLoaded = true;\n      this.applyMapboxStyle();\n    });\n  }\n\n\n  applyMapboxStyle() {\n    // set the mapbox style\n    if (this.spriteJsonLoaded && this.styleLoaded) {\n      stylefunction(this.host.instance, this.glStyle, this.sourceName, undefined, this.spriteData, this.spriteUrl);\n      applyBackground(this.map.instance, this.glStyle);\n    }\n  }\n\n}\n","/*\r\n * Public API Surface of ngx-openlayers\r\n */\r\nimport {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {ViewComponent} from './lib/view.component';\r\nimport {GraticuleComponent} from './lib/graticule.component';\r\nimport {LayerGroupComponent} from './lib/layers/layergroup.component';\r\nimport {LayerImageComponent} from './lib/layers/layerimage.component';\r\nimport {LayerTileComponent} from './lib/layers/layertile.component';\r\nimport {MapComponent} from './lib/map.component';\r\nimport {LayerVectorComponent} from './lib/layers/layervector.component';\r\nimport {LayerVectorTileComponent} from './lib/layers/layervectortile.component';\r\nimport {SourceOsmComponent} from './lib/sources/osm.component';\r\nimport {SourceBingmapsComponent} from './lib/sources/bingmaps.component';\r\nimport {SourceClusterComponent} from './lib/sources/cluster.component';\r\nimport {SourceVectorComponent} from './lib/sources/vector.component';\r\nimport {SourceXYZComponent} from './lib/sources/xyz.component';\r\nimport {SourceTileWMTSComponent} from './lib/sources/tilewmts.component';\r\nimport {SourceVectorTileComponent} from './lib/sources/vectortile.component';\r\nimport {SourceTileWMSComponent} from './lib/sources/tilewms.component';\r\nimport {SourceTileJSONComponent} from './lib/sources/tilejson.component';\r\nimport {SourceGeoJSONComponent} from './lib/sources/geojson.component';\r\nimport {SourceImageStaticComponent} from './lib/sources/imagestatic.component';\r\nimport {SourceImageWMSComponent} from './lib/sources/imagewms.component';\r\nimport {SourceImageArcGISRestComponent} from './lib/sources/imagearcgisrest.component';\r\nimport {SourceRasterComponent} from './lib/sources/raster.component';\r\nimport {FeatureComponent} from './lib/feature.component';\r\nimport {GeometryCircleComponent} from './lib/geom/geometrycircle.component';\r\nimport {GeometryLinestringComponent} from './lib/geom/geometrylinestring.component';\r\nimport {GeometryMultiLinestringComponent} from './lib/geom/geometrymultilinestring.component';\r\nimport {GeometryMultiPointComponent} from './lib/geom/geometrymultipoint.component';\r\nimport {GeometryMultiPolygonComponent} from './lib/geom/geometrymultipolygon.component';\r\nimport {GeometryPointComponent} from './lib/geom/geometrypoint.component';\r\nimport {GeometryPolygonComponent} from './lib/geom/geometrypolygon.component';\r\nimport {CoordinateComponent} from './lib/coordinate.component';\r\nimport {CollectionCoordinatesComponent} from './lib/collectioncoordinates.component';\r\nimport {StyleComponent} from './lib/styles/style.component';\r\nimport {StyleCircleComponent} from './lib/styles/circle.component';\r\nimport {StyleStrokeComponent} from './lib/styles/stroke.component';\r\nimport {StyleIconComponent} from './lib/styles/icon.component';\r\nimport {StyleFillComponent} from './lib/styles/fill.component';\r\nimport {StyleTextComponent} from './lib/styles/text.component';\r\nimport {DefaultControlComponent} from './lib/controls/default.component';\r\nimport {ControlComponent} from './lib/controls/control.component';\r\nimport {ControlAttributionComponent} from './lib/controls/attribution.component';\r\nimport {ControlFullScreenComponent} from './lib/controls/fullscreen.component';\r\nimport {ControlMousePositionComponent} from './lib/controls/mouseposition.component';\r\nimport {ControlOverviewMapComponent} from './lib/controls/overviewmap.component';\r\nimport {ControlRotateComponent} from './lib/controls/rotate.component';\r\nimport {ControlScaleLineComponent} from './lib/controls/scaleline.component';\r\nimport {ControlZoomComponent} from './lib/controls/zoom.component';\r\nimport {ControlZoomSliderComponent} from './lib/controls/zoomslider.component';\r\nimport {ControlZoomToExtentComponent} from './lib/controls/zoomtoextent.component';\r\nimport {FormatMVTComponent} from './lib/formats/mvt.component';\r\nimport {TileGridComponent} from './lib/tilegrid.component';\r\nimport {TileGridWMTSComponent} from './lib/tilegridwmts.component';\r\nimport {DefaultInteractionComponent} from './lib/interactions/default.component';\r\nimport {DoubleClickZoomInteractionComponent} from './lib/interactions/doubleclickzoom.component';\r\nimport {DragAndDropInteractionComponent} from './lib/interactions/draganddrop.component';\r\nimport {DragBoxInteractionComponent} from './lib/interactions/dragbox.component';\r\nimport {DragPanInteractionComponent} from './lib/interactions/dragpan.component';\r\nimport {DragRotateInteractionComponent} from './lib/interactions/dragrotate.component';\r\nimport {DragRotateAndZoomInteractionComponent} from './lib/interactions/dragrotateandzoom.component';\r\nimport {DragZoomInteractionComponent} from './lib/interactions/dragzoom.component';\r\nimport {MouseWheelZoomInteractionComponent} from './lib/interactions/mousewheelzoom.component';\r\nimport {PinchZoomInteractionComponent} from './lib/interactions/pinchzoom.component';\r\nimport {DrawInteractionComponent} from './lib/interactions/draw.component';\r\nimport {SelectInteractionComponent} from './lib/interactions/select.component';\r\nimport {ModifyInteractionComponent} from './lib/interactions/modify.component';\r\nimport {TranslateInteractionComponent} from './lib/interactions/translate.component';\r\nimport {OverlayComponent} from './lib/overlay.component';\r\nimport {ContentComponent} from './lib/content.component';\r\nimport {AttributionsComponent} from './lib/attributions.component';\r\nimport {AttributionComponent} from './lib/attribution.component';\r\nimport {SourceUTFGridComponent} from './lib/sources/utfgrid.component';\r\nimport {SourceMapboxVectorTileComponent} from './lib/sources/source-mapbox-vector-tile.component';\r\nimport {HttpClientModule} from '@angular/common/http';\r\n\r\nexport {\r\n  MapComponent,\r\n  ViewComponent,\r\n  GraticuleComponent,\r\n  LayerGroupComponent,\r\n  LayerImageComponent,\r\n  LayerTileComponent,\r\n  LayerVectorComponent,\r\n  LayerVectorTileComponent,\r\n  SourceOsmComponent,\r\n  SourceBingmapsComponent,\r\n  SourceClusterComponent,\r\n  SourceUTFGridComponent,\r\n  SourceVectorComponent,\r\n  SourceXYZComponent,\r\n  SourceVectorTileComponent,\r\n  SourceTileWMSComponent,\r\n  SourceTileWMTSComponent,\r\n  SourceTileJSONComponent,\r\n  SourceGeoJSONComponent,\r\n  SourceImageStaticComponent,\r\n  SourceImageWMSComponent,\r\n  SourceRasterComponent,\r\n  SourceImageArcGISRestComponent,\r\n  FeatureComponent,\r\n  GeometryLinestringComponent,\r\n  GeometryMultiLinestringComponent,\r\n  GeometryMultiPointComponent,\r\n  GeometryMultiPolygonComponent,\r\n  GeometryPointComponent,\r\n  GeometryPolygonComponent,\r\n  GeometryCircleComponent,\r\n  CoordinateComponent,\r\n  CollectionCoordinatesComponent,\r\n  StyleComponent,\r\n  StyleCircleComponent,\r\n  StyleFillComponent,\r\n  StyleIconComponent,\r\n  StyleStrokeComponent,\r\n  StyleTextComponent,\r\n  DefaultControlComponent,\r\n  ControlComponent,\r\n  ControlAttributionComponent,\r\n  ControlFullScreenComponent,\r\n  ControlMousePositionComponent,\r\n  ControlOverviewMapComponent,\r\n  ControlRotateComponent,\r\n  ControlScaleLineComponent,\r\n  ControlZoomComponent,\r\n  ControlZoomSliderComponent,\r\n  ControlZoomToExtentComponent,\r\n  FormatMVTComponent,\r\n  TileGridComponent,\r\n  TileGridWMTSComponent,\r\n  DefaultInteractionComponent,\r\n  DoubleClickZoomInteractionComponent,\r\n  DragAndDropInteractionComponent,\r\n  DragBoxInteractionComponent,\r\n  DragPanInteractionComponent,\r\n  DragRotateInteractionComponent,\r\n  DragRotateAndZoomInteractionComponent,\r\n  DragZoomInteractionComponent,\r\n  MouseWheelZoomInteractionComponent,\r\n  PinchZoomInteractionComponent,\r\n  DrawInteractionComponent,\r\n  SelectInteractionComponent,\r\n  ModifyInteractionComponent,\r\n  TranslateInteractionComponent,\r\n  OverlayComponent,\r\n  ContentComponent,\r\n  AttributionsComponent,\r\n  AttributionComponent,\r\n  SourceMapboxVectorTileComponent\r\n};\r\n\r\nconst COMPONENTS = [\r\n  MapComponent,\r\n\r\n  ViewComponent,\r\n  GraticuleComponent,\r\n\r\n  LayerGroupComponent,\r\n  LayerImageComponent,\r\n  LayerTileComponent,\r\n  LayerVectorComponent,\r\n  LayerVectorTileComponent,\r\n\r\n  SourceOsmComponent,\r\n  SourceBingmapsComponent,\r\n  SourceClusterComponent,\r\n  SourceUTFGridComponent,\r\n  SourceVectorComponent,\r\n  SourceXYZComponent,\r\n  SourceVectorTileComponent,\r\n  SourceTileWMSComponent,\r\n  SourceTileWMTSComponent,\r\n  SourceTileJSONComponent,\r\n  SourceGeoJSONComponent,\r\n  SourceImageStaticComponent,\r\n  SourceImageWMSComponent,\r\n  SourceImageArcGISRestComponent,\r\n  SourceRasterComponent,\r\n  FeatureComponent,\r\n  GeometryLinestringComponent,\r\n  GeometryMultiLinestringComponent,\r\n  GeometryMultiPointComponent,\r\n  GeometryMultiPolygonComponent,\r\n  GeometryPointComponent,\r\n  GeometryPolygonComponent,\r\n  GeometryCircleComponent,\r\n  CoordinateComponent,\r\n  CollectionCoordinatesComponent,\r\n\r\n  StyleComponent,\r\n  StyleCircleComponent,\r\n  StyleFillComponent,\r\n  StyleIconComponent,\r\n  StyleStrokeComponent,\r\n  StyleTextComponent,\r\n\r\n  DefaultControlComponent,\r\n  ControlComponent,\r\n  ControlAttributionComponent,\r\n  ControlFullScreenComponent,\r\n  ControlMousePositionComponent,\r\n  ControlOverviewMapComponent,\r\n  ControlRotateComponent,\r\n  ControlScaleLineComponent,\r\n  ControlZoomComponent,\r\n  ControlZoomSliderComponent,\r\n  ControlZoomToExtentComponent,\r\n\r\n  FormatMVTComponent,\r\n  TileGridComponent,\r\n  TileGridWMTSComponent,\r\n\r\n  DefaultInteractionComponent,\r\n  DoubleClickZoomInteractionComponent,\r\n  DragAndDropInteractionComponent,\r\n  DragBoxInteractionComponent,\r\n  DragPanInteractionComponent,\r\n  DragRotateInteractionComponent,\r\n  DragRotateAndZoomInteractionComponent,\r\n  DragZoomInteractionComponent,\r\n  MouseWheelZoomInteractionComponent,\r\n  PinchZoomInteractionComponent,\r\n  DrawInteractionComponent,\r\n  SelectInteractionComponent,\r\n  ModifyInteractionComponent,\r\n  TranslateInteractionComponent,\r\n\r\n  OverlayComponent,\r\n  ContentComponent,\r\n  AttributionsComponent,\r\n  AttributionComponent,\r\n  SourceMapboxVectorTileComponent\r\n];\r\n\r\n@NgModule({\r\n  declarations: COMPONENTS,\r\n  imports: [CommonModule, HttpClientModule],\r\n  exports: COMPONENTS,\r\n})\r\nexport class AngularOpenlayersModule {\r\n}\r\n"],"names":["Vector","WMTS","VectorTile","Circle","defaults"],"mappings":"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"}
