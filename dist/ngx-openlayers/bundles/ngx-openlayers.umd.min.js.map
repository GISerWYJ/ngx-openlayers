{"version":3,"sources":["ng://ngx-openlayers/lib/map.component.ts","ng://ngx-openlayers/lib/view.component.ts","ng://ngx-openlayers/lib/graticule.component.ts","null","ng://ngx-openlayers/lib/layers/layer.component.ts","ng://ngx-openlayers/lib/layers/layergroup.component.ts","ng://ngx-openlayers/lib/layers/layerimage.component.ts","ng://ngx-openlayers/lib/layers/layertile.component.ts","ng://ngx-openlayers/lib/layers/layervector.component.ts","ng://ngx-openlayers/lib/layers/layervectortile.component.ts","ng://ngx-openlayers/lib/sources/source.component.ts","ng://ngx-openlayers/lib/tilegrid.component.ts","ng://ngx-openlayers/lib/sources/raster.component.ts","ng://ngx-openlayers/lib/sources/xyz.component.ts","ng://ngx-openlayers/lib/sources/osm.component.ts","ng://ngx-openlayers/lib/sources/bingmaps.component.ts","ng://ngx-openlayers/lib/sources/vector.component.ts","ng://ngx-openlayers/lib/sources/cluster.component.ts","ng://ngx-openlayers/lib/tilegridwmts.component.ts","ng://ngx-openlayers/lib/sources/tilewmts.component.ts","ng://ngx-openlayers/lib/formats/format.component.ts","ng://ngx-openlayers/lib/sources/vectortile.component.ts","ng://ngx-openlayers/lib/sources/tilewms.component.ts","ng://ngx-openlayers/lib/sources/tilejson.component.ts","ng://ngx-openlayers/lib/sources/geojson.component.ts","ng://ngx-openlayers/lib/sources/imagestatic.component.ts","ng://ngx-openlayers/lib/sources/imagewms.component.ts","ng://ngx-openlayers/lib/sources/imagearcgisrest.component.ts","ng://ngx-openlayers/lib/feature.component.ts","ng://ngx-openlayers/lib/geom/simplegeometry.component.ts","ng://ngx-openlayers/lib/geom/geometrycircle.component.ts","ng://ngx-openlayers/lib/geom/geometrylinestring.component.ts","ng://ngx-openlayers/lib/geom/geometrymultilinestring.component.ts","ng://ngx-openlayers/lib/geom/geometrymultipoint.component.ts","ng://ngx-openlayers/lib/geom/geometrymultipolygon.component.ts","ng://ngx-openlayers/lib/geom/geometrypoint.component.ts","ng://ngx-openlayers/lib/geom/geometrypolygon.component.ts","ng://ngx-openlayers/lib/content.component.ts","ng://ngx-openlayers/lib/overlay.component.ts","ng://ngx-openlayers/lib/coordinate.component.ts","ng://ngx-openlayers/lib/collectioncoordinates.component.ts","ng://ngx-openlayers/lib/styles/style.component.ts","ng://ngx-openlayers/lib/styles/circle.component.ts","ng://ngx-openlayers/lib/styles/text.component.ts","ng://ngx-openlayers/lib/styles/stroke.component.ts","ng://ngx-openlayers/lib/styles/icon.component.ts","ng://ngx-openlayers/lib/styles/fill.component.ts","ng://ngx-openlayers/lib/controls/default.component.ts","ng://ngx-openlayers/lib/controls/control.component.ts","ng://ngx-openlayers/lib/controls/attribution.component.ts","ng://ngx-openlayers/lib/controls/fullscreen.component.ts","ng://ngx-openlayers/lib/controls/mouseposition.component.ts","ng://ngx-openlayers/lib/controls/overviewmap.component.ts","ng://ngx-openlayers/lib/controls/rotate.component.ts","ng://ngx-openlayers/lib/controls/scaleline.component.ts","ng://ngx-openlayers/lib/controls/zoom.component.ts","ng://ngx-openlayers/lib/controls/zoomslider.component.ts","ng://ngx-openlayers/lib/controls/zoomtoextent.component.ts","ng://ngx-openlayers/lib/formats/mvt.component.ts","ng://ngx-openlayers/lib/interactions/default.component.ts","ng://ngx-openlayers/lib/interactions/doubleclickzoom.component.ts","ng://ngx-openlayers/lib/interactions/draganddrop.component.ts","ng://ngx-openlayers/lib/interactions/dragbox.component.ts","ng://ngx-openlayers/lib/interactions/dragpan.component.ts","ng://ngx-openlayers/lib/interactions/dragrotate.component.ts","ng://ngx-openlayers/lib/interactions/dragrotateandzoom.component.ts","ng://ngx-openlayers/lib/interactions/dragzoom.component.ts","ng://ngx-openlayers/lib/interactions/mousewheelzoom.component.ts","ng://ngx-openlayers/lib/interactions/pinchzoom.component.ts","ng://ngx-openlayers/lib/interactions/draw.component.ts","ng://ngx-openlayers/lib/interactions/select.component.ts","ng://ngx-openlayers/lib/interactions/modify.component.ts","ng://ngx-openlayers/lib/interactions/translate.component.ts","ng://ngx-openlayers/lib/attribution.component.ts","ng://ngx-openlayers/lib/attributions.component.ts","ng://ngx-openlayers/lib/sources/utfgrid.component.ts","ng://ngx-openlayers/lib/sources/source-mapbox-vector-tile.component.ts","ng://ngx-openlayers/public_api.ts"],"names":["MapComponent","prototype","ngOnInit","_this","this","instance","Map","setTarget","host","nativeElement","firstElementChild","on","event","onClick","emit","onDblClick","onMoveEnd","onPointerDrag","onPointerMove","onPostCompose","onPostRender","onPreCompose","onPropertyChange","onSingleClick","ngOnChanges","changes","properties","key","hasOwnProperty","currentValue","setProperties","ngAfterViewInit","updateSize","Component","args","selector","template","ElementRef","Input","Output","componentType","width","height","controls","interactions","EventEmitter","ViewComponent","View","setView","onChangeZoom","onChangeResolution","onChangeCenter","zoomAnimation","animate","zoom","setZoom","ngOnDestroy","GraticuleComponent","Graticule","setMap","map","ngAfterContentInit","strokeStyle","showLabels","lonLabelPosition","latLabelPosition","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","__extends","__","constructor","create","LayerComponent","precompose","undefined","postcompose","getLayers","push","remove","un","previousValue","tslib_1.__extends","LayerGroupComponent","Group","_super","call","decorators","type","SkipSelf","Optional","group","LayerImageComponent","Image","LayerTileComponent","Tile","LayerVectorComponent","Vector","LayerVectorTileComponent","VectorTile","SourceComponent","setSource","raster","sources","_register","s","init","TileGridComponent","resolutions","TileGrid","createXYZ","SourceRasterComponent","Raster","beforeOperations","afterOperations","providers","provide","useExisting","forwardRef","Host","layer","SourceXYZComponent","tileGridXYZ","tileGrid","XYZ","tileLoadStart","tileLoadEnd","tileLoadError","ContentChild","SourceOsmComponent","OSM","SourceBingmapsComponent","BingMaps","imagerySet","SourceVectorComponent","SourceClusterComponent","source","sourceVectorComponent","Cluster","TileGridWMTSComponent","WMTS","SourceTileWMTSComponent","url","setLayerSource","tileGridWMTS","FormatComponent","SourceVectorTileComponent","formatComponent","format","tileGridComponent","SourceTileWMSComponent","TileWMS","updateParams","params","SourceTileJSONComponent","TileJSON","SourceGeoJSONComponent","GeoJSON","SourceImageStaticComponent","ImageStatic","onImageLoadStart","onImageLoadEnd","onImageLoadError","SourceImageWMSComponent","ImageWMS","SourceImageArcGISRestComponent","ImageArcGISRest","ratio","FeatureComponent","Feature","id","setId","addFeature","removeFeature","SimpleGeometryComponent","setGeometry","defineProperty","GeometryCircleComponent","getRadius","radius","setRadius","Circle","GeometryLinestringComponent","LineString","GeometryMultiLinestringComponent","MultiLineString","GeometryMultiPointComponent","MultiPoint","GeometryMultiPolygonComponent","MultiPolygon","GeometryPointComponent","Point","GeometryPolygonComponent","Polygon","ContentComponent","elementRef","OverlayComponent","content","element","Overlay","addOverlay","removeOverlay","CoordinateComponent","e","onMapViewChanged","mapSrid","getView","getProjection","getCode","transformCoordinates","target","get","transformedCoordinates","srid","x","y","transform","setCoordinates","setCenter","setPosition","viewHost","geometryPointHost","geometryCircleHost","overlayHost","CollectionCoordinatesComponent","coordinates","c","cc","ccc","geometryLinestring","geometryPolygon","geometryMultipoint","geometryMultilinestring","geometryMultipolygon","Error","StyleComponent","update","changed","Style","setStyle","featureHost","layerHost","StyleCircleComponent","setImage","StyleTextComponent","Text","setText","setFont","setOffsetX","setOffsetY","setScale","setRotation","setTextAlign","setTextBaseline","StyleStrokeComponent","Stroke","setStroke","stroke","setColor","setLineCap","setLineDash","setLineJoin","setMiterLimit","setWidth","styleHost","styleCircleHost","styleTextHost","StyleIconComponent","Icon","setOpacity","StyleFillComponent","Fill","setFill","fill","DefaultControlComponent","defaults","forEach","addControl","removeControl","ControlComponent","Control","ControlAttributionComponent","Attribution","ControlFullScreenComponent","FullScreen","ControlMousePositionComponent","MousePosition","ControlOverviewMapComponent","OverviewMap","reloadInstance","ControlRotateComponent","Rotate","ControlScaleLineComponent","ScaleLine","ControlZoomComponent","Zoom","ControlZoomSliderComponent","ZoomSlider","ControlZoomToExtentComponent","ZoomToExtent","FormatMVTComponent","MVT","DefaultInteractionComponent","i","addInteraction","removeInteraction","DoubleClickZoomInteractionComponent","DoubleClickZoom","DragAndDropInteractionComponent","DragAndDrop","DragBoxInteractionComponent","DragBox","DragPanInteractionComponent","DragPan","DragRotateInteractionComponent","DragRotate","DragRotateAndZoomInteractionComponent","DragRotateAndZoom","DragZoomInteractionComponent","DragZoom","MouseWheelZoomInteractionComponent","MouseWheelZoom","PinchZoomInteractionComponent","PinchZoom","DrawInteractionComponent","Draw","onChange","onChangeActive","onDrawEnd","onDrawStart","SelectInteractionComponent","Select","onSelect","ModifyInteractionComponent","Modify","onModifyEnd","onModifyStart","TranslateInteractionComponent","Translate","onTranslateEnd","onTranslateStart","onTranslating","AttributionComponent","html","innerHTML","AttributionsComponent","attributions","length","cmp","setAttributions","ContentChildren","SourceUTFGridComponent","UTFGrid","SourceMapboxVectorTileComponent","http","styleUrl","subscribe","styleObject","glStyle","styleLoaded","applyMapboxStyle","spriteJsonUrl","spriteData","spriteJsonLoaded","stylefunction","sourceName","spriteUrl","applyBackground","HttpClient","COMPONENTS","AngularOpenlayersModule","NgModule","declarations","imports","CommonModule","HttpClientModule","exports"],"mappings":"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","sourcesContent":["import {\r\n  Component,\r\n  OnInit,\r\n  ElementRef,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  AfterViewInit,\r\n  SimpleChanges,\r\n  OnChanges,\r\n} from '@angular/core';\r\nimport Map from 'ol/Map';\r\nimport MapBrowserEvent from 'ol/MapBrowserEvent';\r\nimport MapEvent from 'ol/MapEvent';\r\nimport ObjectEvent from 'ol/Object';\r\nimport RenderEvent from 'ol/render/Event';\r\nimport { Control } from 'ol/control';\r\nimport { Interaction } from 'ol/interaction';\r\n\r\n@Component({\r\n  selector: 'aol-map',\r\n  template: `\r\n    <div [style.width]=\"width\" [style.height]=\"height\"></div>\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class MapComponent implements OnInit, AfterViewInit, OnChanges {\r\n  public instance: Map;\r\n  public componentType = 'map';\r\n\r\n  @Input()\r\n  width = '100%';\r\n  @Input()\r\n  height = '100%';\r\n  @Input()\r\n  pixelRatio: number;\r\n  @Input()\r\n  keyboardEventTarget: Element | string;\r\n  @Input()\r\n  loadTilesWhileAnimating: boolean;\r\n  @Input()\r\n  loadTilesWhileInteracting: boolean;\r\n  @Input()\r\n  logo: string | boolean;\r\n  @Input()\r\n  renderer: 'canvas' | 'webgl';\r\n\r\n  @Output()\r\n  onClick: EventEmitter<MapBrowserEvent>;\r\n  @Output()\r\n  onDblClick: EventEmitter<MapBrowserEvent>;\r\n  @Output()\r\n  onMoveEnd: EventEmitter<MapEvent>;\r\n  @Output()\r\n  onPointerDrag: EventEmitter<MapBrowserEvent>;\r\n  @Output()\r\n  onPointerMove: EventEmitter<MapBrowserEvent>;\r\n  @Output()\r\n  onPostCompose: EventEmitter<RenderEvent>;\r\n  @Output()\r\n  onPostRender: EventEmitter<MapEvent>;\r\n  @Output()\r\n  onPreCompose: EventEmitter<RenderEvent>;\r\n  @Output()\r\n  onPropertyChange: EventEmitter<ObjectEvent>;\r\n  @Output()\r\n  onSingleClick: EventEmitter<MapBrowserEvent>;\r\n\r\n  // we pass empty arrays to not get default controls/interactions because we have our own directives\r\n  controls: Control[] = [];\r\n  interactions: Interaction[] = [];\r\n\r\n  constructor(private host: ElementRef) {\r\n    this.onClick = new EventEmitter<MapBrowserEvent>();\r\n    this.onDblClick = new EventEmitter<MapBrowserEvent>();\r\n    this.onMoveEnd = new EventEmitter<MapEvent>();\r\n    this.onPointerDrag = new EventEmitter<MapBrowserEvent>();\r\n    this.onPointerMove = new EventEmitter<MapBrowserEvent>();\r\n    this.onPostCompose = new EventEmitter<RenderEvent>();\r\n    this.onPostRender = new EventEmitter<MapEvent>();\r\n    this.onPreCompose = new EventEmitter<RenderEvent>();\r\n    this.onPropertyChange = new EventEmitter<ObjectEvent>();\r\n    this.onSingleClick = new EventEmitter<MapBrowserEvent>();\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.Map instance with:', this);\r\n    this.instance = new Map(this);\r\n    this.instance.setTarget(this.host.nativeElement.firstElementChild);\r\n    this.instance.on('click', (event: MapBrowserEvent) => this.onClick.emit(event));\r\n    this.instance.on('dblclick', (event: MapBrowserEvent) => this.onDblClick.emit(event));\r\n    this.instance.on('moveend', (event: MapEvent) => this.onMoveEnd.emit(event));\r\n    this.instance.on('pointerdrag', (event: MapBrowserEvent) => this.onPointerDrag.emit(event));\r\n    this.instance.on('pointermove', (event: MapBrowserEvent) => this.onPointerMove.emit(event));\r\n    this.instance.on('postcompose', (event: RenderEvent) => this.onPostCompose.emit(event));\r\n    this.instance.on('postrender', (event: MapEvent) => this.onPostRender.emit(event));\r\n    this.instance.on('precompose', (event: RenderEvent) => this.onPreCompose.emit(event));\r\n    this.instance.on('propertychange', (event: ObjectEvent) => this.onPropertyChange.emit(event));\r\n    this.instance.on('singleclick', (event: MapBrowserEvent) => this.onSingleClick.emit(event));\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const properties: { [index: string]: any } = {};\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    for (const key in changes) {\r\n      if (changes.hasOwnProperty(key)) {\r\n        properties[key] = changes[key].currentValue;\r\n      }\r\n    }\r\n    // console.log('changes detected in aol-map, setting new properties: ', properties);\r\n    this.instance.setProperties(properties, false);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.instance.updateSize();\r\n  }\r\n}\r\n","import { Component, Input, OnInit, OnChanges, OnDestroy, SimpleChanges, EventEmitter, Output } from '@angular/core';\r\nimport View from 'ol/View';\r\nimport { MapComponent } from './map.component';\r\nimport { ObjectEvent } from 'ol';\r\nimport { Extent } from 'ol/extent';\r\nimport { Coordinate } from 'ol/coordinate';\r\n\r\n@Component({\r\n  selector: 'aol-view',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ViewComponent implements OnInit, OnChanges, OnDestroy {\r\n  public instance: View;\r\n  public componentType = 'view';\r\n\r\n  @Input()\r\n  constrainRotation: boolean | number;\r\n  @Input()\r\n  enableRotation: boolean;\r\n  @Input()\r\n  extent: Extent;\r\n  @Input()\r\n  maxResolution: number;\r\n  @Input()\r\n  minResolution: number;\r\n  @Input()\r\n  maxZoom: number;\r\n  @Input()\r\n  minZoom: number;\r\n  @Input()\r\n  resolution: number;\r\n  @Input()\r\n  resolutions: number[];\r\n  @Input()\r\n  rotation: number;\r\n  @Input()\r\n  zoom: number;\r\n  @Input()\r\n  zoomFactor: number;\r\n  @Input()\r\n  center: Coordinate;\r\n  @Input()\r\n  projection: string;\r\n  @Input()\r\n  zoomAnimation = false;\r\n\r\n  @Output()\r\n  onChangeZoom: EventEmitter<ObjectEvent> = new EventEmitter<ObjectEvent>();\r\n  @Output()\r\n  onChangeResolution: EventEmitter<ObjectEvent> = new EventEmitter<ObjectEvent>();\r\n  @Output()\r\n  onChangeCenter: EventEmitter<ObjectEvent> = new EventEmitter<ObjectEvent>();\r\n\r\n  constructor(private host: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.View instance with: ', this);\r\n    this.instance = new View(this);\r\n    this.host.instance.setView(this.instance);\r\n\r\n    this.instance.on('change:zoom', (event: ObjectEvent) => this.onChangeZoom.emit(event));\r\n    this.instance.on('change:resolution', (event: ObjectEvent) => this.onChangeResolution.emit(event));\r\n    this.instance.on('change:center', (event: ObjectEvent) => this.onChangeCenter.emit(event));\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const properties: { [index: string]: any } = {};\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    for (const key in changes) {\r\n      if (changes.hasOwnProperty(key)) {\r\n        switch (key) {\r\n          case 'zoom':\r\n            /** Work-around: setting the zoom via setProperties does not work. */\r\n            if (this.zoomAnimation) {\r\n              this.instance.animate({ zoom: changes[key].currentValue });\r\n            } else {\r\n              this.instance.setZoom(changes[key].currentValue);\r\n            }\r\n            break;\r\n          case 'projection':\r\n            this.instance = new View(this);\r\n            this.host.instance.setView(this.instance);\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        properties[key] = changes[key].currentValue;\r\n      }\r\n    }\r\n    // console.log('changes detected in aol-view, setting new properties: ', properties);\r\n    this.instance.setProperties(properties, false);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-view');\r\n  }\r\n}\r\n","import { Component, Input, AfterContentInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { Graticule } from 'ol';\r\nimport { Stroke } from 'ol/style';\r\nimport { MapComponent } from './map.component';\r\n\r\n@Component({\r\n  selector: 'aol-graticule',\r\n  template: '<ng-content></ng-content>',\r\n})\r\nexport class GraticuleComponent implements AfterContentInit, OnChanges {\r\n  instance: any;\r\n  public componentType = 'graticule';\r\n\r\n  @Input()\r\n  strokeStyle: Stroke;\r\n  @Input()\r\n  showLabels: boolean;\r\n  @Input()\r\n  lonLabelPosition: number;\r\n  @Input()\r\n  latLabelPosition: number;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const properties: { [index: string]: any } = {};\r\n\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n\r\n    for (const key in changes) {\r\n      if (changes.hasOwnProperty(key)) {\r\n        properties[key] = changes[key].currentValue;\r\n      }\r\n    }\r\n\r\n    if (properties) {\r\n      this.instance = new Graticule(properties);\r\n    }\r\n    this.instance.setMap(this.map.instance);\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this.instance = new Graticule({\r\n      strokeStyle: this.strokeStyle,\r\n      showLabels: this.showLabels,\r\n      lonLabelPosition: this.lonLabelPosition,\r\n      latLabelPosition: this.latLabelPosition,\r\n    });\r\n    this.instance.setMap(this.map.instance);\r\n  }\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { OnDestroy, OnInit, OnChanges, Input, SimpleChanges } from '@angular/core';\r\nimport { Event } from 'ol/events';\r\nimport { MapComponent } from '../map.component';\r\nimport { LayerGroupComponent } from './layergroup.component';\r\nimport { Extent } from 'ol/extent';\r\n\r\nexport abstract class LayerComponent implements OnInit, OnChanges, OnDestroy {\r\n  public instance: any;\r\n  public componentType = 'layer';\r\n\r\n  @Input()\r\n  opacity: number;\r\n  @Input()\r\n  visible: boolean;\r\n  @Input()\r\n  extent: Extent;\r\n  @Input()\r\n  zIndex: number;\r\n  @Input()\r\n  minResolution: number;\r\n  @Input()\r\n  maxResolution: number;\r\n\r\n  @Input()\r\n  precompose: (evt: Event) => void;\r\n  @Input()\r\n  postcompose: (evt: Event) => void;\r\n\r\n  constructor(protected host: MapComponent | LayerGroupComponent) {}\r\n\r\n  ngOnInit() {\r\n    if (this.precompose !== null && this.precompose !== undefined) {\r\n      this.instance.on('precompose', this.precompose);\r\n    }\r\n    if (this.postcompose !== null && this.postcompose !== undefined) {\r\n      this.instance.on('postcompose', this.postcompose);\r\n    }\r\n    this.host.instance.getLayers().push(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.host.instance.getLayers().remove(this.instance);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const properties: { [index: string]: any } = {};\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    for (const key in changes) {\r\n      if (changes.hasOwnProperty(key)) {\r\n        properties[key] = changes[key].currentValue;\r\n        if (key === 'precompose') {\r\n          this.instance.un('precompose', changes[key].previousValue);\r\n          this.instance.on('precompose', changes[key].currentValue);\r\n        }\r\n        if (key === 'postcompose') {\r\n          this.instance.un('postcompose', changes[key].previousValue);\r\n          this.instance.on('postcompose', changes[key].currentValue);\r\n        }\r\n      }\r\n    }\r\n    // console.log('changes detected in aol-layer, setting new properties: ', properties);\r\n    this.instance.setProperties(properties, false);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, SkipSelf, Optional } from '@angular/core';\r\nimport { Group } from 'ol/layer';\r\nimport { LayerComponent } from './layer.component';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-layer-group',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class LayerGroupComponent extends LayerComponent implements OnInit, OnDestroy {\r\n  public instance: Group;\r\n\r\n  constructor(\r\n    map: MapComponent,\r\n    @SkipSelf()\r\n    @Optional()\r\n    group?: LayerGroupComponent\r\n  ) {\r\n    super(group || map);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log(`creating ol.layer.Group instance with:`, this);\r\n    this.instance = new Group(this);\r\n    super.ngOnInit();\r\n  }\r\n}\r\n","import { Component, Input, OnChanges, OnInit, Optional, SimpleChanges } from '@angular/core';\r\nimport { Image } from 'ol/layer';\r\nimport { MapComponent } from '../map.component';\r\nimport { LayerComponent } from './layer.component';\r\nimport { LayerGroupComponent } from './layergroup.component';\r\nimport { Extent } from 'ol/extent';\r\n\r\n@Component({\r\n  selector: 'aol-layer-image',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class LayerImageComponent extends LayerComponent implements OnInit, OnChanges {\r\n  public source: Image;\r\n\r\n  @Input()\r\n  opacity: number;\r\n  @Input()\r\n  visible: boolean;\r\n  @Input()\r\n  extent: Extent;\r\n  @Input()\r\n  minResolution: number;\r\n  @Input()\r\n  maxResolution: number;\r\n  @Input()\r\n  zIndex: number;\r\n\r\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\r\n    super(group || map);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new Image(this);\r\n    super.ngOnInit();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    super.ngOnChanges(changes);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input, Optional, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { Tile } from 'ol/layer';\r\nimport { MapComponent } from '../map.component';\r\nimport { LayerComponent } from './layer.component';\r\nimport { LayerGroupComponent } from './layergroup.component';\r\n\r\n@Component({\r\n  selector: 'aol-layer-tile',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class LayerTileComponent extends LayerComponent implements OnInit, OnDestroy, OnChanges {\r\n  public source: Tile;\r\n\r\n  @Input()\r\n  preload: number;\r\n  @Input()\r\n  useInterimTilesOnError: boolean;\r\n\r\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\r\n    super(group || map);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.layer.Tile instance with:', this);\r\n    this.instance = new Tile(this);\r\n    super.ngOnInit();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    super.ngOnChanges(changes);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input, Optional, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { MapComponent } from '../map.component';\r\nimport { Vector } from 'ol/layer';\r\nimport { Style } from 'ol/style';\r\nimport { StyleFunction } from 'ol/style/Style';\r\nimport { LayerComponent } from './layer.component';\r\nimport { LayerGroupComponent } from './layergroup.component';\r\n\r\n@Component({\r\n  selector: 'aol-layer-vector',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class LayerVectorComponent extends LayerComponent implements OnInit, OnDestroy, OnChanges {\r\n  public source: Vector;\r\n\r\n  @Input()\r\n  renderBuffer: number;\r\n\r\n  @Input()\r\n  style: Style | Style[] | StyleFunction;\r\n\r\n  @Input()\r\n  updateWhileAnimating: boolean;\r\n\r\n  @Input()\r\n  updateWhileInteracting: boolean;\r\n\r\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\r\n    super(group || map);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.layer.Vector instance with:', this);\r\n    this.instance = new Vector(this);\r\n    super.ngOnInit();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    super.ngOnChanges(changes);\r\n  }\r\n}\r\n","import {Component, OnInit, Input, Optional, SimpleChanges, OnChanges} from '@angular/core';\r\nimport {VectorTile} from 'ol/layer';\r\nimport {RenderType} from 'ol/layer/VectorTile';\r\nimport {Feature} from 'ol';\r\nimport {Style} from 'ol/style';\r\nimport {MapComponent} from '../map.component';\r\nimport {LayerComponent} from './layer.component';\r\nimport {LayerGroupComponent} from './layergroup.component';\r\nimport {StyleFunction} from 'ol/style/Style';\r\n\r\n@Component({\r\n  selector: 'aol-layer-vectortile',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class LayerVectorTileComponent extends LayerComponent implements OnInit, OnChanges {\r\n  @Input()\r\n  renderBuffer: number;\r\n  @Input()\r\n  renderMode: RenderType | string;\r\n  /* not marked as optional in the typings */\r\n  @Input()\r\n  renderOrder: (feature1: Feature, feature2: Feature) => number;\r\n  @Input()\r\n  style: Style | Style[] | StyleFunction;\r\n  @Input()\r\n  updateWhileAnimating: boolean;\r\n  @Input()\r\n  updateWhileInteracting: boolean;\r\n  @Input()\r\n  visible: boolean;\r\n  @Input()\r\n  declutter: boolean;\r\n\r\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\r\n    super(group || map);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.layer.VectorTile instance with:', this);\r\n    this.instance = new VectorTile(this);\r\n    super.ngOnInit();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    super.ngOnChanges(changes);\r\n  }\r\n}\r\n","import { Input, OnDestroy } from '@angular/core';\r\nimport { Source } from 'ol';\r\nimport { LayerComponent } from '../layers/layer.component';\r\nimport { SourceRasterComponent } from './raster.component';\r\n\r\nexport class SourceComponent implements OnDestroy {\r\n  public instance: Source;\r\n  public componentType = 'source';\r\n\r\n  @Input()\r\n  attributions: any;\r\n\r\n  constructor(protected host: LayerComponent, protected raster?: SourceRasterComponent) {}\r\n\r\n  ngOnDestroy() {\r\n    if (this.host && this.host.instance) {\r\n      this.host.instance.setSource(null);\r\n    }\r\n\r\n    if (this.raster) {\r\n      this.raster.sources = [];\r\n    }\r\n  }\r\n\r\n  protected _register(s: Source) {\r\n    if (this.host) {\r\n      this.host.instance.setSource(s);\r\n    }\r\n\r\n    if (this.raster) {\r\n      this.raster.sources = [s];\r\n      this.raster.init();\r\n    }\r\n  }\r\n}\r\n","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { createXYZ } from 'ol/tilegrid';\r\nimport TileGrid from 'ol/tilegrid/TileGrid';\r\nimport { Extent } from 'ol/extent';\r\nimport { Coordinate } from 'ol/coordinate';\r\nimport { Size } from 'ol/size';\r\n\r\n@Component({\r\n  selector: 'aol-tilegrid',\r\n  template: '',\r\n})\r\nexport class TileGridComponent implements OnInit, OnChanges {\r\n  instance: TileGrid;\r\n\r\n  @Input()\r\n  extent: Extent;\r\n  @Input()\r\n  maxZoom: number;\r\n  @Input()\r\n  minZoom: number;\r\n  @Input()\r\n  tileSize: number | Size;\r\n  @Input()\r\n  origin?: Coordinate;\r\n  @Input()\r\n  resolutions: number[];\r\n\r\n  ngOnInit() {\r\n    if (!this.resolutions) {\r\n      this.instance = createXYZ(this);\r\n    } else {\r\n      this.instance = new TileGrid(this);\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (!this.resolutions) {\r\n      this.instance = createXYZ(this);\r\n    } else {\r\n      this.instance = new TileGrid(this);\r\n    }\r\n  }\r\n}\r\n","import { AfterContentInit, Component, EventEmitter, forwardRef, Host, Input, Output } from '@angular/core';\r\nimport { Raster, Source } from 'ol/source';\r\nimport { RasterOperationType, RasterSourceEvent } from 'ol/source/Raster';\r\nimport { LayerImageComponent } from '../layers/layerimage.component';\r\nimport { SourceComponent } from './source.component';\r\nimport { Operation } from 'ol/source/Raster';\r\n\r\n@Component({\r\n  selector: 'aol-source-raster',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [\r\n    {\r\n      provide: SourceComponent,\r\n      useExisting: forwardRef(() => SourceRasterComponent),\r\n    },\r\n  ],\r\n})\r\nexport class SourceRasterComponent extends SourceComponent implements AfterContentInit {\r\n  instance: Raster;\r\n\r\n  @Input()\r\n  operation?: Operation;\r\n  @Input()\r\n  threads?: number;\r\n  @Input()\r\n  lib?: Object;\r\n  @Input()\r\n  operationType?: RasterOperationType;\r\n\r\n  @Output()\r\n  beforeOperations: EventEmitter<RasterSourceEvent> = new EventEmitter<RasterSourceEvent>();\r\n  @Output()\r\n  afterOperations: EventEmitter<RasterSourceEvent> = new EventEmitter<RasterSourceEvent>();\r\n\r\n  sources: Source[] = [];\r\n\r\n  constructor(@Host() layer: LayerImageComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    this.instance = new Raster(this);\r\n    this.instance.on('beforeoperations', (event: RasterSourceEvent) => this.beforeOperations.emit(event));\r\n    this.instance.on('afteroperations', (event: RasterSourceEvent) => this.afterOperations.emit(event));\r\n    this._register(this.instance);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Host,\r\n  Input,\r\n  AfterContentInit,\r\n  forwardRef,\r\n  OnChanges,\r\n  ContentChild,\r\n  SimpleChanges,\r\n  Optional,\r\n  Output,\r\n  EventEmitter,\r\n} from '@angular/core';\r\nimport { XYZ } from 'ol/source';\r\nimport { LayerTileComponent } from '../layers/layertile.component';\r\nimport { SourceComponent } from './source.component';\r\nimport { TileGridComponent } from '../tilegrid.component';\r\nimport { SourceRasterComponent } from './raster.component';\r\nimport { Size } from 'ol/size';\r\nimport { TileSourceEvent } from 'ol/source/Tile';\r\nimport TileGrid from 'ol/tilegrid/TileGrid';\r\nimport { LoadFunction, UrlFunction } from 'ol/Tile';\r\n\r\n@Component({\r\n  selector: 'aol-source-xyz',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceXYZComponent) }],\r\n})\r\nexport class SourceXYZComponent extends SourceComponent implements AfterContentInit, OnChanges {\r\n  instance: XYZ;\r\n  @Input()\r\n  cacheSize: number;\r\n  @Input()\r\n  crossOrigin: string;\r\n  @Input()\r\n  opaque: boolean;\r\n  @Input()\r\n  projection: string;\r\n  @Input()\r\n  reprojectionErrorThreshold: number;\r\n  @Input()\r\n  minZoom: number;\r\n  @Input()\r\n  maxZoom: number;\r\n  @Input()\r\n  tileGrid: TileGrid;\r\n  @Input()\r\n  tileLoadFunction?: LoadFunction;\r\n  @Input()\r\n  tilePixelRatio: number;\r\n  @Input()\r\n  tileSize: number | Size;\r\n  @Input()\r\n  tileUrlFunction?: UrlFunction;\r\n  @Input()\r\n  url: string;\r\n  @Input()\r\n  urls: string[];\r\n  @Input()\r\n  wrapX: boolean;\r\n\r\n  @ContentChild(TileGridComponent)\r\n  tileGridXYZ: TileGridComponent;\r\n\r\n  @Output()\r\n  tileLoadStart: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\r\n  @Output()\r\n  tileLoadEnd: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\r\n  @Output()\r\n  tileLoadError: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\r\n\r\n  constructor(\r\n    @Optional()\r\n    @Host()\r\n    layer: LayerTileComponent,\r\n    @Optional()\r\n    @Host()\r\n    raster?: SourceRasterComponent\r\n  ) {\r\n    super(layer, raster);\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    if (this.tileGridXYZ) {\r\n      this.tileGrid = this.tileGridXYZ.instance;\r\n    }\r\n    this.init();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const properties: { [index: string]: any } = {};\r\n\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    for (const key in changes) {\r\n      if (changes.hasOwnProperty(key)) {\r\n        properties[key] = changes[key].currentValue;\r\n      }\r\n    }\r\n\r\n    this.instance.setProperties(properties, false);\r\n    if (changes.hasOwnProperty('url')) {\r\n      this.init();\r\n    }\r\n  }\r\n\r\n  init() {\r\n    this.instance = new XYZ(this);\r\n\r\n    this.instance.on('tileloadstart', (event: TileSourceEvent) => this.tileLoadStart.emit(event));\r\n    this.instance.on('tileloadend', (event: TileSourceEvent) => this.tileLoadEnd.emit(event));\r\n    this.instance.on('tileloaderror', (event: TileSourceEvent) => this.tileLoadError.emit(event));\r\n\r\n    this._register(this.instance);\r\n  }\r\n}\r\n","import { Component, Host, forwardRef, Input, AfterContentInit, Optional, Output, EventEmitter } from '@angular/core';\r\nimport { OSM } from 'ol/source';\r\nimport { LayerTileComponent } from '../layers/layertile.component';\r\nimport { SourceComponent } from './source.component';\r\nimport { SourceXYZComponent } from './xyz.component';\r\nimport { SourceRasterComponent } from './raster.component';\r\nimport { LoadFunction } from 'ol/Tile';\r\nimport { AttributionLike } from 'ol/source/Source';\r\nimport { TileSourceEvent } from 'ol/source/Tile';\r\n\r\n@Component({\r\n  selector: 'aol-source-osm',\r\n  template: `\r\n    <div class=\"aol-source-osm\"></div>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceOsmComponent) }],\r\n})\r\nexport class SourceOsmComponent extends SourceXYZComponent implements AfterContentInit {\r\n  instance: OSM;\r\n\r\n  @Input()\r\n  attributions: AttributionLike;\r\n  @Input()\r\n  cacheSize: number;\r\n  @Input()\r\n  crossOrigin: string;\r\n  @Input()\r\n  maxZoom: number;\r\n  @Input()\r\n  opaque: boolean;\r\n  @Input()\r\n  reprojectionErrorThreshold: number;\r\n  @Input()\r\n  tileLoadFunction: LoadFunction;\r\n  @Input()\r\n  url: string;\r\n  @Input()\r\n  wrapX: boolean;\r\n\r\n  @Output()\r\n  tileLoadStart: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\r\n  @Output()\r\n  tileLoadEnd: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\r\n  @Output()\r\n  tileLoadError: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\r\n\r\n  constructor(\r\n    @Host()\r\n    @Optional()\r\n    layer: LayerTileComponent,\r\n    @Host()\r\n    @Optional()\r\n    raster?: SourceRasterComponent\r\n  ) {\r\n    super(layer, raster);\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    if (this.tileGridXYZ) {\r\n      this.tileGrid = this.tileGridXYZ.instance;\r\n    }\r\n\r\n    this.instance = new OSM(this);\r\n\r\n    this.instance.on('tileloadstart', (event: TileSourceEvent) => this.tileLoadStart.emit(event));\r\n    this.instance.on('tileloadend', (event: TileSourceEvent) => this.tileLoadEnd.emit(event));\r\n    this.instance.on('tileloaderror', (event: TileSourceEvent) => this.tileLoadError.emit(event));\r\n    this._register(this.instance);\r\n  }\r\n}\r\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\r\nimport { BingMaps } from 'ol/source';\r\nimport { SourceComponent } from './source.component';\r\nimport { LayerTileComponent } from '../layers/layertile.component';\r\nimport { LoadFunction } from 'ol/Tile';\r\n\r\n@Component({\r\n  selector: 'aol-source-bingmaps',\r\n  template: `\r\n    <div class=\"aol-source-bingmaps\"></div>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceBingmapsComponent) }],\r\n})\r\nexport class SourceBingmapsComponent extends SourceComponent implements OnInit {\r\n  instance: BingMaps;\r\n\r\n  @Input()\r\n  cacheSize: number;\r\n  @Input()\r\n  hidpi: boolean;\r\n  @Input()\r\n  culture: string;\r\n  @Input()\r\n  key: string;\r\n  @Input()\r\n  imagerySet: 'Road' | 'Aerial' | 'AerialWithLabels' | 'collinsBart' | 'ordnanceSurvey' = 'Aerial';\r\n  @Input()\r\n  maxZoom: number;\r\n  @Input()\r\n  reprojectionErrorThreshold: number;\r\n  @Input()\r\n  tileLoadFunction: LoadFunction;\r\n  @Input()\r\n  wrapX: boolean;\r\n\r\n  constructor(@Host() layer: LayerTileComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new BingMaps(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n}\r\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\r\nimport { Vector } from 'ol/source';\r\nimport Feature from 'ol/format/Feature';\r\nimport { LayerVectorComponent } from '../layers/layervector.component';\r\nimport { SourceComponent } from './source.component';\r\nimport { LoadingStrategy } from 'ol/source/Vector';\r\n\r\n@Component({\r\n  selector: 'aol-source-vector',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceVectorComponent) }],\r\n})\r\nexport class SourceVectorComponent extends SourceComponent implements OnInit {\r\n  instance: Vector;\r\n  @Input()\r\n  overlaps: boolean;\r\n  @Input()\r\n  useSpatialIndex: boolean;\r\n  @Input()\r\n  wrapX: boolean;\r\n  @Input()\r\n  url: string;\r\n  @Input()\r\n  format: Feature;\r\n  @Input()\r\n  strategy: LoadingStrategy;\r\n\r\n  constructor(@Host() layer: LayerVectorComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new Vector(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n}\r\n","import { Component, Host, Input, forwardRef, ContentChild, AfterContentInit } from '@angular/core';\r\nimport { Feature } from 'ol';\r\nimport { LayerVectorComponent } from '../layers/layervector.component';\r\nimport { SourceComponent } from './source.component';\r\nimport { SourceVectorComponent } from './vector.component';\r\nimport { Cluster, Vector } from 'ol/source';\r\nimport { Point } from 'ol/geom';\r\n\r\n@Component({\r\n  selector: 'aol-source-cluster',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceClusterComponent) }],\r\n})\r\nexport class SourceClusterComponent extends SourceComponent implements AfterContentInit {\r\n  instance: Cluster;\r\n\r\n  @Input()\r\n  distance: number;\r\n  @Input()\r\n  geometryFunction?: (feature: Feature) => Point;\r\n  @Input()\r\n  wrapX?: boolean;\r\n\r\n  @ContentChild(SourceVectorComponent)\r\n  sourceVectorComponent: SourceVectorComponent;\r\n  source: Vector;\r\n\r\n  constructor(@Host() layer: LayerVectorComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this.source = this.sourceVectorComponent.instance;\r\n\r\n    this.instance = new Cluster(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport WMTS from 'ol/tilegrid/WMTS';\r\nimport { TileGridComponent } from './tilegrid.component';\r\nimport { Coordinate } from 'ol/coordinate';\r\nimport { Size } from 'ol/size';\r\n\r\n@Component({\r\n  selector: 'aol-tilegrid-wmts',\r\n  template: '',\r\n})\r\nexport class TileGridWMTSComponent extends TileGridComponent implements OnInit {\r\n  instance: WMTS;\r\n\r\n  @Input()\r\n  origin?: Coordinate;\r\n  @Input()\r\n  origins?: Coordinate[];\r\n  @Input()\r\n  resolutions: number[];\r\n  @Input()\r\n  matrixIds: string[];\r\n  @Input()\r\n  sizes?: Size[];\r\n  @Input()\r\n  tileSizes?: (number | Size)[];\r\n  @Input()\r\n  widths?: number[];\r\n\r\n  ngOnInit() {\r\n    this.instance = new WMTS(this);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Host,\r\n  Input,\r\n  forwardRef,\r\n  AfterContentInit,\r\n  ContentChild,\r\n  SimpleChanges,\r\n  OnChanges,\r\n} from '@angular/core';\r\nimport { LayerTileComponent } from '../layers/layertile.component';\r\nimport { SourceComponent } from './source.component';\r\nimport { TileGridWMTSComponent } from '../tilegridwmts.component';\r\nimport { WMTS } from 'ol/source';\r\nimport { WMTS as TileGridWMTS } from 'ol/tilegrid';\r\nimport { WMTSRequestEncoding } from 'ol/source';\r\nimport { ProjectionLike } from 'ol/proj';\r\nimport { LoadFunction } from 'ol/Tile';\r\n\r\n@Component({\r\n  selector: 'aol-source-tilewmts',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceTileWMTSComponent) }],\r\n})\r\nexport class SourceTileWMTSComponent extends SourceComponent implements AfterContentInit, OnChanges {\r\n  instance: WMTS;\r\n  @Input()\r\n  cacheSize?: number;\r\n  @Input()\r\n  crossOrigin?: string;\r\n  @Input()\r\n  tileGrid: TileGridWMTS;\r\n  @Input()\r\n  projection: ProjectionLike;\r\n  @Input()\r\n  reprojectionErrorThreshold?: number;\r\n  @Input()\r\n  requestEncoding?: WMTSRequestEncoding | string;\r\n  @Input()\r\n  layer: string;\r\n  @Input()\r\n  style: string;\r\n  @Input()\r\n  tileClass?: any;\r\n  @Input()\r\n  tilePixelRatio?: number;\r\n  @Input()\r\n  version?: string;\r\n  @Input()\r\n  format?: string;\r\n  @Input()\r\n  matrixSet: string;\r\n  @Input()\r\n  dimensions?: Object;\r\n  @Input()\r\n  url?: string;\r\n  @Input()\r\n  tileLoadFunction?: LoadFunction;\r\n  @Input()\r\n  urls?: string[];\r\n  @Input()\r\n  wrapX?: boolean;\r\n\r\n  @ContentChild(TileGridWMTSComponent)\r\n  tileGridWMTS: TileGridWMTSComponent;\r\n\r\n  constructor(@Host() layer: LayerTileComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const properties: { [index: string]: any } = {};\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    for (const key in changes) {\r\n      if (changes.hasOwnProperty(key)) {\r\n        switch (key) {\r\n          case 'url':\r\n            this.url = changes[key].currentValue;\r\n            this.setLayerSource();\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        properties[key] = changes[key].currentValue;\r\n      }\r\n    }\r\n    this.instance.setProperties(properties, false);\r\n  }\r\n\r\n  setLayerSource(): void {\r\n    this.instance = new WMTS(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    if (this.tileGridWMTS) {\r\n      this.tileGrid = this.tileGridWMTS.instance;\r\n      this.setLayerSource();\r\n    }\r\n  }\r\n}\r\n","import Feature from 'ol/format/Feature';\r\n\r\nexport class FormatComponent {\r\n  public instance: Feature;\r\n  public componentType = 'format';\r\n}\r\n","import {Component, Host, Input, forwardRef, ContentChild, AfterContentInit} from '@angular/core';\r\nimport VectorTile from 'ol/source/VectorTile';\r\nimport Feature from 'ol/format/Feature';\r\nimport TileGrid from 'ol/tilegrid/TileGrid';\r\nimport {LayerVectorTileComponent} from '../layers/layervectortile.component';\r\nimport {FormatComponent} from '../formats/format.component';\r\nimport {TileGridComponent} from '../tilegrid.component';\r\nimport {SourceComponent} from './source.component';\r\nimport {ProjectionLike} from 'ol/proj';\r\nimport {UrlFunction} from 'ol/Tile';\r\n\r\n@Component({\r\n  selector: 'aol-source-vectortile',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{provide: SourceComponent, useExisting: forwardRef(() => SourceVectorTileComponent)}],\r\n})\r\nexport class SourceVectorTileComponent extends SourceComponent implements AfterContentInit {\r\n  public instance: VectorTile;\r\n  @Input()\r\n  cacheSize: number;\r\n  @Input()\r\n  overlaps: boolean;\r\n  @Input()\r\n  projection: ProjectionLike;\r\n  @Input()\r\n  tilePixelRatio: number;\r\n  @Input()\r\n  tileUrlFunction: UrlFunction;\r\n  @Input()\r\n  url: string;\r\n  @Input()\r\n  urls: string[];\r\n  @Input()\r\n  wrapX: boolean;\r\n\r\n  @ContentChild(FormatComponent)\r\n  formatComponent: FormatComponent;\r\n  format: Feature;\r\n  @ContentChild(TileGridComponent)\r\n  tileGridComponent: TileGridComponent;\r\n  tileGrid: TileGrid;\r\n\r\n  constructor(@Host() layer: LayerVectorTileComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  /* need the children to construct the OL3 object */\r\n  ngAfterContentInit() {\r\n    if (this.formatComponent !== null && this.formatComponent !== undefined) {\r\n      this.format = this.formatComponent.instance;\r\n    }\r\n    if (this.tileGridComponent !== null && this.tileGridComponent !== undefined) {\r\n      this.tileGrid = this.tileGridComponent.instance;\r\n    }\r\n    // console.log('creating ol.source.VectorTile instance with:', this);\r\n    this.instance = new VectorTile(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n}\r\n","import { Component, Host, Input, OnChanges, OnInit, forwardRef, SimpleChanges } from '@angular/core';\r\nimport { LayerTileComponent } from '../layers/layertile.component';\r\nimport { SourceComponent } from './source.component';\r\nimport { TileWMS } from 'ol/source';\r\nimport { TileGrid } from 'ol/tilegrid';\r\nimport { LoadFunction } from 'ol/Tile';\r\n\r\n@Component({\r\n  selector: 'aol-source-tilewms',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceTileWMSComponent) }],\r\n})\r\nexport class SourceTileWMSComponent extends SourceComponent implements OnChanges, OnInit {\r\n  instance: TileWMS;\r\n  @Input()\r\n  cacheSize: number;\r\n  @Input()\r\n  crossOrigin: string;\r\n  @Input()\r\n  gutter: number;\r\n  @Input()\r\n  hidpi: boolean;\r\n  @Input()\r\n  params: Object;\r\n  @Input()\r\n  projection: string;\r\n  @Input()\r\n  reprojectionErrorThreshold: number;\r\n  @Input()\r\n  serverType: string;\r\n  @Input()\r\n  tileGrid: TileGrid;\r\n  @Input()\r\n  tileLoadFunction: LoadFunction;\r\n  @Input()\r\n  url: string;\r\n  @Input()\r\n  urls: string[];\r\n  @Input()\r\n  wrapX: boolean;\r\n\r\n  constructor(@Host() layer: LayerTileComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new TileWMS(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (this.instance && changes.hasOwnProperty('params')) {\r\n      this.instance.updateParams(this.params);\r\n    }\r\n  }\r\n}\r\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\r\nimport { TileJSON } from 'ol/source';\r\nimport { LayerTileComponent } from '../layers/layertile.component';\r\nimport { SourceComponent } from './source.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-tilejson',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceTileJSONComponent) }],\r\n})\r\nexport class SourceTileJSONComponent extends SourceComponent implements OnInit {\r\n  instance: TileJSON;\r\n\r\n  @Input()\r\n  url: string;\r\n\r\n  constructor(@Host() layer: LayerTileComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new TileJSON(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n}\r\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\r\nimport { LayerVectorComponent } from '../layers/layervector.component';\r\nimport { SourceComponent } from './source.component';\r\nimport { Feature } from 'ol';\r\nimport { Vector } from 'ol/source';\r\nimport { GeoJSON } from 'ol/format';\r\nimport { ProjectionLike } from 'ol/proj';\r\n\r\n@Component({\r\n  selector: 'aol-source-geojson',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceGeoJSONComponent) }],\r\n})\r\nexport class SourceGeoJSONComponent extends SourceComponent implements OnInit {\r\n  instance: Vector;\r\n  format: Feature;\r\n  @Input()\r\n  defaultDataProjection: ProjectionLike;\r\n  @Input()\r\n  featureProjection: ProjectionLike;\r\n  @Input()\r\n  geometryName: string;\r\n  @Input()\r\n  url: string;\r\n\r\n  constructor(@Host() layer: LayerVectorComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.format = new GeoJSON(this);\r\n    this.instance = new Vector(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n}\r\n","import { Component, Host, Input, OnInit, forwardRef, Output, EventEmitter } from '@angular/core';\r\nimport { ImageStatic } from 'ol/source';\r\nimport { SourceComponent } from './source.component';\r\nimport { LayerImageComponent } from '../layers/layerimage.component';\r\nimport { ProjectionLike } from 'ol/proj';\r\nimport { Extent } from 'ol/extent';\r\nimport { AttributionLike } from 'ol/source/Source';\r\nimport { LoadFunction } from 'ol/Image';\r\nimport { Size } from 'ol/size';\r\nimport { ImageSourceEvent } from 'ol/source/Image';\r\n\r\n@Component({\r\n  selector: 'aol-source-imagestatic',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceImageStaticComponent) }],\r\n})\r\nexport class SourceImageStaticComponent extends SourceComponent implements OnInit {\r\n  instance: ImageStatic;\r\n\r\n  @Input()\r\n  projection: ProjectionLike | string;\r\n  @Input()\r\n  imageExtent: Extent;\r\n  @Input()\r\n  url: string;\r\n  @Input()\r\n  attributions: AttributionLike;\r\n  @Input()\r\n  crossOrigin?: string;\r\n  @Input()\r\n  imageLoadFunction?: LoadFunction;\r\n  @Input()\r\n  imageSize?: Size;\r\n\r\n  @Output()\r\n  onImageLoadStart = new EventEmitter<ImageSourceEvent>();\r\n  @Output()\r\n  onImageLoadEnd = new EventEmitter<ImageSourceEvent>();\r\n  @Output()\r\n  onImageLoadError = new EventEmitter<ImageSourceEvent>();\r\n\r\n  constructor(@Host() layer: LayerImageComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new ImageStatic(this);\r\n    this.host.instance.setSource(this.instance);\r\n    this.instance.on('imageloadstart', (event: ImageSourceEvent) => this.onImageLoadStart.emit(event));\r\n    this.instance.on('imageloadend', (event: ImageSourceEvent) => this.onImageLoadEnd.emit(event));\r\n    this.instance.on('imageloaderror', (event: ImageSourceEvent) => this.onImageLoadError.emit(event));\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Host,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  forwardRef,\r\n  SimpleChanges,\r\n  Output,\r\n  EventEmitter,\r\n} from '@angular/core';\r\nimport { ImageWMS } from 'ol/source';\r\nimport { LayerImageComponent } from '../layers/layerimage.component';\r\nimport { SourceComponent } from './source.component';\r\nimport { ProjectionLike } from 'ol/proj';\r\nimport { AttributionLike } from 'ol/source/Source';\r\nimport { LoadFunction } from 'ol/Image';\r\nimport { ImageSourceEvent } from 'ol/source/Image';\r\n\r\n@Component({\r\n  selector: 'aol-source-imagewms',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceImageWMSComponent) }],\r\n})\r\nexport class SourceImageWMSComponent extends SourceComponent implements OnChanges, OnInit {\r\n  instance: ImageWMS;\r\n\r\n  @Input()\r\n  attributions: AttributionLike;\r\n  @Input()\r\n  crossOrigin: string;\r\n  @Input()\r\n  hidpi: boolean;\r\n  @Input()\r\n  serverType: string;\r\n  @Input()\r\n  imageLoadFunction?: LoadFunction;\r\n  @Input()\r\n  params: Object;\r\n  @Input()\r\n  projection: ProjectionLike | string;\r\n  @Input()\r\n  ratio: number;\r\n  @Input()\r\n  resolutions: Array<number>;\r\n  @Input()\r\n  url: string;\r\n\r\n  @Output()\r\n  onImageLoadStart = new EventEmitter<ImageSourceEvent>();\r\n  @Output()\r\n  onImageLoadEnd = new EventEmitter<ImageSourceEvent>();\r\n  @Output()\r\n  onImageLoadError = new EventEmitter<ImageSourceEvent>();\r\n\r\n  constructor(@Host() layer: LayerImageComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new ImageWMS(this);\r\n    this.host.instance.setSource(this.instance);\r\n    this.instance.on('imageloadstart', (event: ImageSourceEvent) => this.onImageLoadStart.emit(event));\r\n    this.instance.on('imageloadend', (event: ImageSourceEvent) => this.onImageLoadEnd.emit(event));\r\n    this.instance.on('imageloaderror', (event: ImageSourceEvent) => this.onImageLoadError.emit(event));\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (this.instance && changes.hasOwnProperty('params')) {\r\n      this.instance.updateParams(this.params);\r\n    }\r\n  }\r\n}\r\n","import { Component, forwardRef, Host, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { ImageArcGISRest } from 'ol/source';\r\nimport { LayerImageComponent } from '../layers/layerimage.component';\r\nimport { SourceComponent } from './source.component';\r\nimport { ProjectionLike } from 'ol/proj';\r\nimport { AttributionLike } from 'ol/source/Source';\r\nimport { LoadFunction } from 'ol/Image';\r\n\r\n@Component({\r\n  selector: 'aol-source-imagearcgisrest',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceImageArcGISRestComponent) }],\r\n})\r\nexport class SourceImageArcGISRestComponent extends SourceComponent implements OnInit, OnChanges {\r\n  instance: ImageArcGISRest;\r\n\r\n  @Input() projection: ProjectionLike | string;\r\n  @Input() url: string;\r\n  @Input() attributions: AttributionLike[];\r\n  @Input() crossOrigin?: string;\r\n  @Input() imageLoadFunction?: LoadFunction;\r\n  @Input() params?: { [k: string]: any };\r\n  @Input() ratio = 1.5;\r\n  @Input() resolutions?: number[];\r\n  @Input() wrapX?: boolean;\r\n\r\n  constructor(@Host() layer: LayerImageComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new ImageArcGISRest(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (this.instance && changes.hasOwnProperty('params')) {\r\n      this.instance.updateParams(this.params);\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy, OnChanges, Input, SimpleChanges } from '@angular/core';\r\nimport { Feature } from 'ol';\r\nimport { SourceVectorComponent } from './sources/vector.component';\r\n\r\n@Component({\r\n  selector: 'aol-feature',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class FeatureComponent implements OnInit, OnDestroy, OnChanges {\r\n  public componentType = 'feature';\r\n  public instance: Feature;\r\n\r\n  @Input()\r\n  id: string | number | undefined;\r\n\r\n  constructor(private host: SourceVectorComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new Feature();\r\n    if (this.id !== undefined) {\r\n      this.instance.setId(this.id);\r\n    }\r\n    this.host.instance.addFeature(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.host.instance.removeFeature(this.instance);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (this.instance) {\r\n      this.instance.setId(this.id);\r\n    }\r\n  }\r\n}\r\n","import { Input, OnInit } from '@angular/core';\r\nimport { FeatureComponent } from '../feature.component';\r\nimport { MapComponent } from '../map.component';\r\nimport SimpleGeometry from 'ol/geom/SimpleGeometry';\r\n\r\nexport abstract class SimpleGeometryComponent implements OnInit {\r\n  public instance: SimpleGeometry;\r\n  public componentType = 'simple-geometry';\r\n\r\n  @Input() srid: string;\r\n\r\n  constructor(protected map: MapComponent, protected host: FeatureComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.host.instance.setGeometry(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FeatureComponent } from '../feature.component';\r\nimport { Circle } from 'ol/geom';\r\nimport { SimpleGeometryComponent } from './simplegeometry.component';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-geometry-circle',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class GeometryCircleComponent extends SimpleGeometryComponent implements OnInit {\r\n  public componentType = 'geometry-circle';\r\n  public instance: Circle;\r\n\r\n  @Input()\r\n  get radius(): number {\r\n    return this.instance.getRadius();\r\n  }\r\n  set radius(radius: number) {\r\n    this.instance.setRadius(radius);\r\n  }\r\n\r\n  constructor(map: MapComponent, host: FeatureComponent) {\r\n    super(map, host);\r\n    // defaulting coordinates to [0,0]. To be overridden in child component.\r\n    this.instance = new Circle([0, 0]);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FeatureComponent } from '../feature.component';\r\nimport { SimpleGeometryComponent } from './simplegeometry.component';\r\nimport { MapComponent } from '../map.component';\r\nimport { LineString } from 'ol/geom';\r\n\r\n@Component({\r\n  selector: 'aol-geometry-linestring',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class GeometryLinestringComponent extends SimpleGeometryComponent implements OnInit {\r\n  public componentType = 'geometry-linestring';\r\n  public instance: LineString;\r\n\r\n  constructor(map: MapComponent, host: FeatureComponent) {\r\n    super(map, host);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new LineString([[0, 0], [1, 1]]);\r\n    super.ngOnInit();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FeatureComponent } from '../feature.component';\r\nimport { SimpleGeometryComponent } from './simplegeometry.component';\r\nimport { MapComponent } from '../map.component';\r\nimport { MultiLineString } from 'ol/geom';\r\n\r\n@Component({\r\n  selector: 'aol-geometry-multilinestring',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class GeometryMultiLinestringComponent extends SimpleGeometryComponent implements OnInit {\r\n  public componentType = 'geometry-multilinestring';\r\n  public instance: MultiLineString;\r\n\r\n  constructor(map: MapComponent, host: FeatureComponent) {\r\n    super(map, host);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new MultiLineString([[[0, 0], [1, 1]]]);\r\n    super.ngOnInit();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FeatureComponent } from '../feature.component';\r\nimport { SimpleGeometryComponent } from './simplegeometry.component';\r\nimport { MapComponent } from '../map.component';\r\nimport { MultiPoint } from 'ol/geom';\r\n\r\n@Component({\r\n  selector: 'aol-geometry-multipoint',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class GeometryMultiPointComponent extends SimpleGeometryComponent implements OnInit {\r\n  public componentType = 'geometry-multipoint';\r\n  public instance: MultiPoint;\r\n\r\n  constructor(map: MapComponent, host: FeatureComponent) {\r\n    super(map, host);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new MultiPoint([[0, 0], [1, 1]]);\r\n    super.ngOnInit();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FeatureComponent } from '../feature.component';\r\nimport { SimpleGeometryComponent } from './simplegeometry.component';\r\nimport { MapComponent } from '../map.component';\r\nimport { MultiPolygon } from 'ol/geom';\r\n\r\n@Component({\r\n  selector: 'aol-geometry-multipolygon',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class GeometryMultiPolygonComponent extends SimpleGeometryComponent implements OnInit {\r\n  public componentType = 'geometry-multipolygon';\r\n  public instance: MultiPolygon;\r\n\r\n  constructor(map: MapComponent, host: FeatureComponent) {\r\n    super(map, host);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new MultiPolygon([[[[0, 0], [1, 1], [0, 1]]]]);\r\n    super.ngOnInit();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FeatureComponent } from '../feature.component';\r\nimport { SimpleGeometryComponent } from './simplegeometry.component';\r\nimport { MapComponent } from '../map.component';\r\nimport { Point } from 'ol/geom';\r\n\r\n@Component({\r\n  selector: 'aol-geometry-point',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class GeometryPointComponent extends SimpleGeometryComponent implements OnInit {\r\n  public componentType = 'geometry-point';\r\n  public instance: Point;\r\n\r\n  constructor(map: MapComponent, host: FeatureComponent) {\r\n    super(map, host);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new Point([0, 0]);\r\n    super.ngOnInit();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FeatureComponent } from '../feature.component';\r\nimport { SimpleGeometryComponent } from './simplegeometry.component';\r\nimport { MapComponent } from '../map.component';\r\nimport { Polygon } from 'ol/geom';\r\n\r\n@Component({\r\n  selector: 'aol-geometry-polygon',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class GeometryPolygonComponent extends SimpleGeometryComponent implements OnInit {\r\n  public componentType = 'geometry-polygon';\r\n  public instance: Polygon;\r\n\r\n  constructor(map: MapComponent, host: FeatureComponent) {\r\n    super(map, host);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new Polygon([[[0, 0], [1, 1], [0, 1]]]);\r\n    super.ngOnInit();\r\n  }\r\n}\r\n","import { Component, ElementRef } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'aol-content',\r\n  template: '<ng-content></ng-content>',\r\n})\r\nexport class ContentComponent {\r\n  constructor(public elementRef: ElementRef) {}\r\n}\r\n","import { Component, ContentChild, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { MapComponent } from './map.component';\r\nimport { Overlay, PanOptions } from 'ol';\r\nimport { ContentComponent } from './content.component';\r\nimport OverlayPositioning from 'ol/OverlayPositioning';\r\n\r\n@Component({\r\n  selector: 'aol-overlay',\r\n  template: '<ng-content></ng-content>',\r\n})\r\nexport class OverlayComponent implements OnInit, OnDestroy {\r\n  componentType = 'overlay';\r\n  instance: Overlay;\r\n  element: Element;\r\n  @ContentChild(ContentComponent)\r\n  content: ContentComponent;\r\n\r\n  @Input()\r\n  id: number | string;\r\n  @Input()\r\n  offset: number[];\r\n  @Input()\r\n  positioning: OverlayPositioning | string;\r\n  @Input()\r\n  stopEvent: boolean;\r\n  @Input()\r\n  insertFirst: boolean;\r\n  @Input()\r\n  autoPan: boolean;\r\n  @Input()\r\n  autoPanAnimation: PanOptions;\r\n  @Input()\r\n  autoPanMargin: number;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    if (this.content) {\r\n      this.element = this.content.elementRef.nativeElement;\r\n      this.instance = new Overlay(this);\r\n      this.map.instance.addOverlay(this.instance);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.instance) {\r\n      this.map.instance.removeOverlay(this.instance);\r\n    }\r\n  }\r\n}\r\n","import { Component, Optional, OnChanges, Input, SimpleChanges, OnInit } from '@angular/core';\r\nimport { transform } from 'ol/proj';\r\nimport { MapComponent } from './map.component';\r\nimport { GeometryPointComponent } from './geom/geometrypoint.component';\r\nimport { GeometryCircleComponent } from './geom/geometrycircle.component';\r\nimport { ViewComponent } from './view.component';\r\nimport { OverlayComponent } from './overlay.component';\r\n\r\n@Component({\r\n  selector: 'aol-coordinate',\r\n  template: `\r\n    <div class=\"aol-coordinate\"></div>\r\n  `,\r\n})\r\nexport class CoordinateComponent implements OnChanges, OnInit {\r\n  private host: any;\r\n  private mapSrid = 'EPSG:3857';\r\n\r\n  @Input()\r\n  x: number;\r\n  @Input()\r\n  y: number;\r\n  @Input()\r\n  srid = 'EPSG:3857';\r\n\r\n  constructor(\r\n    private map: MapComponent,\r\n    @Optional() viewHost: ViewComponent,\r\n    @Optional() geometryPointHost: GeometryPointComponent,\r\n    @Optional() geometryCircleHost: GeometryCircleComponent,\r\n    @Optional() overlayHost: OverlayComponent\r\n  ) {\r\n    // console.log('instancing aol-coordinate');\r\n    if (geometryPointHost !== null) {\r\n      this.host = geometryPointHost;\r\n    } else if (geometryCircleHost !== null) {\r\n      this.host = geometryCircleHost;\r\n    } else if (viewHost !== null) {\r\n      this.host = viewHost;\r\n    } else if (overlayHost !== null) {\r\n      this.host = overlayHost;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.map.instance.on('change:view', e => this.onMapViewChanged(e));\r\n    this.mapSrid = this.map.instance\r\n      .getView()\r\n      .getProjection()\r\n      .getCode();\r\n    this.transformCoordinates();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    this.transformCoordinates();\r\n  }\r\n\r\n  private onMapViewChanged(event) {\r\n    this.mapSrid = event.target\r\n      .get(event.key)\r\n      .getProjection()\r\n      .getCode();\r\n    this.transformCoordinates();\r\n  }\r\n\r\n  private transformCoordinates() {\r\n    let transformedCoordinates: number[];\r\n\r\n    if (this.srid === this.mapSrid) {\r\n      transformedCoordinates = [this.x, this.y];\r\n    } else {\r\n      transformedCoordinates = transform([this.x, this.y], this.srid, this.mapSrid);\r\n    }\r\n\r\n    switch (this.host.componentType) {\r\n      case 'geometry-point':\r\n        this.host.instance.setCoordinates(transformedCoordinates);\r\n        break;\r\n      case 'geometry-circle':\r\n      case 'view':\r\n        this.host.instance.setCenter(transformedCoordinates);\r\n        break;\r\n      case 'overlay':\r\n        this.host.instance.setPosition(transformedCoordinates);\r\n        break;\r\n    }\r\n  }\r\n}\r\n","import { Component, Input, OnChanges, OnInit, Optional, SimpleChanges } from '@angular/core';\r\nimport { MapComponent } from './map.component';\r\nimport { GeometryLinestringComponent } from './geom/geometrylinestring.component';\r\nimport { GeometryPolygonComponent } from './geom/geometrypolygon.component';\r\nimport { GeometryMultiPointComponent } from './geom/geometrymultipoint.component';\r\nimport { GeometryMultiLinestringComponent } from './geom/geometrymultilinestring.component';\r\nimport { GeometryMultiPolygonComponent } from './geom/geometrymultipolygon.component';\r\nimport { Coordinate } from 'ol/coordinate';\r\nimport { transform } from 'ol/proj';\r\n\r\n@Component({\r\n  selector: 'aol-collection-coordinates',\r\n  template: `\r\n    <div class=\"aol-collection-coordinates\"></div>\r\n  `,\r\n})\r\nexport class CollectionCoordinatesComponent implements OnChanges, OnInit {\r\n  private host: any;\r\n  private mapSrid = 'EPSG:3857';\r\n\r\n  @Input()\r\n  coordinates: Coordinate[] | Coordinate[][] | Coordinate[][][];\r\n  @Input()\r\n  srid = 'EPSG:3857';\r\n\r\n  constructor(\r\n    private map: MapComponent,\r\n    @Optional() geometryLinestring: GeometryLinestringComponent,\r\n    @Optional() geometryPolygon: GeometryPolygonComponent,\r\n    @Optional() geometryMultipoint: GeometryMultiPointComponent,\r\n    @Optional() geometryMultilinestring: GeometryMultiLinestringComponent,\r\n    @Optional() geometryMultipolygon: GeometryMultiPolygonComponent\r\n  ) {\r\n    if (!!geometryLinestring) {\r\n      this.host = geometryLinestring;\r\n    } else if (!!geometryPolygon) {\r\n      this.host = geometryPolygon;\r\n    } else if (!!geometryMultipoint) {\r\n      this.host = geometryMultipoint;\r\n    } else if (!!geometryMultilinestring) {\r\n      this.host = geometryMultilinestring;\r\n    } else if (!!geometryMultipolygon) {\r\n      this.host = geometryMultipolygon;\r\n    } else {\r\n      throw new Error('aol-collection-coordinates must be a child of a geometry component');\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.map.instance.on('change:view', e => this.onMapViewChanged(e));\r\n    this.mapSrid = this.map.instance\r\n      .getView()\r\n      .getProjection()\r\n      .getCode();\r\n    this.transformCoordinates();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    this.transformCoordinates();\r\n  }\r\n\r\n  private onMapViewChanged(event) {\r\n    this.mapSrid = event.target\r\n      .get(event.key)\r\n      .getProjection()\r\n      .getCode();\r\n    this.transformCoordinates();\r\n  }\r\n\r\n  private transformCoordinates() {\r\n    let transformedCoordinates: Coordinate[] | Coordinate[][] | Coordinate[][][];\r\n\r\n    if (this.srid === this.mapSrid) {\r\n      transformedCoordinates = this.coordinates;\r\n    } else {\r\n      switch (this.host.componentType) {\r\n        case 'geometry-linestring':\r\n        case 'geometry-multipoint':\r\n          transformedCoordinates = (<Coordinate[]>this.coordinates).map(c => transform(c, this.srid, this.mapSrid));\r\n          break;\r\n        case 'geometry-polygon':\r\n        case 'geometry-multilinestring':\r\n          transformedCoordinates = (<Coordinate[][]>this.coordinates).map(cc =>\r\n            cc.map(c => transform(c, this.srid, this.mapSrid))\r\n          );\r\n          break;\r\n        case 'geometry-multipolygon':\r\n          transformedCoordinates = (<Coordinate[][][]>this.coordinates).map(ccc =>\r\n            ccc.map(cc => cc.map(c => transform(c, this.srid, this.mapSrid)))\r\n          );\r\n          break;\r\n      }\r\n    }\r\n\r\n    this.host.instance.setCoordinates(transformedCoordinates);\r\n  }\r\n}\r\n","import { Component, Input, Optional, OnInit } from '@angular/core';\r\nimport { Fill, Image, Stroke, Style, Text } from 'ol/style';\r\nimport { Geometry } from 'ol/geom';\r\nimport { FeatureComponent } from '../feature.component';\r\nimport { LayerVectorComponent } from '../layers/layervector.component';\r\nimport { GeometryFunction } from 'ol/style/Style';\r\n\r\n@Component({\r\n  selector: 'aol-style',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class StyleComponent implements OnInit {\r\n  private host: FeatureComponent | LayerVectorComponent;\r\n  public instance: Style;\r\n  public componentType = 'style';\r\n\r\n  @Input()\r\n  geometry: string | Geometry | GeometryFunction;\r\n  @Input()\r\n  fill: Fill;\r\n  @Input()\r\n  image: Image;\r\n  @Input()\r\n  stroke: Stroke;\r\n  @Input()\r\n  text: Text;\r\n  @Input()\r\n  zIndex: number;\r\n\r\n  constructor(@Optional() featureHost: FeatureComponent, @Optional() layerHost: LayerVectorComponent) {\r\n    // console.log('creating aol-style');\r\n    this.host = !!featureHost ? featureHost : layerHost;\r\n    if (!this.host) {\r\n      throw new Error('aol-style must be applied to a feature or a layer');\r\n    }\r\n  }\r\n\r\n  update() {\r\n    // console.log('updating style\\'s host: ', this.host);\r\n    this.host.instance.changed();\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('creating aol-style instance with: ', this);\r\n    this.instance = new Style(this);\r\n    this.host.instance.setStyle(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, Host, AfterContentInit, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\r\nimport { AtlasManager, Circle, Fill, Stroke } from 'ol/style';\r\nimport { StyleComponent } from './style.component';\r\n\r\n@Component({\r\n  selector: 'aol-style-circle',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class StyleCircleComponent implements AfterContentInit, OnChanges, OnDestroy {\r\n  public componentType = 'style-circle';\r\n  public instance: Circle;\r\n\r\n  @Input()\r\n  fill: Fill;\r\n  @Input()\r\n  radius: number;\r\n  @Input()\r\n  snapToPixel: boolean;\r\n  @Input()\r\n  stroke: Stroke;\r\n  @Input()\r\n  atlasManager: AtlasManager;\r\n\r\n  constructor(@Host() private host: StyleComponent) {}\r\n\r\n  /**\r\n   * WORK-AROUND: since the re-rendering is not triggered on style change\r\n   * we trigger a radius change.\r\n   * see openlayers #6233 and #5775\r\n   */\r\n  update() {\r\n    if (!!this.instance) {\r\n      // console.log('setting ol.style.Circle instance\\'s radius');\r\n      this.instance.setRadius(this.radius);\r\n    }\r\n    this.host.update();\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    // console.log('creating ol.style.Circle instance with: ', this);\r\n    this.instance = new Circle(this);\r\n    this.host.instance.setImage(this.instance);\r\n    this.host.update();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    if (changes['radius']) {\r\n      this.instance.setRadius(changes['radius'].currentValue);\r\n    }\r\n    // console.log('changes detected in aol-style-circle, setting new radius: ', changes['radius'].currentValue);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-style-circle');\r\n    this.host.instance.setImage(null);\r\n  }\r\n}\r\n","import { Component, Input, Optional, OnInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { Text } from 'ol/style';\r\nimport { StyleComponent } from './style.component';\r\n\r\n@Component({\r\n  selector: 'aol-style-text',\r\n  template: `\r\n    <div class=\"aol-style-text\"></div>\r\n  `,\r\n})\r\nexport class StyleTextComponent implements OnInit, OnChanges {\r\n  public instance: Text;\r\n  public componentType = 'style-text';\r\n\r\n  @Input()\r\n  font: string | undefined;\r\n  @Input()\r\n  offsetX: number | undefined;\r\n  @Input()\r\n  offsetY: number | undefined;\r\n  @Input()\r\n  scale: number | undefined;\r\n  @Input()\r\n  rotateWithView: boolean | undefined;\r\n  @Input()\r\n  rotation: number | undefined;\r\n  @Input()\r\n  text: string | undefined;\r\n  @Input()\r\n  textAlign: string | undefined;\r\n  @Input()\r\n  textBaseLine: string | undefined;\r\n\r\n  constructor(@Optional() private host: StyleComponent) {\r\n    if (!host) {\r\n      throw new Error('aol-style-text must be a descendant of aol-style');\r\n    }\r\n    // console.log('creating aol-style-text with: ', this);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.style.Text instance with: ', this);\r\n    this.instance = new Text(this);\r\n    this.host.instance.setText(this.instance);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    if (changes['font']) {\r\n      this.instance.setFont(changes['font'].currentValue);\r\n    }\r\n    if (changes['offsetX']) {\r\n      this.instance.setOffsetX(changes['offsetX'].currentValue);\r\n    }\r\n    if (changes['offsetY']) {\r\n      this.instance.setOffsetY(changes['offsetY'].currentValue);\r\n    }\r\n    if (changes['scale']) {\r\n      this.instance.setScale(changes['scale'].currentValue);\r\n    }\r\n    if (changes['rotation']) {\r\n      this.instance.setRotation(changes['rotation'].currentValue);\r\n    }\r\n    if (changes['text']) {\r\n      this.instance.setText(changes['text'].currentValue);\r\n    }\r\n    if (changes['textAlign']) {\r\n      this.instance.setTextAlign(changes['textAlign'].currentValue);\r\n    }\r\n    if (changes['textBaseLine']) {\r\n      this.instance.setTextBaseline(changes['textBaseLine'].currentValue);\r\n    }\r\n    this.host.update();\r\n    // console.log('changes detected in aol-style-text, setting new properties: ', changes);\r\n  }\r\n}\r\n","import { Component, Input, Optional, OnInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { Stroke } from 'ol/style';\r\nimport { StyleComponent } from './style.component';\r\nimport { StyleCircleComponent } from './circle.component';\r\nimport { StyleTextComponent } from './text.component';\r\nimport { Color } from 'ol/color';\r\n\r\n@Component({\r\n  selector: 'aol-style-stroke',\r\n  template: `\r\n    <div class=\"aol-style-stroke\"></div>\r\n  `,\r\n})\r\nexport class StyleStrokeComponent implements OnInit, OnChanges {\r\n  public instance: Stroke;\r\n  /* the typings do not have the setters */\r\n  private host: /*StyleComponent|StyleCircleComponent|StyleTextComponent*/ any;\r\n\r\n  @Input()\r\n  color: Color | undefined;\r\n  @Input()\r\n  lineCap: string | undefined;\r\n  @Input()\r\n  lineDash: number[] | undefined;\r\n  @Input()\r\n  lineJoin: string | undefined;\r\n  @Input()\r\n  miterLimit: number | undefined;\r\n  @Input()\r\n  width: number | undefined;\r\n\r\n  constructor(\r\n    @Optional() styleHost: StyleComponent,\r\n    @Optional() styleCircleHost: StyleCircleComponent,\r\n    @Optional() styleTextHost: StyleTextComponent\r\n  ) {\r\n    if (!styleHost) {\r\n      throw new Error('aol-style-stroke must be a descendant of aol-style');\r\n    }\r\n    if (!!styleTextHost) {\r\n      this.host = styleTextHost;\r\n    } else if (!!styleCircleHost) {\r\n      this.host = styleCircleHost;\r\n    } else {\r\n      this.host = styleHost;\r\n    }\r\n    // console.log('creating aol-style-stroke with: ', this);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.style.Stroke instance with: ', this);\r\n    this.instance = new Stroke(this);\r\n    switch (this.host.componentType) {\r\n      case 'style':\r\n        this.host.instance.setStroke(this.instance);\r\n        // console.log('setting ol.style instance\\'s stroke:', this.host);\r\n        break;\r\n      case 'style-text':\r\n        this.host.instance.setStroke(this.instance);\r\n        break;\r\n      case 'style-circle':\r\n        this.host.stroke = this.instance;\r\n        // console.log('setting ol.style.circle instance\\'s stroke:', this.host);\r\n        break;\r\n      default:\r\n        throw new Error('unknown host type: ' + this.host);\r\n      // break;\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    if (changes['color']) {\r\n      this.instance.setColor(changes['color'].currentValue);\r\n    }\r\n    if (changes['lineCap']) {\r\n      this.instance.setLineCap(changes['lineCap'].currentValue);\r\n    }\r\n    if (changes['lineDash']) {\r\n      this.instance.setLineDash(changes['lineDash'].currentValue);\r\n    }\r\n    if (changes['lineJoin']) {\r\n      this.instance.setLineJoin(changes['lineJoin'].currentValue);\r\n    }\r\n    if (changes['miterLimit']) {\r\n      this.instance.setMiterLimit(changes['miterLimit'].currentValue);\r\n    }\r\n    if (changes['width']) {\r\n      this.instance.setWidth(changes['width'].currentValue);\r\n    }\r\n    this.host.update();\r\n    // console.log('changes detected in aol-style-stroke, setting new properties: ', changes);\r\n  }\r\n}\r\n","import { Component, Input, Host, OnInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { Icon } from 'ol/style';\r\nimport IconAnchorUnits from 'ol/style/IconAnchorUnits';\r\nimport IconOrigin from 'ol/style/IconOrigin';\r\nimport { StyleComponent } from './style.component';\r\n\r\n@Component({\r\n  selector: 'aol-style-icon',\r\n  template: `\r\n    <div class=\"aol-style-icon\"></div>\r\n  `,\r\n})\r\nexport class StyleIconComponent implements OnInit, OnChanges {\r\n  public instance: Icon;\r\n\r\n  @Input()\r\n  anchor: [number, number];\r\n  @Input()\r\n  anchorXUnits: IconAnchorUnits;\r\n  @Input()\r\n  anchorYUnits: IconAnchorUnits;\r\n  @Input()\r\n  anchorOrigin: IconOrigin;\r\n  @Input()\r\n  color: [number, number, number, number];\r\n  @Input()\r\n  crossOrigin: IconOrigin;\r\n  @Input()\r\n  img: string;\r\n  @Input()\r\n  offset: [number, number];\r\n  @Input()\r\n  offsetOrigin: IconOrigin;\r\n  @Input()\r\n  opacity: number;\r\n  @Input()\r\n  scale: number;\r\n  @Input()\r\n  snapToPixel: boolean;\r\n  @Input()\r\n  rotateWithView: boolean;\r\n  @Input()\r\n  rotation: number;\r\n  @Input()\r\n  size: [number, number];\r\n  @Input()\r\n  imgSize: [number, number];\r\n  @Input()\r\n  src: string;\r\n\r\n  constructor(@Host() private host: StyleComponent) {}\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.style.Icon instance with: ', this);\r\n    this.instance = new Icon(this);\r\n    this.host.instance.setImage(this.instance);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    if (changes['opacity']) {\r\n      this.instance.setOpacity(changes['opacity'].currentValue);\r\n    }\r\n    if (changes['rotation']) {\r\n      this.instance.setRotation(changes['rotation'].currentValue);\r\n    }\r\n    if (changes['scale']) {\r\n      this.instance.setScale(changes['scale'].currentValue);\r\n    }\r\n    if (changes['src']) {\r\n      this.instance = new Icon(this);\r\n      this.host.instance.setImage(this.instance);\r\n    }\r\n    this.host.update();\r\n    // console.log('changes detected in aol-style-icon: ', changes);\r\n  }\r\n}\r\n","import { Component, Input, Optional, OnInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { Fill } from 'ol/style';\r\nimport { StyleComponent } from './style.component';\r\nimport { StyleCircleComponent } from './circle.component';\r\nimport { StyleTextComponent } from './text.component';\r\nimport { Color } from 'ol/color';\r\nimport { ColorLike } from 'ol/colorlike';\r\n\r\n@Component({\r\n  selector: 'aol-style-fill',\r\n  template: `\r\n    <div class=\"aol-style-fill\"></div>\r\n  `,\r\n})\r\nexport class StyleFillComponent implements OnInit, OnChanges {\r\n  /* the typings do not have the setters */\r\n  private host: /*StyleComponent|StyleCircleComponent|StyleTextComponent*/ any;\r\n  public instance: Fill;\r\n\r\n  @Input()\r\n  color: Color | ColorLike;\r\n\r\n  constructor(\r\n    @Optional() styleHost: StyleComponent,\r\n    @Optional() styleCircleHost: StyleCircleComponent,\r\n    @Optional() styleTextHost: StyleTextComponent\r\n  ) {\r\n    if (!styleHost) {\r\n      throw new Error('aol-style-stroke must be a descendant of aol-style');\r\n    }\r\n    if (!!styleTextHost) {\r\n      this.host = styleTextHost;\r\n    } else if (!!styleCircleHost) {\r\n      this.host = styleCircleHost;\r\n    } else {\r\n      this.host = styleHost;\r\n    }\r\n    // console.log('creating aol-style-fill with: ', this);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.style.Fill instance with: ', this);\r\n    this.instance = new Fill(this);\r\n    switch (this.host.componentType) {\r\n      case 'style':\r\n        this.host.instance.setFill(this.instance);\r\n        // console.log('setting ol.style instance\\'s fill:', this.host);\r\n        break;\r\n      case 'style-text':\r\n        this.host.instance.setFill(this.instance);\r\n        break;\r\n      case 'style-circle':\r\n        this.host.fill = this.instance;\r\n        // console.log('setting ol.style.circle instance\\'s fill:', this.host);\r\n        break;\r\n      default:\r\n        throw new Error('unknown host type: ' + this.host);\r\n      // break;\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    if (changes['color']) {\r\n      this.instance.setColor(changes['color'].currentValue);\r\n    }\r\n    this.host.update();\r\n    // console.log('changes detected in aol-style-fill, setting new color: ', changes);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\r\nimport { Control, defaults } from 'ol/control';\r\nimport { Collection } from 'ol';\r\nimport { Options as AttributionOptions } from 'ol/control/Attribution';\r\nimport { Options as RotateOptions } from 'ol/control/Rotate';\r\nimport { Options as ZoomOptions } from 'ol/control/Zoom';\r\n\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-defaults',\r\n  template: '',\r\n})\r\nexport class DefaultControlComponent implements OnInit, OnDestroy {\r\n  instance: Collection<Control>;\r\n  @Input()\r\n  attribution: boolean;\r\n  @Input()\r\n  attributionOptions: AttributionOptions;\r\n  @Input()\r\n  rotate: boolean;\r\n  @Input()\r\n  rotateOptions: RotateOptions;\r\n  @Input()\r\n  zoom: boolean;\r\n  @Input()\r\n  zoomOptions: ZoomOptions;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    // console.log('ol.control.defaults init: ', this);\r\n    this.instance = defaults(this);\r\n    this.instance.forEach(c => this.map.instance.addControl(c));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-defaults');\r\n    this.instance.forEach(c => this.map.instance.removeControl(c));\r\n  }\r\n}\r\n","import { Component, ContentChild, OnDestroy, OnInit } from '@angular/core';\r\nimport { Control } from 'ol/control';\r\nimport { MapComponent } from '../map.component';\r\nimport { ContentComponent } from '../content.component';\r\n\r\n@Component({\r\n  selector: 'aol-control',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ControlComponent implements OnInit, OnDestroy {\r\n  public componentType = 'control';\r\n  instance: Control;\r\n  element: Element;\r\n  @ContentChild(ContentComponent)\r\n  content: ContentComponent;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    if (this.content) {\r\n      this.element = this.content.elementRef.nativeElement;\r\n      this.instance = new Control(this);\r\n      this.map.instance.addControl(this.instance);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.instance) {\r\n      this.map.instance.removeControl(this.instance);\r\n    }\r\n  }\r\n}\r\n","import { Component, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { Attribution } from 'ol/control';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-attribution',\r\n  template: ``,\r\n})\r\nexport class ControlAttributionComponent implements OnInit, OnDestroy {\r\n  public componentType = 'control';\r\n  instance: Attribution;\r\n  target: Element;\r\n  @Input()\r\n  collapsible: boolean;\r\n\r\n  constructor(private map: MapComponent, private element: ElementRef) {}\r\n\r\n  ngOnInit() {\r\n    this.target = this.element.nativeElement;\r\n    // console.log('ol.control.Attribution init: ', this);\r\n    this.instance = new Attribution(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-attribution');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { FullScreen } from 'ol/control';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-fullscreen',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ControlFullScreenComponent implements OnInit, OnDestroy {\r\n  instance: FullScreen;\r\n\r\n  @Input()\r\n  className: string;\r\n  @Input()\r\n  label: string;\r\n  @Input()\r\n  labelActive: string;\r\n  @Input()\r\n  tipLabel: string;\r\n  @Input()\r\n  keys: boolean;\r\n\r\n  constructor(private map: MapComponent) {\r\n    // console.log('instancing aol-control-fullscreen');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new FullScreen(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-fullscreen');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport MousePosition from 'ol/control/MousePosition';\r\nimport { MapComponent } from '../map.component';\r\nimport { CoordinateFormat } from 'ol/coordinate';\r\nimport { ProjectionLike } from 'ol/proj';\r\n\r\n@Component({\r\n  selector: 'aol-control-mouseposition',\r\n  template: ``,\r\n})\r\nexport class ControlMousePositionComponent implements OnInit, OnDestroy {\r\n  instance: MousePosition;\r\n  @Input()\r\n  coordinateFormat: CoordinateFormat;\r\n  @Input()\r\n  projection: ProjectionLike;\r\n  target: Element;\r\n\r\n  constructor(private map: MapComponent, private element: ElementRef) {}\r\n\r\n  ngOnInit() {\r\n    this.target = this.element.nativeElement;\r\n    // console.log('ol.control.MousePosition init: ', this);\r\n    this.instance = new MousePosition(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-mouseposition');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { Layer } from 'ol/layer';\r\nimport { View } from 'ol';\r\nimport { OverviewMap } from 'ol/control';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-overviewmap',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ControlOverviewMapComponent implements OnInit, OnChanges, OnDestroy {\r\n  instance: OverviewMap;\r\n  @Input()\r\n  collapsed: boolean;\r\n  @Input()\r\n  collapseLabel: string;\r\n  @Input()\r\n  collapsible: boolean;\r\n  @Input()\r\n  label: string;\r\n  @Input()\r\n  layers: Layer[];\r\n  @Input()\r\n  target: Element;\r\n  @Input()\r\n  tipLabel: string;\r\n  @Input()\r\n  view: View;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new OverviewMap(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (this.instance != null && changes.hasOwnProperty('view')) {\r\n      this.reloadInstance();\r\n    }\r\n  }\r\n\r\n  private reloadInstance() {\r\n    this.map.instance.removeControl(this.instance);\r\n    this.instance = new OverviewMap(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { Rotate } from 'ol/control';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-rotate',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ControlRotateComponent implements OnInit, OnDestroy {\r\n  instance: Rotate;\r\n\r\n  @Input()\r\n  className: string;\r\n  @Input()\r\n  label: string;\r\n  @Input()\r\n  tipLabel: string;\r\n  @Input()\r\n  duration: number;\r\n  @Input()\r\n  autoHide: boolean;\r\n\r\n  constructor(private map: MapComponent) {\r\n    // console.log('instancing aol-control-rotate');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new Rotate(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-rotate');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { ScaleLine } from 'ol/control';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-scaleline',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ControlScaleLineComponent implements OnInit, OnDestroy {\r\n  instance: ScaleLine;\r\n  @Input()\r\n  units: string;\r\n\r\n  constructor(private map: MapComponent) {\r\n    // console.log('instancing aol-control-scaleline');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new ScaleLine(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-scaleline');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { Zoom } from 'ol/control';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-zoom',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ControlZoomComponent implements OnInit, OnDestroy {\r\n  instance: Zoom;\r\n\r\n  @Input()\r\n  duration: number;\r\n  @Input()\r\n  zoomInLabel: string | Node;\r\n  @Input()\r\n  zoomOutLabel: string | Node;\r\n  @Input()\r\n  zoomInTipLabel: string;\r\n  @Input()\r\n  zoomOutTipLabel: string;\r\n  @Input()\r\n  delta: number;\r\n\r\n  constructor(private map: MapComponent) {\r\n    // console.log('instancing aol-control-zoom');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new Zoom(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-zoom');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { ZoomSlider } from 'ol/control';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-zoomslider',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ControlZoomSliderComponent implements OnInit, OnDestroy {\r\n  instance: ZoomSlider;\r\n\r\n  @Input()\r\n  className: string;\r\n  @Input()\r\n  duration: number;\r\n  @Input()\r\n  maxResolution: number;\r\n  @Input()\r\n  minResolution: number;\r\n\r\n  constructor(private map: MapComponent) {\r\n    // console.log('instancing aol-control-zoomslider');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new ZoomSlider(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-zoomslider');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { ZoomToExtent } from 'ol/control';\r\nimport { MapComponent } from '../map.component';\r\nimport { Extent } from 'ol/extent';\r\n\r\n@Component({\r\n  selector: 'aol-control-zoomtoextent',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ControlZoomToExtentComponent implements OnInit, OnDestroy {\r\n  instance: ZoomToExtent;\r\n\r\n  @Input()\r\n  className: string;\r\n  @Input()\r\n  label: string | Node;\r\n  @Input()\r\n  tipLabel: string;\r\n  @Input()\r\n  extent: Extent;\r\n\r\n  constructor(private map: MapComponent) {\r\n    // console.log('instancing aol-control-zoomtoextent');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new ZoomToExtent(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-zoomtoextent');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, forwardRef, Input } from '@angular/core';\r\nimport { FormatComponent } from './format.component';\r\nimport { MVT } from 'ol/format';\r\nimport { Geometry } from 'ol/geom';\r\nimport GeometryType from 'ol/geom/GeometryType';\r\n\r\n@Component({\r\n  selector: 'aol-format-mvt',\r\n  template: '',\r\n  providers: [{ provide: FormatComponent, useExisting: forwardRef(() => FormatMVTComponent) }],\r\n})\r\nexport class FormatMVTComponent extends FormatComponent {\r\n  instance: MVT;\r\n\r\n  @Input()\r\n  featureClass:\r\n    | ((geom: Geometry | { [k: string]: any }) => any)\r\n    | ((geom: GeometryType, arg2: number[], arg3: number[] | number[][], arg4: { [k: string]: any }) => any);\r\n  @Input()\r\n  geometryName: string;\r\n  @Input()\r\n  layerName: string;\r\n  @Input()\r\n  layers: string[];\r\n\r\n  constructor() {\r\n    super();\r\n    this.instance = new MVT(this);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { defaults, Interaction } from 'ol/interaction';\r\nimport { Collection } from 'ol';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-default',\r\n  template: '',\r\n})\r\nexport class DefaultInteractionComponent implements OnInit, OnDestroy {\r\n  instance: Collection<Interaction>;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = defaults();\r\n    this.instance.forEach(i => this.map.instance.addInteraction(i));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.instance.forEach(i => this.map.instance.removeInteraction(i));\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { DoubleClickZoom } from 'ol/interaction';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-doubleclickzoom',\r\n  template: '',\r\n})\r\nexport class DoubleClickZoomInteractionComponent implements OnInit, OnDestroy {\r\n  instance: DoubleClickZoom;\r\n\r\n  @Input()\r\n  duration: number;\r\n  @Input()\r\n  delta: number;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new DoubleClickZoom(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { DragAndDrop } from 'ol/interaction';\r\nimport Feature from 'ol/format/Feature';\r\nimport { MapComponent } from '../map.component';\r\nimport { ProjectionLike } from 'ol/proj';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-draganddrop',\r\n  template: '',\r\n})\r\nexport class DragAndDropInteractionComponent implements OnInit, OnDestroy {\r\n  instance: DragAndDrop;\r\n\r\n  @Input()\r\n  formatConstructors: ((n: Feature) => any)[];\r\n  @Input()\r\n  projection: ProjectionLike;\r\n  @Input()\r\n  target: Element;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new DragAndDrop(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\r\nimport { DragBox } from 'ol/interaction';\r\nimport { MapComponent } from '../map.component';\r\nimport { Condition } from 'ol/events/condition';\r\nimport { EndCondition } from 'ol/interaction/DragBox';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-dragbox',\r\n  template: '',\r\n})\r\nexport class DragBoxInteractionComponent implements OnInit, OnDestroy {\r\n  instance: DragBox;\r\n\r\n  @Input()\r\n  className: string;\r\n  @Input()\r\n  condition: Condition;\r\n  @Input()\r\n  boxEndCondition: EndCondition;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new DragBox(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\r\nimport { DragPan } from 'ol/interaction';\r\nimport Kinetic from 'ol/Kinetic';\r\nimport { MapComponent } from '../map.component';\r\nimport { Condition } from 'ol/events/condition';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-dragpan',\r\n  template: '',\r\n})\r\nexport class DragPanInteractionComponent implements OnInit, OnDestroy {\r\n  instance: DragPan;\r\n\r\n  @Input()\r\n  condition: Condition;\r\n  @Input()\r\n  kinetic: Kinetic;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new DragPan(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\r\nimport { DragRotate } from 'ol/interaction';\r\nimport { MapComponent } from '../map.component';\r\nimport { Condition } from 'ol/events/condition';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-dragrotate',\r\n  template: '',\r\n})\r\nexport class DragRotateInteractionComponent implements OnInit, OnDestroy {\r\n  instance: DragRotate;\r\n\r\n  @Input()\r\n  condition: Condition;\r\n  @Input()\r\n  duration: number;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new DragRotate(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\r\nimport { DragRotateAndZoom } from 'ol/interaction';\r\nimport { MapComponent } from '../map.component';\r\nimport { Condition } from 'ol/events/condition';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-dragrotateandzoom',\r\n  template: '',\r\n})\r\nexport class DragRotateAndZoomInteractionComponent implements OnInit, OnDestroy {\r\n  instance: DragRotateAndZoom;\r\n\r\n  @Input()\r\n  condition: Condition;\r\n  @Input()\r\n  duration: number;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new DragRotateAndZoom(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\r\nimport { DragZoom } from 'ol/interaction';\r\nimport { MapComponent } from '../map.component';\r\nimport { Condition } from 'ol/events/condition';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-dragzoom',\r\n  template: '',\r\n})\r\nexport class DragZoomInteractionComponent implements OnInit, OnDestroy {\r\n  instance: DragZoom;\r\n\r\n  @Input()\r\n  className: string;\r\n  @Input()\r\n  condition: Condition;\r\n  @Input()\r\n  duration: number;\r\n  @Input()\r\n  out: boolean;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new DragZoom(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { MouseWheelZoom } from 'ol/interaction';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-mousewheelzoom',\r\n  template: '',\r\n})\r\nexport class MouseWheelZoomInteractionComponent implements OnInit, OnDestroy {\r\n  instance: MouseWheelZoom;\r\n  @Input()\r\n  duration: number;\r\n  @Input()\r\n  timeout: number;\r\n  @Input()\r\n  useAnchor: boolean;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new MouseWheelZoom(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\r\nimport { PinchZoom } from 'ol/interaction';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-pinchzoom',\r\n  template: '',\r\n})\r\nexport class PinchZoomInteractionComponent implements OnInit, OnDestroy {\r\n  instance: PinchZoom;\r\n\r\n  @Input()\r\n  duration: number;\r\n  @Input()\r\n  constrainResolution: boolean;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new PinchZoom(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit, EventEmitter, Output } from '@angular/core';\r\nimport { MapComponent } from '../map.component';\r\nimport { Draw } from 'ol/interaction';\r\nimport { Collection, Feature } from 'ol';\r\nimport { Vector } from 'ol/source';\r\nimport GeometryType from 'ol/geom/GeometryType';\r\nimport { Style } from 'ol/style';\r\nimport { DrawEvent, GeometryFunction } from 'ol/interaction/Draw';\r\nimport { StyleFunction } from 'ol/style/Style';\r\nimport { Condition } from 'ol/events/condition';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-draw',\r\n  template: '',\r\n})\r\nexport class DrawInteractionComponent implements OnInit, OnDestroy {\r\n  instance: Draw;\r\n\r\n  @Input()\r\n  clickTolerance?: number;\r\n  @Input()\r\n  features?: Collection<Feature>;\r\n  @Input()\r\n  source?: Vector;\r\n  @Input()\r\n  snapTolerance?: number;\r\n  @Input()\r\n  type: GeometryType;\r\n  @Input()\r\n  maxPoints?: number;\r\n  @Input()\r\n  minPoints?: number;\r\n  @Input()\r\n  finishCondition?: Condition;\r\n  @Input()\r\n  style?: Style | Style[] | StyleFunction;\r\n  @Input()\r\n  geometryFunction?: GeometryFunction;\r\n  @Input()\r\n  geometryName?: string;\r\n  @Input()\r\n  condition?: Condition;\r\n  @Input()\r\n  freehandCondition?: Condition;\r\n  @Input()\r\n  freehand?: boolean;\r\n  @Input()\r\n  wrapX?: boolean;\r\n\r\n  @Output()\r\n  onChange = new EventEmitter<DrawEvent>();\r\n  @Output()\r\n  onChangeActive = new EventEmitter<DrawEvent>();\r\n  @Output()\r\n  onDrawEnd = new EventEmitter<DrawEvent>();\r\n  @Output()\r\n  onDrawStart = new EventEmitter<DrawEvent>();\r\n  @Output()\r\n  onPropertyChange = new EventEmitter<DrawEvent>();\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new Draw(this);\r\n    this.instance.on('change', (event: DrawEvent) => this.onChange.emit(event));\r\n    this.instance.on('change:active', (event: DrawEvent) => this.onChangeActive.emit(event));\r\n    this.instance.on('drawend', (event: DrawEvent) => this.onDrawEnd.emit(event));\r\n    this.instance.on('drawstart', (event: DrawEvent) => this.onDrawStart.emit(event));\r\n    this.instance.on('propertychange', (event: DrawEvent) => this.onPropertyChange.emit(event));\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { MapComponent } from '../map.component';\r\nimport { Select } from 'ol/interaction';\r\nimport { Layer } from 'ol/layer';\r\nimport { Style } from 'ol/style';\r\nimport { Collection, Feature } from 'ol';\r\nimport { SelectEvent, FilterFunction } from 'ol/interaction/Select';\r\nimport { StyleFunction } from 'ol/style/Style';\r\nimport { Condition } from 'ol/events/condition';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-select',\r\n  template: '',\r\n})\r\nexport class SelectInteractionComponent implements OnInit, OnDestroy {\r\n  instance: Select;\r\n\r\n  @Input()\r\n  addCondition?: Condition;\r\n  @Input()\r\n  condition?: Condition;\r\n  @Input()\r\n  layers?: Layer[] | ((layer: Layer) => boolean);\r\n  @Input()\r\n  style?: Style | Style[] | StyleFunction;\r\n  @Input()\r\n  removeCondition?: Condition;\r\n  @Input()\r\n  toggleCondition?: Condition;\r\n  @Input()\r\n  multi?: boolean;\r\n  @Input()\r\n  features?: Collection<Feature>;\r\n  @Input()\r\n  filter?: FilterFunction;\r\n  @Input()\r\n  wrapX?: boolean;\r\n\r\n  @Output()\r\n  onChange = new EventEmitter<SelectEvent>();\r\n  @Output()\r\n  onSelect = new EventEmitter<SelectEvent>();\r\n  @Output()\r\n  onPropertyChange = new EventEmitter<SelectEvent>();\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new Select(this);\r\n\r\n    this.instance.on('change', (event: SelectEvent) => this.onChange.emit(event));\r\n    this.instance.on('select', (event: SelectEvent) => this.onSelect.emit(event));\r\n    this.instance.on('propertychange', (event: SelectEvent) => this.onPropertyChange.emit(event));\r\n\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { MapComponent } from '../map.component';\r\nimport { Modify } from 'ol/interaction';\r\nimport { Collection, Feature } from 'ol';\r\nimport { Style } from 'ol/style';\r\nimport { Vector } from 'ol/source';\r\nimport { ModifyEvent } from 'ol/interaction/Modify';\r\nimport { StyleFunction } from 'ol/style/Style';\r\nimport { Condition } from 'ol/events/condition';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-modify',\r\n  template: '',\r\n})\r\nexport class ModifyInteractionComponent implements OnInit, OnDestroy {\r\n  instance: Modify;\r\n\r\n  @Input()\r\n  condition?: Condition;\r\n  @Input()\r\n  deleteCondition?: Condition;\r\n  @Input()\r\n  pixelTolerance?: number;\r\n  @Input()\r\n  style?: Style | Style[] | StyleFunction;\r\n  @Input()\r\n  features: Collection<Feature>;\r\n  @Input()\r\n  wrapX?: boolean;\r\n  @Input()\r\n  source?: Vector;\r\n\r\n  @Output()\r\n  onModifyEnd = new EventEmitter<ModifyEvent>();\r\n  @Output()\r\n  onModifyStart = new EventEmitter<ModifyEvent>();\r\n  @Output()\r\n  onChange = new EventEmitter<ModifyEvent>();\r\n  @Output()\r\n  onChangeActive = new EventEmitter<ModifyEvent>();\r\n  @Output()\r\n  onPropertyChange = new EventEmitter<ModifyEvent>();\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new Modify(this);\r\n    this.instance.on('change', (event: ModifyEvent) => this.onChange.emit(event));\r\n    this.instance.on('change:active', (event: ModifyEvent) => this.onChangeActive.emit(event));\r\n    this.instance.on('propertychange', (event: ModifyEvent) => this.onPropertyChange.emit(event));\r\n    this.instance.on('modifyend', (event: ModifyEvent) => this.onModifyEnd.emit(event));\r\n    this.instance.on('modifystart', (event: ModifyEvent) => this.onModifyStart.emit(event));\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Translate } from 'ol/interaction';\r\nimport { Collection, Feature } from 'ol';\r\nimport { Layer } from 'ol/layer';\r\nimport { TranslateEvent } from 'ol/interaction/Translate';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-translate',\r\n  template: '',\r\n})\r\nexport class TranslateInteractionComponent implements OnInit, OnDestroy {\r\n  instance: Translate;\r\n\r\n  @Input()\r\n  features?: Collection<Feature>;\r\n  @Input()\r\n  layers?: Layer[] | ((layer: Layer) => boolean);\r\n  @Input()\r\n  hitTolerance?: number;\r\n\r\n  @Output()\r\n  onChange: EventEmitter<TranslateEvent>;\r\n  @Output()\r\n  onPropertyChange: EventEmitter<TranslateEvent>;\r\n  @Output()\r\n  onTranslateEnd: EventEmitter<TranslateEvent>;\r\n  @Output()\r\n  onTranslateStart: EventEmitter<TranslateEvent>;\r\n  @Output()\r\n  onTranslating: EventEmitter<TranslateEvent>;\r\n\r\n  constructor(private map: MapComponent) {\r\n    this.onChange = new EventEmitter<TranslateEvent>();\r\n    this.onPropertyChange = new EventEmitter<TranslateEvent>();\r\n    this.onTranslateEnd = new EventEmitter<TranslateEvent>();\r\n    this.onTranslateStart = new EventEmitter<TranslateEvent>();\r\n    this.onTranslating = new EventEmitter<TranslateEvent>();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new Translate(this);\r\n\r\n    this.instance.on('change', (event: TranslateEvent) => this.onChange.emit(event));\r\n    this.instance.on('propertychange', (event: TranslateEvent) => this.onPropertyChange.emit(event));\r\n    this.instance.on('translateend', (event: TranslateEvent) => this.onTranslateEnd.emit(event));\r\n    this.instance.on('translatestart', (event: TranslateEvent) => this.onTranslateStart.emit(event));\r\n    this.instance.on('translating', (event: TranslateEvent) => this.onTranslating.emit(event));\r\n\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, ElementRef, OnInit } from '@angular/core';\r\nimport { Attribution } from 'ol/control';\r\n\r\n@Component({\r\n  selector: 'aol-attribution',\r\n  template: '<ng-content></ng-content>',\r\n})\r\nexport class AttributionComponent implements OnInit {\r\n  instance: Attribution;\r\n  html: string;\r\n\r\n  constructor(private elementRef: ElementRef) {}\r\n\r\n  ngOnInit() {\r\n    this.html = this.elementRef.nativeElement.innerHTML;\r\n    this.instance = new Attribution(this);\r\n  }\r\n}\r\n","import { AfterViewInit, Component, ContentChildren, Host, QueryList } from '@angular/core';\r\nimport { Attribution } from 'ol/control';\r\nimport { SourceComponent } from './sources/source.component';\r\nimport { AttributionComponent } from './attribution.component';\r\n\r\n@Component({\r\n  selector: 'aol-attributions',\r\n  template: '<ng-content></ng-content>',\r\n})\r\nexport class AttributionsComponent implements AfterViewInit {\r\n  instance: Array<Attribution>;\r\n\r\n  @ContentChildren(AttributionComponent)\r\n  attributions: QueryList<AttributionComponent>;\r\n\r\n  constructor(@Host() private source: SourceComponent) {}\r\n\r\n  /* we can do this at the very end */\r\n  ngAfterViewInit() {\r\n    if (this.attributions.length) {\r\n      this.instance = this.attributions.map(cmp => cmp.instance);\r\n      // console.log('setting attributions:', this.instance);\r\n      this.source.instance.setAttributions(this.instance);\r\n    }\r\n  }\r\n}\r\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\r\nimport { SourceComponent } from './source.component';\r\nimport { LayerTileComponent } from '../layers/layertile.component';\r\nimport { UTFGrid } from 'ol/source';\r\n\r\n@Component({\r\n  selector: 'aol-source-utfgrid',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceUTFGridComponent) }],\r\n})\r\nexport class SourceUTFGridComponent extends SourceComponent implements OnInit {\r\n  instance: UTFGrid;\r\n  @Input() tileJSON: JSON;\r\n  @Input() url: string;\r\n\r\n  constructor(@Host() layer: LayerTileComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new UTFGrid(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n}\r\n","import {AfterContentInit, AfterViewInit, Component, ContentChild, forwardRef, Host, Input, OnInit} from '@angular/core';\nimport {ProjectionLike} from 'ol/proj';\nimport {UrlFunction} from 'ol/Tile';\nimport stylefunction from 'ol-mapbox-style/stylefunction';\nimport {applyStyle, applyBackground} from 'ol-mapbox-style';\nimport {SourceComponent} from './source.component';\nimport {LayerVectorTileComponent} from '../layers/layervectortile.component';\nimport {MapComponent} from '../map.component';\nimport {SourceVectorTileComponent} from './vectortile.component';\nimport {HttpClient} from '@angular/common/http';\n\n@Component({\n  selector: 'aol-source-mapbox',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{provide: SourceComponent, useExisting: forwardRef(() => SourceMapboxVectorTileComponent)}],\n})\nexport class SourceMapboxVectorTileComponent extends SourceVectorTileComponent implements AfterContentInit {\n\n  @Input() styleUrl: string;\n\n  @Input() sourceName: string;\n\n  @Input() spriteJsonUrl: string;\n\n  @Input() spriteUrl: string;\n\n  private styleLoaded = false;\n\n  private spriteJsonLoaded = false;\n\n  private glStyle = {};\n\n  private spriteData = {};\n\n  constructor(@Host() layer: LayerVectorTileComponent, private map: MapComponent, private http: HttpClient) {\n    super(layer);\n  }\n\n\n  ngAfterContentInit(): void {\n    super.ngAfterContentInit();\n\n    this.http.get(this.styleUrl).subscribe(styleObject => {\n      this.glStyle = styleObject;\n      this.styleLoaded = true;\n      this.applyMapboxStyle();\n    });\n\n    this.http.get(this.spriteJsonUrl).subscribe(spriteData => {\n      this.spriteData = spriteData;\n      this.spriteJsonLoaded = true;\n      this.applyMapboxStyle();\n    });\n  }\n\n\n  applyMapboxStyle() {\n    // set the mapbox style\n    if (this.spriteJsonLoaded && this.styleLoaded) {\n      stylefunction(this.host.instance, this.glStyle, this.sourceName, undefined, this.spriteData, this.spriteUrl);\n      applyBackground(this.map.instance, this.glStyle);\n    }\n  }\n\n}\n","/*\r\n * Public API Surface of ngx-openlayers\r\n */\r\nimport {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {ViewComponent} from './lib/view.component';\r\nimport {GraticuleComponent} from './lib/graticule.component';\r\nimport {LayerGroupComponent} from './lib/layers/layergroup.component';\r\nimport {LayerImageComponent} from './lib/layers/layerimage.component';\r\nimport {LayerTileComponent} from './lib/layers/layertile.component';\r\nimport {MapComponent} from './lib/map.component';\r\nimport {LayerVectorComponent} from './lib/layers/layervector.component';\r\nimport {LayerVectorTileComponent} from './lib/layers/layervectortile.component';\r\nimport {SourceOsmComponent} from './lib/sources/osm.component';\r\nimport {SourceBingmapsComponent} from './lib/sources/bingmaps.component';\r\nimport {SourceClusterComponent} from './lib/sources/cluster.component';\r\nimport {SourceVectorComponent} from './lib/sources/vector.component';\r\nimport {SourceXYZComponent} from './lib/sources/xyz.component';\r\nimport {SourceTileWMTSComponent} from './lib/sources/tilewmts.component';\r\nimport {SourceVectorTileComponent} from './lib/sources/vectortile.component';\r\nimport {SourceTileWMSComponent} from './lib/sources/tilewms.component';\r\nimport {SourceTileJSONComponent} from './lib/sources/tilejson.component';\r\nimport {SourceGeoJSONComponent} from './lib/sources/geojson.component';\r\nimport {SourceImageStaticComponent} from './lib/sources/imagestatic.component';\r\nimport {SourceImageWMSComponent} from './lib/sources/imagewms.component';\r\nimport {SourceImageArcGISRestComponent} from './lib/sources/imagearcgisrest.component';\r\nimport {SourceRasterComponent} from './lib/sources/raster.component';\r\nimport {FeatureComponent} from './lib/feature.component';\r\nimport {GeometryCircleComponent} from './lib/geom/geometrycircle.component';\r\nimport {GeometryLinestringComponent} from './lib/geom/geometrylinestring.component';\r\nimport {GeometryMultiLinestringComponent} from './lib/geom/geometrymultilinestring.component';\r\nimport {GeometryMultiPointComponent} from './lib/geom/geometrymultipoint.component';\r\nimport {GeometryMultiPolygonComponent} from './lib/geom/geometrymultipolygon.component';\r\nimport {GeometryPointComponent} from './lib/geom/geometrypoint.component';\r\nimport {GeometryPolygonComponent} from './lib/geom/geometrypolygon.component';\r\nimport {CoordinateComponent} from './lib/coordinate.component';\r\nimport {CollectionCoordinatesComponent} from './lib/collectioncoordinates.component';\r\nimport {StyleComponent} from './lib/styles/style.component';\r\nimport {StyleCircleComponent} from './lib/styles/circle.component';\r\nimport {StyleStrokeComponent} from './lib/styles/stroke.component';\r\nimport {StyleIconComponent} from './lib/styles/icon.component';\r\nimport {StyleFillComponent} from './lib/styles/fill.component';\r\nimport {StyleTextComponent} from './lib/styles/text.component';\r\nimport {DefaultControlComponent} from './lib/controls/default.component';\r\nimport {ControlComponent} from './lib/controls/control.component';\r\nimport {ControlAttributionComponent} from './lib/controls/attribution.component';\r\nimport {ControlFullScreenComponent} from './lib/controls/fullscreen.component';\r\nimport {ControlMousePositionComponent} from './lib/controls/mouseposition.component';\r\nimport {ControlOverviewMapComponent} from './lib/controls/overviewmap.component';\r\nimport {ControlRotateComponent} from './lib/controls/rotate.component';\r\nimport {ControlScaleLineComponent} from './lib/controls/scaleline.component';\r\nimport {ControlZoomComponent} from './lib/controls/zoom.component';\r\nimport {ControlZoomSliderComponent} from './lib/controls/zoomslider.component';\r\nimport {ControlZoomToExtentComponent} from './lib/controls/zoomtoextent.component';\r\nimport {FormatMVTComponent} from './lib/formats/mvt.component';\r\nimport {TileGridComponent} from './lib/tilegrid.component';\r\nimport {TileGridWMTSComponent} from './lib/tilegridwmts.component';\r\nimport {DefaultInteractionComponent} from './lib/interactions/default.component';\r\nimport {DoubleClickZoomInteractionComponent} from './lib/interactions/doubleclickzoom.component';\r\nimport {DragAndDropInteractionComponent} from './lib/interactions/draganddrop.component';\r\nimport {DragBoxInteractionComponent} from './lib/interactions/dragbox.component';\r\nimport {DragPanInteractionComponent} from './lib/interactions/dragpan.component';\r\nimport {DragRotateInteractionComponent} from './lib/interactions/dragrotate.component';\r\nimport {DragRotateAndZoomInteractionComponent} from './lib/interactions/dragrotateandzoom.component';\r\nimport {DragZoomInteractionComponent} from './lib/interactions/dragzoom.component';\r\nimport {MouseWheelZoomInteractionComponent} from './lib/interactions/mousewheelzoom.component';\r\nimport {PinchZoomInteractionComponent} from './lib/interactions/pinchzoom.component';\r\nimport {DrawInteractionComponent} from './lib/interactions/draw.component';\r\nimport {SelectInteractionComponent} from './lib/interactions/select.component';\r\nimport {ModifyInteractionComponent} from './lib/interactions/modify.component';\r\nimport {TranslateInteractionComponent} from './lib/interactions/translate.component';\r\nimport {OverlayComponent} from './lib/overlay.component';\r\nimport {ContentComponent} from './lib/content.component';\r\nimport {AttributionsComponent} from './lib/attributions.component';\r\nimport {AttributionComponent} from './lib/attribution.component';\r\nimport {SourceUTFGridComponent} from './lib/sources/utfgrid.component';\r\nimport {SourceMapboxVectorTileComponent} from './lib/sources/source-mapbox-vector-tile.component';\r\nimport {HttpClientModule} from '@angular/common/http';\r\n\r\nexport {\r\n  MapComponent,\r\n  ViewComponent,\r\n  GraticuleComponent,\r\n  LayerGroupComponent,\r\n  LayerImageComponent,\r\n  LayerTileComponent,\r\n  LayerVectorComponent,\r\n  LayerVectorTileComponent,\r\n  SourceOsmComponent,\r\n  SourceBingmapsComponent,\r\n  SourceClusterComponent,\r\n  SourceUTFGridComponent,\r\n  SourceVectorComponent,\r\n  SourceXYZComponent,\r\n  SourceVectorTileComponent,\r\n  SourceTileWMSComponent,\r\n  SourceTileWMTSComponent,\r\n  SourceTileJSONComponent,\r\n  SourceGeoJSONComponent,\r\n  SourceImageStaticComponent,\r\n  SourceImageWMSComponent,\r\n  SourceRasterComponent,\r\n  SourceImageArcGISRestComponent,\r\n  FeatureComponent,\r\n  GeometryLinestringComponent,\r\n  GeometryMultiLinestringComponent,\r\n  GeometryMultiPointComponent,\r\n  GeometryMultiPolygonComponent,\r\n  GeometryPointComponent,\r\n  GeometryPolygonComponent,\r\n  GeometryCircleComponent,\r\n  CoordinateComponent,\r\n  CollectionCoordinatesComponent,\r\n  StyleComponent,\r\n  StyleCircleComponent,\r\n  StyleFillComponent,\r\n  StyleIconComponent,\r\n  StyleStrokeComponent,\r\n  StyleTextComponent,\r\n  DefaultControlComponent,\r\n  ControlComponent,\r\n  ControlAttributionComponent,\r\n  ControlFullScreenComponent,\r\n  ControlMousePositionComponent,\r\n  ControlOverviewMapComponent,\r\n  ControlRotateComponent,\r\n  ControlScaleLineComponent,\r\n  ControlZoomComponent,\r\n  ControlZoomSliderComponent,\r\n  ControlZoomToExtentComponent,\r\n  FormatMVTComponent,\r\n  TileGridComponent,\r\n  TileGridWMTSComponent,\r\n  DefaultInteractionComponent,\r\n  DoubleClickZoomInteractionComponent,\r\n  DragAndDropInteractionComponent,\r\n  DragBoxInteractionComponent,\r\n  DragPanInteractionComponent,\r\n  DragRotateInteractionComponent,\r\n  DragRotateAndZoomInteractionComponent,\r\n  DragZoomInteractionComponent,\r\n  MouseWheelZoomInteractionComponent,\r\n  PinchZoomInteractionComponent,\r\n  DrawInteractionComponent,\r\n  SelectInteractionComponent,\r\n  ModifyInteractionComponent,\r\n  TranslateInteractionComponent,\r\n  OverlayComponent,\r\n  ContentComponent,\r\n  AttributionsComponent,\r\n  AttributionComponent,\r\n  SourceMapboxVectorTileComponent\r\n};\r\n\r\nconst COMPONENTS = [\r\n  MapComponent,\r\n\r\n  ViewComponent,\r\n  GraticuleComponent,\r\n\r\n  LayerGroupComponent,\r\n  LayerImageComponent,\r\n  LayerTileComponent,\r\n  LayerVectorComponent,\r\n  LayerVectorTileComponent,\r\n\r\n  SourceOsmComponent,\r\n  SourceBingmapsComponent,\r\n  SourceClusterComponent,\r\n  SourceUTFGridComponent,\r\n  SourceVectorComponent,\r\n  SourceXYZComponent,\r\n  SourceVectorTileComponent,\r\n  SourceTileWMSComponent,\r\n  SourceTileWMTSComponent,\r\n  SourceTileJSONComponent,\r\n  SourceGeoJSONComponent,\r\n  SourceImageStaticComponent,\r\n  SourceImageWMSComponent,\r\n  SourceImageArcGISRestComponent,\r\n  SourceRasterComponent,\r\n  FeatureComponent,\r\n  GeometryLinestringComponent,\r\n  GeometryMultiLinestringComponent,\r\n  GeometryMultiPointComponent,\r\n  GeometryMultiPolygonComponent,\r\n  GeometryPointComponent,\r\n  GeometryPolygonComponent,\r\n  GeometryCircleComponent,\r\n  CoordinateComponent,\r\n  CollectionCoordinatesComponent,\r\n\r\n  StyleComponent,\r\n  StyleCircleComponent,\r\n  StyleFillComponent,\r\n  StyleIconComponent,\r\n  StyleStrokeComponent,\r\n  StyleTextComponent,\r\n\r\n  DefaultControlComponent,\r\n  ControlComponent,\r\n  ControlAttributionComponent,\r\n  ControlFullScreenComponent,\r\n  ControlMousePositionComponent,\r\n  ControlOverviewMapComponent,\r\n  ControlRotateComponent,\r\n  ControlScaleLineComponent,\r\n  ControlZoomComponent,\r\n  ControlZoomSliderComponent,\r\n  ControlZoomToExtentComponent,\r\n\r\n  FormatMVTComponent,\r\n  TileGridComponent,\r\n  TileGridWMTSComponent,\r\n\r\n  DefaultInteractionComponent,\r\n  DoubleClickZoomInteractionComponent,\r\n  DragAndDropInteractionComponent,\r\n  DragBoxInteractionComponent,\r\n  DragPanInteractionComponent,\r\n  DragRotateInteractionComponent,\r\n  DragRotateAndZoomInteractionComponent,\r\n  DragZoomInteractionComponent,\r\n  MouseWheelZoomInteractionComponent,\r\n  PinchZoomInteractionComponent,\r\n  DrawInteractionComponent,\r\n  SelectInteractionComponent,\r\n  ModifyInteractionComponent,\r\n  TranslateInteractionComponent,\r\n\r\n  OverlayComponent,\r\n  ContentComponent,\r\n  AttributionsComponent,\r\n  AttributionComponent,\r\n  SourceMapboxVectorTileComponent\r\n];\r\n\r\n@NgModule({\r\n  declarations: COMPONENTS,\r\n  imports: [CommonModule, HttpClientModule],\r\n  exports: COMPONENTS,\r\n})\r\nexport class AngularOpenlayersModule {\r\n}\r\n"]}